{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport styles from \"../styles/discover.module.css\";\nimport { UserArtists, ArtistTracks } from \"react-spotify-api\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../redux/action\";\n\nclass Artists extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleIndex\", index => {\n      this.setState({\n        currentIndex: index\n      });\n    });\n\n    _defineProperty(this, \"handleSongIndex\", index => {\n      this.setState({\n        hoverIndex: index\n      });\n    });\n\n    _defineProperty(this, \"handleNext\", () => {\n      let coverList = document.querySelector(\".discover_contentCoverList__2BhJd\");\n      let coverItems = document.getElementsByClassName(\"discover_contentCoverContainer__DrO25\");\n      console.log(coverList);\n      let style = window.getComputedStyle(coverList);\n      let right = style.getPropertyValue(\"right\");\n\n      if (parseInt(right.substr(0, right.length - 2)) > (coverItems.length - 1) * 107) {\n        return;\n      }\n\n      let newRight = `${parseInt(right.substr(0, right.length - 2)) + 625}px`;\n      coverList.setAttribute(\"style\", `right:${newRight}`);\n    });\n\n    _defineProperty(this, \"handlePrev\", () => {\n      let coverList = document.querySelector(\".discover_contentCoverList__2BhJd\");\n      console.log(coverList);\n      let style = window.getComputedStyle(coverList);\n      let right = style.getPropertyValue(\"right\");\n\n      if (right === \"0px\") {\n        return;\n      }\n\n      let newRight = `${parseInt(right.substr(0, right.length - 2)) - 625}px`;\n      coverList.setAttribute(\"style\", `right:${newRight}`);\n    });\n\n    _defineProperty(this, \"playSongHandler\", (track, artist) => {\n      console.log(track, \"track\", artist, \"playlist\");\n\n      if (artist) {\n        let uris;\n\n        if (!track) {\n          uris = JSON.stringify({\n            context_uri: artist.uri\n          });\n        } else {\n          uris = JSON.stringify({\n            context_uri: artist.uri,\n            offset: {\n              uri: track.uri\n            }\n          });\n        }\n\n        this.props.playSong(uris);\n      }\n    });\n\n    this.state = {\n      currentIndex: 0,\n      hoverIndex: -1\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      className: styles.coverParent\n    }, __jsx(\"div\", {\n      className: styles.coverContainer\n    }, __jsx(UserArtists, null, (artists, loading, error) => artists && __jsx(\"div\", {\n      className: styles.contentCoverList\n    }, artists.artists.items.map((artist, index) => __jsx(\"div\", {\n      key: artist.id,\n      className: styles.contentCoverContainer,\n      onClick: () => {\n        this.handleIndex(index);\n      }\n    }, __jsx(\"img\", {\n      src: artist.images[1].url,\n      alt: \"\",\n      className: styles.contentCover\n    }), __jsx(\"div\", {\n      className: styles.contentTitle\n    }, artist.name), this.state.currentIndex === index ? __jsx(\"div\", {\n      className: styles.contentSelector\n    }) : null)))), __jsx(\"img\", {\n      src: \"/icons/more.svg\",\n      alt: \"\",\n      className: styles.nextIcon,\n      onClick: () => {\n        this.handleNext();\n      }\n    }), __jsx(\"img\", {\n      src: \"/icons/more.svg\",\n      alt: \"\",\n      className: styles.prevIcon,\n      onClick: () => {\n        this.handlePrev();\n      }\n    }))), __jsx(UserArtists, null, (artists, loading, error) => artists && __jsx(React.Fragment, null, __jsx(ArtistTracks, {\n      id: artists.artists.items[this.state.currentIndex].id\n    }, (tracks, loading, error) => tracks && __jsx(\"div\", null, __jsx(\"div\", {\n      className: styles.contentLine\n    }), __jsx(\"img\", {\n      src: \"/icons/play_with_shadow.svg\",\n      alt: \"\",\n      className: styles.playButtonShadow,\n      onClick: () => this.playSongHandler(null, artists.artists.items[this.state.currentIndex])\n    }), __jsx(\"ul\", {\n      className: styles.contentListContainer\n    }, __jsx(\"div\", {\n      className: styles.songListContainer\n    }, __jsx(\"div\", null, tracks.tracks.map((track, index) => __jsx(\"li\", {\n      key: track.name,\n      className: styles.contentList,\n      onMouseOver: () => {\n        this.handleSongIndex(index);\n      },\n      onMouseLeave: () => {\n        this.handleSongIndex(-1);\n      }\n    }, __jsx(\"div\", {\n      className: styles.indexName\n    }, index + 1), __jsx(\"img\", {\n      src: \"/icons/play.svg\",\n      alt: \"\",\n      className: styles.listPlayIcon,\n      onClick: () => this.playSongHandler(track, artists.artists.items[this.state.currentIndex])\n    }), __jsx(\"div\", {\n      className: styles.trackName\n    }, track.name), __jsx(\"div\", {\n      className: styles.trackArtist\n    }, track.artists[0].name), __jsx(\"div\", {\n      className: styles.trackAlbum\n    }, track.album.name), __jsx(\"img\", {\n      src: \"/icons/more_dot.svg\",\n      alt: \"\",\n      className: styles.moreDot\n    })))))))))), __jsx(\"img\", {\n      src: \"/icons/more.svg\",\n      alt: \"\",\n      className: styles.nextIcon,\n      onClick: () => {\n        this.handleNext();\n      }\n    }), __jsx(\"img\", {\n      src: \"/icons/more.svg\",\n      alt: \"\",\n      className: styles.prevIcon,\n      onClick: () => {\n        this.handlePrev();\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.current_user,\n    currentlyPlaying: state.currently_playing,\n    isPlaying: state.isPlaying\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    playSong: uris => dispatch(actionTypes.playSong(uris))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Artists);","map":{"version":3,"sources":["D:/1-Project/soundify-web/components/Artists.js"],"names":["React","Component","styles","UserArtists","ArtistTracks","connect","actionTypes","Artists","constructor","props","index","setState","currentIndex","hoverIndex","coverList","document","querySelector","coverItems","getElementsByClassName","console","log","style","window","getComputedStyle","right","getPropertyValue","parseInt","substr","length","newRight","setAttribute","track","artist","uris","JSON","stringify","context_uri","uri","offset","playSong","state","render","coverParent","coverContainer","artists","loading","error","contentCoverList","items","map","id","contentCoverContainer","handleIndex","images","url","contentCover","contentTitle","name","contentSelector","nextIcon","handleNext","prevIcon","handlePrev","tracks","contentLine","playButtonShadow","playSongHandler","contentListContainer","songListContainer","contentList","handleSongIndex","indexName","listPlayIcon","trackName","trackArtist","trackAlbum","album","moreDot","mapStateToProps","user","current_user","currentlyPlaying","currently_playing","isPlaying","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport styles from \"../styles/discover.module.css\";\r\nimport { UserArtists, ArtistTracks } from \"react-spotify-api\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../redux/action\";\r\nclass Artists extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentIndex: 0, hoverIndex: -1 };\r\n  }\r\n  handleIndex = (index) => {\r\n    this.setState({ currentIndex: index });\r\n  };\r\n  handleSongIndex = (index) => {\r\n    this.setState({ hoverIndex: index });\r\n  };\r\n  handleNext = () => {\r\n    let coverList = document.querySelector(\".discover_contentCoverList__2BhJd\");\r\n    let coverItems = document.getElementsByClassName(\r\n      \"discover_contentCoverContainer__DrO25\"\r\n    );\r\n    console.log(coverList);\r\n    let style = window.getComputedStyle(coverList);\r\n    let right = style.getPropertyValue(\"right\");\r\n    if (\r\n      parseInt(right.substr(0, right.length - 2)) >\r\n      (coverItems.length - 1) * 107\r\n    ) {\r\n      return;\r\n    }\r\n    let newRight = `${parseInt(right.substr(0, right.length - 2)) + 625}px`;\r\n    coverList.setAttribute(\"style\", `right:${newRight}`);\r\n  };\r\n  handlePrev = () => {\r\n    let coverList = document.querySelector(\".discover_contentCoverList__2BhJd\");\r\n    console.log(coverList);\r\n    let style = window.getComputedStyle(coverList);\r\n    let right = style.getPropertyValue(\"right\");\r\n    if (right === \"0px\") {\r\n      return;\r\n    }\r\n    let newRight = `${parseInt(right.substr(0, right.length - 2)) - 625}px`;\r\n    coverList.setAttribute(\"style\", `right:${newRight}`);\r\n  };\r\n  playSongHandler = (track, artist) => {\r\n    console.log(track, \"track\", artist, \"playlist\");\r\n    if (artist) {\r\n      let uris;\r\n      if (!track) {\r\n        uris = JSON.stringify({\r\n          context_uri: artist.uri,\r\n        });\r\n      } else {\r\n        uris = JSON.stringify({\r\n          context_uri: artist.uri,\r\n          offset: {\r\n            uri: track.uri,\r\n          },\r\n        });\r\n      }\r\n      this.props.playSong(uris);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={styles.coverParent}>\r\n          <div className={styles.coverContainer}>\r\n            <UserArtists>\r\n              {(artists, loading, error) =>\r\n                artists && (\r\n                  <div className={styles.contentCoverList}>\r\n                    {artists.artists.items.map((artist, index) => (\r\n                      <div\r\n                        key={artist.id}\r\n                        className={styles.contentCoverContainer}\r\n                        onClick={() => {\r\n                          this.handleIndex(index);\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src={artist.images[1].url}\r\n                          alt=\"\"\r\n                          className={styles.contentCover}\r\n                        />\r\n\r\n                        <div className={styles.contentTitle}>{artist.name}</div>\r\n                        {this.state.currentIndex === index ? (\r\n                          <div className={styles.contentSelector}></div>\r\n                        ) : null}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )\r\n              }\r\n            </UserArtists>\r\n            <img\r\n              src=\"/icons/more.svg\"\r\n              alt=\"\"\r\n              className={styles.nextIcon}\r\n              onClick={() => {\r\n                this.handleNext();\r\n              }}\r\n            />\r\n            <img\r\n              src=\"/icons/more.svg\"\r\n              alt=\"\"\r\n              className={styles.prevIcon}\r\n              onClick={() => {\r\n                this.handlePrev();\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <UserArtists>\r\n          {(artists, loading, error) =>\r\n            artists && (\r\n              <>\r\n                <ArtistTracks\r\n                  id={artists.artists.items[this.state.currentIndex].id}\r\n                >\r\n                  {(tracks, loading, error) =>\r\n                    tracks && (\r\n                      <div>\r\n                        <div className={styles.contentLine}></div>\r\n                        <img\r\n                          src=\"/icons/play_with_shadow.svg\"\r\n                          alt=\"\"\r\n                          className={styles.playButtonShadow}\r\n                          onClick={() =>\r\n                            this.playSongHandler(\r\n                              null,\r\n                              artists.artists.items[this.state.currentIndex]\r\n                            )\r\n                          }\r\n                        />\r\n\r\n                        <ul className={styles.contentListContainer}>\r\n                          <div className={styles.songListContainer}>\r\n                            <div>\r\n                              {tracks.tracks.map((track, index) => (\r\n                                <li\r\n                                  key={track.name}\r\n                                  className={styles.contentList}\r\n                                  onMouseOver={() => {\r\n                                    this.handleSongIndex(index);\r\n                                  }}\r\n                                  onMouseLeave={() => {\r\n                                    this.handleSongIndex(-1);\r\n                                  }}\r\n                                >\r\n                                  <div className={styles.indexName}>\r\n                                    {index + 1}\r\n                                  </div>\r\n\r\n                                  <img\r\n                                    src=\"/icons/play.svg\"\r\n                                    alt=\"\"\r\n                                    className={styles.listPlayIcon}\r\n                                    onClick={() =>\r\n                                      this.playSongHandler(\r\n                                        track,\r\n                                        artists.artists.items[\r\n                                          this.state.currentIndex\r\n                                        ]\r\n                                      )\r\n                                    }\r\n                                  />\r\n\r\n                                  <div className={styles.trackName}>\r\n                                    {track.name}\r\n                                  </div>\r\n                                  <div className={styles.trackArtist}>\r\n                                    {track.artists[0].name}\r\n                                  </div>\r\n                                  <div className={styles.trackAlbum}>\r\n                                    {track.album.name}\r\n                                  </div>\r\n                                  <img\r\n                                    src=\"/icons/more_dot.svg\"\r\n                                    alt=\"\"\r\n                                    className={styles.moreDot}\r\n                                  />\r\n                                </li>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        </ul>\r\n                      </div>\r\n                    )\r\n                  }\r\n                </ArtistTracks>\r\n              </>\r\n            )\r\n          }\r\n        </UserArtists>\r\n        <img\r\n          src=\"/icons/more.svg\"\r\n          alt=\"\"\r\n          className={styles.nextIcon}\r\n          onClick={() => {\r\n            this.handleNext();\r\n          }}\r\n        />\r\n        <img\r\n          src=\"/icons/more.svg\"\r\n          alt=\"\"\r\n          className={styles.prevIcon}\r\n          onClick={() => {\r\n            this.handlePrev();\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.current_user,\r\n    currentlyPlaying: state.currently_playing,\r\n    isPlaying: state.isPlaying,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    playSong: (uris) => dispatch(actionTypes.playSong(uris)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Artists);\r\n"]},"metadata":{},"sourceType":"module"}