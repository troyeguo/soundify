{"ast":null,"code":"var __jsx = React.createElement;\nimport App from \"next/app\";\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\nimport withRedux from \"../lib/redux\";\nimport Layout from \"../components/Layout\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../redux/action\";\nimport \"../styles/reset.css\";\nimport \"../styles/global.css\";\nimport { SpotifyApiContext, SpotifyApiAxiosContext } from \"react-spotify-api\";\n\nclass Myapp extends App {\n  componentDidMount() {}\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore\n    } = this.props;\n    return __jsx(Provider, {\n      store: reduxStore\n    }, __jsx(Layout, null, __jsx(Component, pageProps)));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUser: user => dispatch({\n      type: actionTypes.SET_USER,\n      user\n    }),\n    fetchRecentlyPlayed: options => dispatch(actionTypes.fetchRecentlyPlayed(options))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withRedux(Myapp)));","map":{"version":3,"sources":["D:/1-Project/soundify-web/pages/_app.js"],"names":["App","Provider","React","withRedux","Layout","connect","actionTypes","SpotifyApiContext","SpotifyApiAxiosContext","Myapp","componentDidMount","render","Component","pageProps","reduxStore","props","mapDispatchToProps","dispatch","setUser","user","type","SET_USER","fetchRecentlyPlayed","options","mapStateToProps","withRouter"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,iBAA7B;AACA,OAAO,qBAAP;AACA,OAAO,sBAAP;AACA,SAASC,iBAAT,EAA4BC,sBAA5B,QAA0D,mBAA1D;;AACA,MAAMC,KAAN,SAAoBT,GAApB,CAAwB;AACtBU,EAAAA,iBAAiB,GAAG,CAAE;;AACtBC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,QAAuC,KAAKC,KAAlD;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED;AAAjB,OACE,MAAC,MAAD,QAEE,MAAC,SAAD,EAAeD,SAAf,CAFF,CADF,CADF;AAQD;;AAZqB;;AAcxB,MAAMG,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,OAAO,EAAGC,IAAD,IAAUF,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEd,WAAW,CAACe,QAApB;AAA8BF,MAAAA;AAA9B,KAAD,CADtB;AAELG,IAAAA,mBAAmB,EAAGC,OAAD,IACnBN,QAAQ,CAACX,WAAW,CAACgB,mBAAZ,CAAgCC,OAAhC,CAAD;AAHL,GAAP;AAKD,CAND;;AAQA,eAAelB,OAAO,CACpBmB,eADoB,EAEpBR,kBAFoB,CAAP,CAGbS,UAAU,CAACtB,SAAS,CAACM,KAAD,CAAV,CAHG,CAAf","sourcesContent":["import App from \"next/app\";\r\nimport { Provider } from \"react-redux\";\r\nimport React from \"react\";\r\nimport withRedux from \"../lib/redux\";\r\nimport Layout from \"../components/Layout\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../redux/action\";\r\nimport \"../styles/reset.css\";\r\nimport \"../styles/global.css\";\r\nimport { SpotifyApiContext, SpotifyApiAxiosContext } from \"react-spotify-api\";\r\nclass Myapp extends App {\r\n  componentDidMount() {}\r\n  render() {\r\n    const { Component, pageProps, reduxStore } = this.props;\r\n    return (\r\n      <Provider store={reduxStore}>\r\n        <Layout>\r\n          {/* 把pageProps解构后传递给组件 */}\r\n          <Component {...pageProps} />\r\n        </Layout>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (user) => dispatch({ type: actionTypes.SET_USER, user }),\r\n    fetchRecentlyPlayed: (options) =>\r\n      dispatch(actionTypes.fetchRecentlyPlayed(options)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(withRedux(Myapp)));\r\n"]},"metadata":{},"sourceType":"module"}