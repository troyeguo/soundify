{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as actionTypes from \"../action\";\nexport const initialState = {\n  current_user: null,\n  recently_played: null,\n  play_now: {\n    type: null,\n    uri: null\n  },\n  currently_playing: null,\n  isPlaying: false,\n  backgroundImage: \"linear-gradient(rgb(58, 91, 95), rgb(6, 9, 10) 85%)\"\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return _objectSpread({}, state, {\n        isLoggedIn: true,\n        current_user: _objectSpread({}, state.current_user, {}, action.user)\n      });\n\n    case actionTypes.SET_RECENTLY_PLAYED:\n      return _objectSpread({}, state, {\n        recently_played: action.recently_played\n      });\n\n    case actionTypes.SET_PLAY_NOW:\n      return _objectSpread({}, state, {\n        play_now: {\n          type: action.uri_type,\n          uri: action.uri\n        }\n      });\n\n    case actionTypes.RESET_PLAY_NOW:\n      return _objectSpread({}, state, {\n        play_now: {\n          type: null,\n          uri: null\n        }\n      });\n\n    case actionTypes.SET_CURRENTLY_PLAYING:\n      return _objectSpread({}, state, {\n        currently_playing: action.song\n      });\n\n    case actionTypes.SET_IS_PLAYING:\n      return _objectSpread({}, state, {\n        isPlaying: action.isPlaying\n      });\n\n    case actionTypes.SET_BACKGROUND_IMAGE:\n      return _objectSpread({}, state, {\n        backgroundImage: action.backgroundImage\n      });\n\n    case actionTypes.PLAY_SONG_START:\n      return _objectSpread({}, state, {\n        play_now: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/1-Project/soundify-web/redux/reducer/index.js"],"names":["actionTypes","initialState","current_user","recently_played","play_now","type","uri","currently_playing","isPlaying","backgroundImage","reducer","state","action","SET_USER","isLoggedIn","user","SET_RECENTLY_PLAYED","SET_PLAY_NOW","uri_type","RESET_PLAY_NOW","SET_CURRENTLY_PLAYING","song","SET_IS_PLAYING","SET_BACKGROUND_IMAGE","PLAY_SONG_START"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,YAAY,EAAE,IADY;AAE1BC,EAAAA,eAAe,EAAE,IAFS;AAG1BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE,IADE;AAERC,IAAAA,GAAG,EAAE;AAFG,GAHgB;AAO1BC,EAAAA,iBAAiB,EAAE,IAPO;AAQ1BC,EAAAA,SAAS,EAAE,KARe;AAS1BC,EAAAA,eAAe,EAAE;AATS,CAArB;;AAYP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACP,IAAf;AACE,SAAKL,WAAW,CAACa,QAAjB;AACE,+BACKF,KADL;AAEEG,QAAAA,UAAU,EAAE,IAFd;AAGEZ,QAAAA,YAAY,oBACPS,KAAK,CAACT,YADC,MAEPU,MAAM,CAACG,IAFA;AAHd;;AAQF,SAAKf,WAAW,CAACgB,mBAAjB;AACE,+BACKL,KADL;AAEER,QAAAA,eAAe,EAAES,MAAM,CAACT;AAF1B;;AAIF,SAAKH,WAAW,CAACiB,YAAjB;AACE,+BACKN,KADL;AAEEP,QAAAA,QAAQ,EAAE;AACRC,UAAAA,IAAI,EAAEO,MAAM,CAACM,QADL;AAERZ,UAAAA,GAAG,EAAEM,MAAM,CAACN;AAFJ;AAFZ;;AAOF,SAAKN,WAAW,CAACmB,cAAjB;AACE,+BACKR,KADL;AAEEP,QAAAA,QAAQ,EAAE;AACRC,UAAAA,IAAI,EAAE,IADE;AAERC,UAAAA,GAAG,EAAE;AAFG;AAFZ;;AAOF,SAAKN,WAAW,CAACoB,qBAAjB;AACE,+BACKT,KADL;AAEEJ,QAAAA,iBAAiB,EAAEK,MAAM,CAACS;AAF5B;;AAIF,SAAKrB,WAAW,CAACsB,cAAjB;AACE,+BACKX,KADL;AAEEH,QAAAA,SAAS,EAAEI,MAAM,CAACJ;AAFpB;;AAIF,SAAKR,WAAW,CAACuB,oBAAjB;AACE,+BACKZ,KADL;AAEEF,QAAAA,eAAe,EAAEG,MAAM,CAACH;AAF1B;;AAIF,SAAKT,WAAW,CAACwB,eAAjB;AACE,+BACKb,KADL;AAEEP,QAAAA,QAAQ,EAAE;AAFZ;;AAIF;AACE,aAAOO,KAAP;AApDJ;AAsDD,CAvDD;;AAyDA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../action\";\r\n\r\nexport const initialState = {\r\n  current_user: null,\r\n  recently_played: null,\r\n  play_now: {\r\n    type: null,\r\n    uri: null,\r\n  },\r\n  currently_playing: null,\r\n  isPlaying: false,\r\n  backgroundImage: \"linear-gradient(rgb(58, 91, 95), rgb(6, 9, 10) 85%)\",\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        current_user: {\r\n          ...state.current_user,\r\n          ...action.user,\r\n        },\r\n      };\r\n    case actionTypes.SET_RECENTLY_PLAYED:\r\n      return {\r\n        ...state,\r\n        recently_played: action.recently_played,\r\n      };\r\n    case actionTypes.SET_PLAY_NOW:\r\n      return {\r\n        ...state,\r\n        play_now: {\r\n          type: action.uri_type,\r\n          uri: action.uri,\r\n        },\r\n      };\r\n    case actionTypes.RESET_PLAY_NOW:\r\n      return {\r\n        ...state,\r\n        play_now: {\r\n          type: null,\r\n          uri: null,\r\n        },\r\n      };\r\n    case actionTypes.SET_CURRENTLY_PLAYING:\r\n      return {\r\n        ...state,\r\n        currently_playing: action.song,\r\n      };\r\n    case actionTypes.SET_IS_PLAYING:\r\n      return {\r\n        ...state,\r\n        isPlaying: action.isPlaying,\r\n      };\r\n    case actionTypes.SET_BACKGROUND_IMAGE:\r\n      return {\r\n        ...state,\r\n        backgroundImage: action.backgroundImage,\r\n      };\r\n    case actionTypes.PLAY_SONG_START:\r\n      return {\r\n        ...state,\r\n        play_now: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}