{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport songList from \"../mock/songs\";\nimport styles from \"../styles/content.module.css\"; // import { UserTracks, UserAlbums, UserPlaylists } from \"react-spotify-api\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nvar menuList = [\"Home\", \"Playlist\", \"Album\", \"Artist\", \"Search\"];\n\nvar Content = function Content(_ref) {\n  var children = _ref.children,\n      router = _ref.router;\n\n  var _useState = useState(0),\n      currentIndex = _useState[0],\n      setCurrentIndex = _useState[1];\n\n  var _useState2 = useState(0),\n      currentContent = _useState2[0],\n      setCurrentContent = _useState2[1];\n\n  var _useState3 = useState(),\n      currentSong = _useState3[0],\n      setCurrentSong = _useState3[1]; // console.log(\"true\");\n\n\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: styles.content\n  }, __jsx(\"div\", {\n    className: styles.contentHeader\n  }, menuList[currentIndex]), __jsx(\"ul\", {\n    className: styles.contentCoverList\n  }, songList().map(function (item, index) {\n    return __jsx(\"li\", {\n      key: item.id,\n      className: styles.contentCoverContainer\n    }, __jsx(\"img\", {\n      src: item.cover,\n      alt: \"\",\n      className: styles.contentCover\n    }), __jsx(\"div\", {\n      className: styles.contentTitle\n    }, item.album), currentContent === index ? __jsx(\"div\", {\n      className: styles.contentSelector\n    }) : null);\n  })), __jsx(\"img\", {\n    src: \"/icons/more.svg\",\n    alt: \"\",\n    style: {\n      marginTop: \"55px\"\n    }\n  }), __jsx(\"div\", {\n    className: styles.contentLine\n  })));\n};\n\nexport default withRouter(Content);","map":{"version":3,"sources":["D:/1-Project/soundify-web/components/Content.js"],"names":["withRouter","useState","songList","styles","useSelector","useDispatch","menuList","Content","children","router","currentIndex","setCurrentIndex","currentContent","setCurrentContent","currentSong","setCurrentSong","content","contentHeader","contentCoverList","map","item","index","id","contentCoverContainer","cover","contentCover","contentTitle","album","contentSelector","marginTop","contentLine"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,8BAAnB,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,IAAMC,QAAQ,GAAG,CAAC,MAAD,EAAS,UAAT,EAAqB,OAArB,EAA8B,QAA9B,EAAwC,QAAxC,CAAjB;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA0B;AAAA,MAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,kBACAR,QAAQ,CAAC,CAAD,CADR;AAAA,MACjCS,YADiC;AAAA,MACnBC,eADmB;;AAAA,mBAEIV,QAAQ,CAAC,CAAD,CAFZ;AAAA,MAEjCW,cAFiC;AAAA,MAEjBC,iBAFiB;;AAAA,mBAGFZ,QAAQ,EAHN;AAAA,MAGjCa,WAHiC;AAAA,MAGpBC,cAHoB,kBAIxC;;;AACA,SACE,mBACE;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACa;AAAvB,KACE;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACc;AAAvB,KAAuCX,QAAQ,CAACI,YAAD,CAA/C,CADF,EAGE;AAAI,IAAA,SAAS,EAAEP,MAAM,CAACe;AAAtB,KACGhB,QAAQ,GAAGiB,GAAX,CAAe,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC/B,WACE;AAAI,MAAA,GAAG,EAAED,IAAI,CAACE,EAAd;AAAkB,MAAA,SAAS,EAAEnB,MAAM,CAACoB;AAApC,OACE;AAAK,MAAA,GAAG,EAAEH,IAAI,CAACI,KAAf;AAAsB,MAAA,GAAG,EAAC,EAA1B;AAA6B,MAAA,SAAS,EAAErB,MAAM,CAACsB;AAA/C,MADF,EAEE;AAAK,MAAA,SAAS,EAAEtB,MAAM,CAACuB;AAAvB,OAAsCN,IAAI,CAACO,KAA3C,CAFF,EAGGf,cAAc,KAAKS,KAAnB,GACC;AAAK,MAAA,SAAS,EAAElB,MAAM,CAACyB;AAAvB,MADD,GAEG,IALN,CADF;AASD,GAVA,CADH,CAHF,EAgBE;AAAK,IAAA,GAAG,EAAC,iBAAT;AAA2B,IAAA,GAAG,EAAC,EAA/B;AAAkC,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb;AAAzC,IAhBF,EAiBE;AAAK,IAAA,SAAS,EAAE1B,MAAM,CAAC2B;AAAvB,IAjBF,CADF,CADF;AA2GD,CAhHD;;AAkHA,eAAe9B,UAAU,CAACO,OAAD,CAAzB","sourcesContent":["import { withRouter } from \"next/router\";\r\nimport { useState } from \"react\";\r\nimport songList from \"../mock/songs\";\r\nimport styles from \"../styles/content.module.css\";\r\n// import { UserTracks, UserAlbums, UserPlaylists } from \"react-spotify-api\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst menuList = [\"Home\", \"Playlist\", \"Album\", \"Artist\", \"Search\"];\r\nconst Content = ({ children, router }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [currentContent, setCurrentContent] = useState(0);\r\n  const [currentSong, setCurrentSong] = useState();\r\n  // console.log(\"true\");\r\n  return (\r\n    <div>\r\n      <div className={styles.content}>\r\n        <div className={styles.contentHeader}>{menuList[currentIndex]}</div>\r\n\r\n        <ul className={styles.contentCoverList}>\r\n          {songList().map((item, index) => {\r\n            return (\r\n              <li key={item.id} className={styles.contentCoverContainer}>\r\n                <img src={item.cover} alt=\"\" className={styles.contentCover} />\r\n                <div className={styles.contentTitle}>{item.album}</div>\r\n                {currentContent === index ? (\r\n                  <div className={styles.contentSelector}></div>\r\n                ) : null}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <img src=\"/icons/more.svg\" alt=\"\" style={{ marginTop: \"55px\" }} />\r\n        <div className={styles.contentLine}></div>\r\n        {\r\n          // <ul className={styles.contentListContainer}>\r\n          //   <img\r\n          //     src=\"/icons/play_with_shadow.svg\"\r\n          //     alt=\"\"\r\n          //     className={styles.playButtonShadow}\r\n          //   />\r\n          //   <UserTracks>\r\n          //     {(tracks) =>\r\n          //       tracks ? (\r\n          //         <>\r\n          //           {tracks.items.map((track) => (\r\n          //             <li\r\n          //               key={track.track.id}\r\n          //               className={styles.contentList}\r\n          //               onMouseOver={() => {\r\n          //                 setCurrentSong(index);\r\n          //               }}\r\n          //               onMouseLeave={() => {\r\n          //                 setCurrentSong();\r\n          //               }}\r\n          //             >\r\n          //               <div>{index + 1}</div>\r\n          //               <img\r\n          //                 src=\"/icons/favorite.svg\"\r\n          //                 alt=\"\"\r\n          //                 style={{ width: \"18px\" }}\r\n          //               />\r\n          //               <div>{track.track.name}</div>\r\n          //             </li>\r\n          //           ))}\r\n          //         </>\r\n          //       ) : null\r\n          //     }\r\n          //   </UserTracks>\r\n          // </ul>\r\n        }\r\n        {\r\n          // <ul className={styles.contentListContainer}>\r\n          //   <img\r\n          //     src=\"/icons/play_with_shadow.svg\"\r\n          //     alt=\"\"\r\n          //     className={styles.playButtonShadow}\r\n          //   />\r\n          //   {songList().map((item, index) => {\r\n          //     return (\r\n          //       <li\r\n          //         key={item.id}\r\n          //         className={styles.contentList}\r\n          //         onMouseOver={() => {\r\n          //           setCurrentSong(index);\r\n          //         }}\r\n          //         onMouseLeave={() => {\r\n          //           setCurrentSong();\r\n          //         }}\r\n          //       >\r\n          //         <div>{index + 1}</div>\r\n          //         <img\r\n          //           src=\"/icons/favorite.svg\"\r\n          //           alt=\"\"\r\n          //           style={{ width: \"18px\" }}\r\n          //         />\r\n          //         <div>{item.song}</div>\r\n          //         {currentSong === index ? (\r\n          //           <>\r\n          //             <img\r\n          //               src=\"/icons/play.svg\"\r\n          //               alt=\"\"\r\n          //               style={{ opacity: 0.61, width: 30 }}\r\n          //             />\r\n          //             <img\r\n          //               src=\"/icons/more_dot.svg\"\r\n          //               alt=\"\"\r\n          //               style={{ width: 20 }}\r\n          //             />\r\n          //           </>\r\n          //         ) : null}\r\n          //         <div>{item.artist}</div>\r\n          //         <div>{item.album}</div>\r\n          //       </li>\r\n          //     );\r\n          //   })}\r\n          // </ul>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Content);\r\n"]},"metadata":{},"sourceType":"module"}