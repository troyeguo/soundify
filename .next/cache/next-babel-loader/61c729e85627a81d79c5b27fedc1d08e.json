{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { withRouter } from \"next/router\";\nimport { SpotifyApiContext, SpotifyApiAxiosContext } from \"react-spotify-api\";\nimport songList from \"../mock/songs\";\nimport styles from \"../styles/content.module.css\";\nimport { UserPlaylists } from \"react-spotify-api\";\nvar menuList = [\"Home\", \"Playlist\", \"Album\", \"Artist\", \"Search\"];\n\nvar Content = /*#__PURE__*/function (_Component) {\n  _inherits(Content, _Component);\n\n  var _super = _createSuper(Content);\n\n  function Content() {\n    var _this;\n\n    _classCallCheck(this, Content);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currentIndex: 0,\n      currentContent: 0\n    });\n\n    return _this;\n  }\n\n  _createClass(Content, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", null, __jsx(\"div\", {\n        className: styles.content\n      }, __jsx(\"div\", {\n        className: styles.contentHeader\n      }, menuList[this.state.currentIndex]), __jsx(\"ul\", {\n        className: styles.contentCoverList\n      }, songList().map(function (item, index) {\n        return __jsx(\"li\", {\n          key: item.id,\n          className: styles.contentCoverContainer\n        }, __jsx(\"img\", {\n          src: item.cover,\n          alt: \"\",\n          className: styles.contentCover\n        }), __jsx(\"div\", {\n          className: styles.contentTitle\n        }, item.album), _this2.state.currentContent === index ? __jsx(\"div\", {\n          className: styles.contentSelector\n        }) : null);\n      })), __jsx(\"img\", {\n        src: \"/icons/more.svg\",\n        alt: \"\",\n        style: {\n          marginTop: \"55px\"\n        }\n      }), __jsx(\"div\", {\n        className: styles.contentLine\n      }), __jsx(\"ul\", {\n        className: styles.contentListContainer\n      }, __jsx(\"img\", {\n        src: \"/icons/play_with_shadow.svg\",\n        alt: \"\",\n        className: styles.playButtonShadow\n      }), __jsx(\"div\", {\n        className: styles.songListContainer\n      }, __jsx(UserPlaylists, null, function (playlists) {\n        return playlists ? __jsx(\"div\", {\n          style: {\n            margin: 0,\n            width: \"100%\"\n          }\n        }, playlists.items.map(function (playlist) {\n          return __jsx(\"div\", {\n            key: playlist.id,\n            link: \"/playlist/\".concat(playlist.id),\n            img: playlist.images.length > 0 ? playlist.images[0].url : null,\n            content: playlist.name,\n            playSong: function playSong() {\n              return props.playSong(JSON.stringify({\n                context_uri: playlist.uri\n              }));\n            }\n          });\n        })) : null;\n      })))));\n    }\n  }]);\n\n  return Content;\n}(Component);\n\nexport default withRouter(Content);","map":{"version":3,"sources":["D:/1-Project/soundify-web/pages/Playlist.js"],"names":["React","Component","withRouter","SpotifyApiContext","SpotifyApiAxiosContext","songList","styles","UserPlaylists","menuList","Content","currentIndex","currentContent","content","contentHeader","state","contentCoverList","map","item","index","id","contentCoverContainer","cover","contentCover","contentTitle","album","contentSelector","marginTop","contentLine","contentListContainer","playButtonShadow","songListContainer","playlists","margin","width","items","playlist","images","length","url","name","props","playSong","JSON","stringify","context_uri","uri"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"next/router\";\r\nimport { SpotifyApiContext, SpotifyApiAxiosContext } from \"react-spotify-api\";\r\nimport songList from \"../mock/songs\";\r\nimport styles from \"../styles/content.module.css\";\r\nimport { UserPlaylists } from \"react-spotify-api\";\r\n\r\nconst menuList = [\"Home\", \"Playlist\", \"Album\", \"Artist\", \"Search\"];\r\nclass Content extends Component {\r\n  state = { currentIndex: 0, currentContent: 0 };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={styles.content}>\r\n          <div className={styles.contentHeader}>\r\n            {menuList[this.state.currentIndex]}\r\n          </div>\r\n\r\n          <ul className={styles.contentCoverList}>\r\n            {songList().map((item, index) => {\r\n              return (\r\n                <li key={item.id} className={styles.contentCoverContainer}>\r\n                  <img\r\n                    src={item.cover}\r\n                    alt=\"\"\r\n                    className={styles.contentCover}\r\n                  />\r\n                  <div className={styles.contentTitle}>{item.album}</div>\r\n                  {this.state.currentContent === index ? (\r\n                    <div className={styles.contentSelector}></div>\r\n                  ) : null}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <img src=\"/icons/more.svg\" alt=\"\" style={{ marginTop: \"55px\" }} />\r\n          <div className={styles.contentLine}></div>\r\n          {\r\n            <ul className={styles.contentListContainer}>\r\n              <img\r\n                src=\"/icons/play_with_shadow.svg\"\r\n                alt=\"\"\r\n                className={styles.playButtonShadow}\r\n              />\r\n              <div className={styles.songListContainer}>\r\n                <UserPlaylists>\r\n                  {(playlists) =>\r\n                    playlists ? (\r\n                      <div style={{ margin: 0, width: \"100%\" }}>\r\n                        {playlists.items.map((playlist) => (\r\n                          <div\r\n                            key={playlist.id}\r\n                            link={`/playlist/${playlist.id}`}\r\n                            img={\r\n                              playlist.images.length > 0\r\n                                ? playlist.images[0].url\r\n                                : null\r\n                            }\r\n                            content={playlist.name}\r\n                            playSong={() =>\r\n                              props.playSong(\r\n                                JSON.stringify({\r\n                                  context_uri: playlist.uri,\r\n                                })\r\n                              )\r\n                            }\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    ) : null\r\n                  }\r\n                </UserPlaylists>\r\n              </div>\r\n            </ul>\r\n          }\r\n          {\r\n            // <ul className={styles.contentListContainer}>\r\n            //   <img\r\n            //     src=\"/icons/play_with_shadow.svg\"\r\n            //     alt=\"\"\r\n            //     className={styles.playButtonShadow}\r\n            //   />\r\n            //   {songList().map((item, index) => {\r\n            //     return (\r\n            //       <li\r\n            //         key={item.id}\r\n            //         className={styles.contentList}\r\n            //         onMouseOver={() => {\r\n            //           setCurrentSong(index);\r\n            //         }}\r\n            //         onMouseLeave={() => {\r\n            //           setCurrentSong();\r\n            //         }}\r\n            //       >\r\n            //         <div>{index + 1}</div>\r\n            //         <img\r\n            //           src=\"/icons/favorite.svg\"\r\n            //           alt=\"\"\r\n            //           style={{ width: \"18px\" }}\r\n            //         />\r\n            //         <div>{item.song}</div>\r\n            //         {currentSong === index ? (\r\n            //           <>\r\n            //             <img\r\n            //               src=\"/icons/play.svg\"\r\n            //               alt=\"\"\r\n            //               style={{ opacity: 0.61, width: 30 }}\r\n            //             />\r\n            //             <img\r\n            //               src=\"/icons/more_dot.svg\"\r\n            //               alt=\"\"\r\n            //               style={{ width: 20 }}\r\n            //             />\r\n            //           </>\r\n            //         ) : null}\r\n            //         <div>{item.artist}</div>\r\n            //         <div>{item.album}</div>\r\n            //       </li>\r\n            //     );\r\n            //   })}\r\n            // </ul>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Content);\r\n"]},"metadata":{},"sourceType":"module"}