{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport getConfig from \"next/config\";\nimport Router, { withRouter } from \"next/router\";\nimport { useSelector } from \"react-redux\";\nimport { request } from \"../lib/api\";\nimport initCache from \"../lib/clientCache\";\nimport Content from \"../components/Content\";\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar _initCache = initCache(),\n    cache = _initCache.cache,\n    useCache = _initCache.useCache;\n\nvar Index = function Index(_ref) {\n  var userRepos = _ref.userRepos,\n      starred = _ref.starred,\n      router = _ref.router;\n  // const user = useSelector((store) => store.user);\n  // const tabKey = router.query.key || \"1\";\n  // useCache(\"cache\", {\n  //   userRepos,\n  //   starred,\n  // });\n  // if (!user || !user.id) {\n  //   // console.log(\"fase\");\n  //   return (\n  //     <div\n  //       className=\"root\"\n  //       style={{ position: \"absolute\", left: 200, top: 100 }}\n  //     >\n  //       <p>亲，您还没有登录哦</p>\n  //       <a href={publicRuntimeConfig.OAUTH_URL}>点击登录</a>\n  //     </div>\n  //   );\n  // }\n  // const { avatar_url, login, name, bio, email } = user;\n  return __jsx(Content, null);\n};\n\nIndex.getInitialProps = cache(function _callee(_ref2) {\n  var ctx, reduxStore, _reduxStore$getState, user;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          ctx = _ref2.ctx, reduxStore = _ref2.reduxStore;\n          判断用户是否登出;\n          _reduxStore$getState = reduxStore.getState(), user = _reduxStore$getState.user;\n\n          if (!(!user || !user.id)) {\n            _context.next = 5;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {});\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n});\nexport default withRouter(Index);","map":{"version":3,"sources":["D:/1-Project/soundify-web/pages/index.js"],"names":["getConfig","Router","withRouter","useSelector","request","initCache","Content","publicRuntimeConfig","cache","useCache","Index","userRepos","starred","router","getInitialProps","ctx","reduxStore","判断用户是否登出","getState","user","id"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,aAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;iBACgCN,SAAS,E;IAAjCO,mB,cAAAA,mB;;iBAEoBF,SAAS,E;IAA7BG,K,cAAAA,K;IAAOC,Q,cAAAA,Q;;AAEf,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAoC;AAAA,MAAjCC,SAAiC,QAAjCA,SAAiC;AAAA,MAAtBC,OAAsB,QAAtBA,OAAsB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAChD;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAAO,MAAC,OAAD,OAAP;AACD,CAzBD;;AA2BAH,KAAK,CAACI,eAAN,GAAwBN,KAAK,CAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASO,UAAAA,GAAT,SAASA,GAAT,EAAcC,UAAd,SAAcA,UAAd;AAC5BC,UAAAA,QAAQ;AADoB,iCAEXD,UAAU,CAACE,QAAX,EAFW,EAEpBC,IAFoB,wBAEpBA,IAFoB;;AAAA,gBAGxB,CAACA,IAAD,IAAS,CAACA,IAAI,CAACC,EAHS;AAAA;AAAA;AAAA;;AAAA,2CAInB,EAJmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD,CAA7B;AAQA,eAAelB,UAAU,CAACQ,KAAD,CAAzB","sourcesContent":["import getConfig from \"next/config\";\nimport Router, { withRouter } from \"next/router\";\nimport { useSelector } from \"react-redux\";\nimport { request } from \"../lib/api\";\nimport initCache from \"../lib/clientCache\";\nimport Content from \"../components/Content\";\nconst { publicRuntimeConfig } = getConfig();\n\nconst { cache, useCache } = initCache();\n\nconst Index = ({ userRepos, starred, router }) => {\n  // const user = useSelector((store) => store.user);\n  // const tabKey = router.query.key || \"1\";\n\n  // useCache(\"cache\", {\n  //   userRepos,\n  //   starred,\n  // });\n\n  // if (!user || !user.id) {\n  //   // console.log(\"fase\");\n  //   return (\n  //     <div\n  //       className=\"root\"\n  //       style={{ position: \"absolute\", left: 200, top: 100 }}\n  //     >\n  //       <p>亲，您还没有登录哦</p>\n  //       <a href={publicRuntimeConfig.OAUTH_URL}>点击登录</a>\n  //     </div>\n  //   );\n  // }\n\n  // const { avatar_url, login, name, bio, email } = user;\n\n  return <Content />;\n};\n\nIndex.getInitialProps = cache(async ({ ctx, reduxStore }) => {\n  判断用户是否登出;\n  const { user } = reduxStore.getState();\n  if (!user || !user.id) {\n    return {};\n  }\n});\n\nexport default withRouter(Index);\n"]},"metadata":{},"sourceType":"module"}