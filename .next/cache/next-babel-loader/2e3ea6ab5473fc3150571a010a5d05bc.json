{"ast":null,"code":"var _jsxFileName = \"D:\\\\1-Project\\\\soundify-web\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport getConfig from \"next/config\";\nimport Router, { withRouter } from \"next/router\";\nimport { useSelector } from \"react-redux\";\nimport { request } from \"../lib/api\";\nimport initCache from \"../lib/clientCache\";\nimport Content from \"../components/Content\";\nconst {\n  publicRuntimeConfig\n} = getConfig();\nconst {\n  cache,\n  useCache\n} = initCache();\n\nconst Index = ({\n  userRepos,\n  starred,\n  router\n}) => {\n  const user = useSelector(store => store.user);\n  const tabKey = router.query.key || \"1\";\n  useCache(\"cache\", {\n    userRepos,\n    starred\n  });\n\n  if (!user || !user.id) {\n    console.log(\"fase\");\n    return __jsx(\"div\", {\n      className: \"root\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"\\u4EB2\\uFF0C\\u60A8\\u8FD8\\u6CA1\\u6709\\u767B\\u5F55\\u54E6\"), __jsx(\"a\", {\n      href: publicRuntimeConfig.OAUTH_URL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, \"\\u70B9\\u51FB\\u767B\\u5F55\"));\n  }\n\n  const {\n    avatar_url,\n    login,\n    name,\n    bio,\n    email\n  } = user;\n  return __jsx(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  });\n};\n\nIndex.getInitialProps = cache(async ({\n  ctx,\n  reduxStore\n}) => {\n  //判断用户是否登出\n  const {\n    user\n  } = reduxStore.getState();\n\n  if (!user || !user.id) {\n    return {};\n  }\n});\nexport default withRouter(Index);","map":{"version":3,"sources":["D:/1-Project/soundify-web/pages/index.js"],"names":["getConfig","Router","withRouter","useSelector","request","initCache","Content","publicRuntimeConfig","cache","useCache","Index","userRepos","starred","router","user","store","tabKey","query","key","id","console","log","OAUTH_URL","avatar_url","login","name","bio","email","getInitialProps","ctx","reduxStore","getState"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,aAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAA0BP,SAAS,EAAzC;AAEA,MAAM;AAAEQ,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAsBJ,SAAS,EAArC;;AAEA,MAAMK,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KAAoC;AAChD,QAAMC,IAAI,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAME,MAAM,GAAGH,MAAM,CAACI,KAAP,CAAaC,GAAb,IAAoB,GAAnC;AAEAT,EAAAA,QAAQ,CAAC,OAAD,EAAU;AAChBE,IAAAA,SADgB;AAEhBC,IAAAA;AAFgB,GAAV,CAAR;;AAKA,MAAI,CAACE,IAAD,IAAS,CAACA,IAAI,CAACK,EAAnB,EAAuB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEADF,EAEE;AAAG,MAAA,IAAI,EAAEd,mBAAmB,CAACe,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,CADF;AAMD;;AAED,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,IAArB;AAA2BC,IAAAA,GAA3B;AAAgCC,IAAAA;AAAhC,MAA0Cb,IAAhD;AAEA,SAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAtBD;;AAwBAJ,KAAK,CAACkB,eAAN,GAAwBpB,KAAK,CAAC,OAAO;AAAEqB,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAA+B;AAC3D;AACA,QAAM;AAAEhB,IAAAA;AAAF,MAAWgB,UAAU,CAACC,QAAX,EAAjB;;AACA,MAAI,CAACjB,IAAD,IAAS,CAACA,IAAI,CAACK,EAAnB,EAAuB;AACrB,WAAO,EAAP;AACD;AACF,CAN4B,CAA7B;AAQA,eAAejB,UAAU,CAACQ,KAAD,CAAzB","sourcesContent":["import getConfig from \"next/config\";\nimport Router, { withRouter } from \"next/router\";\nimport { useSelector } from \"react-redux\";\nimport { request } from \"../lib/api\";\nimport initCache from \"../lib/clientCache\";\nimport Content from \"../components/Content\";\nconst { publicRuntimeConfig } = getConfig();\n\nconst { cache, useCache } = initCache();\n\nconst Index = ({ userRepos, starred, router }) => {\n  const user = useSelector((store) => store.user);\n  const tabKey = router.query.key || \"1\";\n\n  useCache(\"cache\", {\n    userRepos,\n    starred,\n  });\n\n  if (!user || !user.id) {\n    console.log(\"fase\");\n    return (\n      <div className=\"root\">\n        <p>亲，您还没有登录哦</p>\n        <a href={publicRuntimeConfig.OAUTH_URL}>点击登录</a>\n      </div>\n    );\n  }\n\n  const { avatar_url, login, name, bio, email } = user;\n\n  return <Content />;\n};\n\nIndex.getInitialProps = cache(async ({ ctx, reduxStore }) => {\n  //判断用户是否登出\n  const { user } = reduxStore.getState();\n  if (!user || !user.id) {\n    return {};\n  }\n});\n\nexport default withRouter(Index);\n"]},"metadata":{},"sourceType":"module"}