{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport initFirebase from './initFirebase';\nimport { setSession } from './firebaseSessionHandler';\nimport { createAuthUserInfo } from './user';\ninitFirebase(); // https://benmcmahen.com/using-firebase-with-react-hooks/\n// Defaults to empty AuthUserInfo object.\n\nexport var AuthUserInfoContext = React.createContext(createAuthUserInfo());\nexport var useAuthUserInfo = function useAuthUserInfo() {\n  return React.useContext(AuthUserInfoContext);\n}; // Returns a Firebase JS SDK user object.\n\nexport var useFirebaseAuth = function useFirebaseAuth() {\n  var _useState = useState(function () {\n    var user = firebase.auth().currentUser;\n    return {\n      initializing: !user,\n      user: user\n    };\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  function onChange(user) {\n    setState({\n      initializing: false,\n      user: user\n    }); // Call server to update session.\n\n    setSession(user);\n  }\n\n  useEffect(function () {\n    // Listen for auth state changes.\n    var unsubscribe = firebase.auth().onAuthStateChanged(onChange); // Unsubscribe to the listener when unmounting.\n\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  return state;\n};","map":{"version":3,"sources":["D:/1-Project/soundify-web/utils/auth/hooks.js"],"names":["React","useEffect","useState","firebase","initFirebase","setSession","createAuthUserInfo","AuthUserInfoContext","createContext","useAuthUserInfo","useContext","useFirebaseAuth","user","auth","currentUser","initializing","state","setState","onChange","unsubscribe","onAuthStateChanged"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,kBAAT,QAAmC,QAAnC;AAEAF,YAAY,G,CAEZ;AAEA;;AACA,OAAO,IAAMG,mBAAmB,GAAGP,KAAK,CAACQ,aAAN,CAAoBF,kBAAkB,EAAtC,CAA5B;AAEP,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACnC,SAAOT,KAAK,CAACU,UAAN,CAAiBH,mBAAjB,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA,kBACTT,QAAQ,CAAC,YAAM;AACvC,QAAMU,IAAI,GAAGT,QAAQ,CAACU,IAAT,GAAgBC,WAA7B;AACA,WAAO;AACLC,MAAAA,YAAY,EAAE,CAACH,IADV;AAELA,MAAAA,IAAI,EAAJA;AAFK,KAAP;AAID,GANiC,CADC;AAAA,MAC5BI,KAD4B;AAAA,MACrBC,QADqB;;AASnC,WAASC,QAAT,CAAkBN,IAAlB,EAAwB;AACtBK,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,YAAY,EAAE,KAAhB;AAAuBH,MAAAA,IAAI,EAAJA;AAAvB,KAAD,CAAR,CADsB,CAGtB;;AACAP,IAAAA,UAAU,CAACO,IAAD,CAAV;AACD;;AAEDX,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAMkB,WAAW,GAAGhB,QAAQ,CAACU,IAAT,GAAgBO,kBAAhB,CAAmCF,QAAnC,CAApB,CAFc,CAId;;AACA,WAAO;AAAA,aAAMC,WAAW,EAAjB;AAAA,KAAP;AACD,GANQ,EAMN,EANM,CAAT;AAQA,SAAOH,KAAP;AACD,CAzBM","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport initFirebase from './initFirebase'\nimport { setSession } from './firebaseSessionHandler'\nimport { createAuthUserInfo } from './user'\n\ninitFirebase()\n\n// https://benmcmahen.com/using-firebase-with-react-hooks/\n\n// Defaults to empty AuthUserInfo object.\nexport const AuthUserInfoContext = React.createContext(createAuthUserInfo())\n\nexport const useAuthUserInfo = () => {\n  return React.useContext(AuthUserInfoContext)\n}\n\n// Returns a Firebase JS SDK user object.\nexport const useFirebaseAuth = () => {\n  const [state, setState] = useState(() => {\n    const user = firebase.auth().currentUser\n    return {\n      initializing: !user,\n      user,\n    }\n  })\n\n  function onChange(user) {\n    setState({ initializing: false, user })\n\n    // Call server to update session.\n    setSession(user)\n  }\n\n  useEffect(() => {\n    // Listen for auth state changes.\n    const unsubscribe = firebase.auth().onAuthStateChanged(onChange)\n\n    // Unsubscribe to the listener when unmounting.\n    return () => unsubscribe()\n  }, [])\n\n  return state\n}\n"]},"metadata":{},"sourceType":"module"}