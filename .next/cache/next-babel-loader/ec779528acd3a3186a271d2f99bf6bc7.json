{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport useApiRequest from '../ApiRequest/useApiRequest';\n\nfunction useSearch(query, options) {\n  var url = 'https://api.spotify.com/v1/search';\n  var type = [];\n  if (options.album) type.push('album');\n  if (options.artist) type.push('artist');\n  if (options.playlist) type.push('playlist');\n  if (options.track) type.push('track');\n\n  var optionsObj = _objectSpread({\n    q: query,\n    type: type.join(',')\n  }, options);\n\n  var _useApiRequest = useApiRequest(url, optionsObj),\n      data = _useApiRequest.data,\n      loading = _useApiRequest.loading,\n      error = _useApiRequest.error;\n\n  return {\n    data: data,\n    loading: loading,\n    error: error\n  };\n}\n\nexport default useSearch;","map":null,"metadata":{},"sourceType":"module"}