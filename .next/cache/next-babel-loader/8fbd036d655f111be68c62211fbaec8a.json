{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport styles from \"../styles/home.module.css\";\nimport { UserTracks } from \"react-spotify-api\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleClick\", index => {\n      this.setState({\n        index\n      });\n      this.props.handleIndex(index);\n    });\n\n    this.state = {\n      index: 0\n    };\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: styles.coverParent\n    }, __jsx(\"div\", {\n      className: styles.contentCoverContainer,\n      onClick: () => {\n        this.handleClick(0);\n      }\n    }, __jsx(\"div\", {\n      className: styles.contentTitle\n    }, \"All Songs\"), this.state.index === 0 ? __jsx(\"div\", {\n      className: styles.contentSelector\n    }) : null), __jsx(\"div\", {\n      className: styles.contentCoverContainer,\n      onClick: () => {\n        this.handleClick(1);\n      }\n    }, __jsx(\"div\", {\n      className: styles.contentTitle\n    }, \"Recently Played\"), this.state.index === 1 ? __jsx(\"div\", {\n      className: styles.contentSelector\n    }) : null)), __jsx(\"div\", null, __jsx(\"div\", {\n      className: styles.contentLine\n    }), __jsx(\"ul\", {\n      className: styles.contentListContainer\n    }, __jsx(\"img\", {\n      src: \"/icons/play_with_shadow.svg\",\n      alt: \"\",\n      className: styles.playButtonShadow\n    }), __jsx(\"div\", {\n      className: styles.songListContainer\n    }, this.props.tracks ? __jsx(React.Fragment, null, this.props.tracks.map((track, index) => __jsx(\"li\", {\n      key: track.played_at,\n      className: styles.contentList\n    }, __jsx(\"div\", null, index + 1), __jsx(\"img\", {\n      src: \"/icons/favorite.svg\",\n      alt: \"\",\n      style: {\n        width: \"18px\"\n      }\n    }), __jsx(\"div\", null, track.track.name), __jsx(\"div\", null, track.track.artists[0].name), __jsx(\"div\", null, track.track.album.name)))) : __jsx(UserTracks, null, tracks => tracks ? __jsx(React.Fragment, null, tracks.items.map((track, index) => __jsx(\"li\", {\n      key: track.track.id,\n      className: styles.contentList\n    }, __jsx(\"div\", null, index + 1), __jsx(\"img\", {\n      src: \"/icons/favorite.svg\",\n      alt: \"\",\n      style: {\n        width: \"18px\"\n      }\n    }), __jsx(\"div\", null, track.track.name), __jsx(\"div\", null, track.track.artists[0].name), __jsx(\"div\", null, track.track.album.name)))) : null)))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["D:/1-Project/soundify-web/components/Home.js"],"names":["React","Component","styles","UserTracks","Home","constructor","props","index","setState","handleIndex","state","render","coverParent","contentCoverContainer","handleClick","contentTitle","contentSelector","contentLine","contentListContainer","playButtonShadow","songListContainer","tracks","map","track","played_at","contentList","width","name","artists","album","items","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport styles from \"../styles/home.module.css\";\r\nimport { UserTracks } from \"react-spotify-api\";\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { index: 0 };\r\n  }\r\n  handleClick = (index) => {\r\n    this.setState({ index });\r\n    this.props.handleIndex(index);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={styles.coverParent}>\r\n          <div\r\n            className={styles.contentCoverContainer}\r\n            onClick={() => {\r\n              this.handleClick(0);\r\n            }}\r\n          >\r\n            <div className={styles.contentTitle}>All Songs</div>\r\n            {this.state.index === 0 ? (\r\n              <div className={styles.contentSelector}></div>\r\n            ) : null}\r\n          </div>\r\n          <div\r\n            className={styles.contentCoverContainer}\r\n            onClick={() => {\r\n              this.handleClick(1);\r\n            }}\r\n          >\r\n            <div className={styles.contentTitle}>Recently Played</div>\r\n            {this.state.index === 1 ? (\r\n              <div className={styles.contentSelector}></div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className={styles.contentLine}></div>\r\n          {\r\n            <ul className={styles.contentListContainer}>\r\n              <img\r\n                src=\"/icons/play_with_shadow.svg\"\r\n                alt=\"\"\r\n                className={styles.playButtonShadow}\r\n              />\r\n              <div className={styles.songListContainer}>\r\n                {this.props.tracks ? (\r\n                  <>\r\n                    {this.props.tracks.map((track, index) => (\r\n                      <li key={track.played_at} className={styles.contentList}>\r\n                        <div>{index + 1}</div>\r\n                        <img\r\n                          src=\"/icons/favorite.svg\"\r\n                          alt=\"\"\r\n                          style={{ width: \"18px\" }}\r\n                        />\r\n                        <div>{track.track.name}</div>\r\n                        <div>{track.track.artists[0].name}</div>\r\n                        <div>{track.track.album.name}</div>\r\n                      </li>\r\n                    ))}\r\n                  </>\r\n                ) : (\r\n                  <UserTracks>\r\n                    {(tracks) =>\r\n                      tracks ? (\r\n                        <>\r\n                          {tracks.items.map((track, index) => (\r\n                            <li\r\n                              key={track.track.id}\r\n                              className={styles.contentList}\r\n                            >\r\n                              <div>{index + 1}</div>\r\n                              <img\r\n                                src=\"/icons/favorite.svg\"\r\n                                alt=\"\"\r\n                                style={{ width: \"18px\" }}\r\n                              />\r\n                              <div>{track.track.name}</div>\r\n                              <div>{track.track.artists[0].name}</div>\r\n                              <div>{track.track.album.name}</div>\r\n                            </li>\r\n                          ))}\r\n                        </>\r\n                      ) : null\r\n                    }\r\n                  </UserTracks>\r\n                )}\r\n              </div>\r\n            </ul>\r\n          }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}