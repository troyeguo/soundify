{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport initFirebase from './initFirebase';\nimport { setSession } from './firebaseSessionHandler';\nimport { createAuthUserInfo } from './user';\ninitFirebase(); // https://benmcmahen.com/using-firebase-with-react-hooks/\n// Defaults to empty AuthUserInfo object.\n\nexport const AuthUserInfoContext = React.createContext(createAuthUserInfo());\nexport const useAuthUserInfo = () => {\n  return React.useContext(AuthUserInfoContext);\n}; // Returns a Firebase JS SDK user object.\n\nexport const useFirebaseAuth = () => {\n  const {\n    0: state,\n    1: setState\n  } = useState(() => {\n    const user = firebase.auth().currentUser;\n    return {\n      initializing: !user,\n      user\n    };\n  });\n\n  function onChange(user) {\n    setState({\n      initializing: false,\n      user\n    }); // Call server to update session.\n\n    setSession(user);\n  }\n\n  useEffect(() => {\n    // Listen for auth state changes.\n    const unsubscribe = firebase.auth().onAuthStateChanged(onChange); // Unsubscribe to the listener when unmounting.\n\n    return () => unsubscribe();\n  }, []);\n  return state;\n};","map":{"version":3,"sources":["D:/1-Project/soundify-web/utils/auth/hooks.js"],"names":["React","useEffect","useState","firebase","initFirebase","setSession","createAuthUserInfo","AuthUserInfoContext","createContext","useAuthUserInfo","useContext","useFirebaseAuth","state","setState","user","auth","currentUser","initializing","onChange","unsubscribe","onAuthStateChanged"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,kBAAT,QAAmC,QAAnC;AAEAF,YAAY,G,CAEZ;AAEA;;AACA,OAAO,MAAMG,mBAAmB,GAAGP,KAAK,CAACQ,aAAN,CAAoBF,kBAAkB,EAAtC,CAA5B;AAEP,OAAO,MAAMG,eAAe,GAAG,MAAM;AACnC,SAAOT,KAAK,CAACU,UAAN,CAAiBH,mBAAjB,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAMI,eAAe,GAAG,MAAM;AACnC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,MAAM;AACvC,UAAMY,IAAI,GAAGX,QAAQ,CAACY,IAAT,GAAgBC,WAA7B;AACA,WAAO;AACLC,MAAAA,YAAY,EAAE,CAACH,IADV;AAELA,MAAAA;AAFK,KAAP;AAID,GANiC,CAAlC;;AAQA,WAASI,QAAT,CAAkBJ,IAAlB,EAAwB;AACtBD,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,YAAY,EAAE,KAAhB;AAAuBH,MAAAA;AAAvB,KAAD,CAAR,CADsB,CAGtB;;AACAT,IAAAA,UAAU,CAACS,IAAD,CAAV;AACD;;AAEDb,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMkB,WAAW,GAAGhB,QAAQ,CAACY,IAAT,GAAgBK,kBAAhB,CAAmCF,QAAnC,CAApB,CAFc,CAId;;AACA,WAAO,MAAMC,WAAW,EAAxB;AACD,GANQ,EAMN,EANM,CAAT;AAQA,SAAOP,KAAP;AACD,CAzBM","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport initFirebase from './initFirebase'\nimport { setSession } from './firebaseSessionHandler'\nimport { createAuthUserInfo } from './user'\n\ninitFirebase()\n\n// https://benmcmahen.com/using-firebase-with-react-hooks/\n\n// Defaults to empty AuthUserInfo object.\nexport const AuthUserInfoContext = React.createContext(createAuthUserInfo())\n\nexport const useAuthUserInfo = () => {\n  return React.useContext(AuthUserInfoContext)\n}\n\n// Returns a Firebase JS SDK user object.\nexport const useFirebaseAuth = () => {\n  const [state, setState] = useState(() => {\n    const user = firebase.auth().currentUser\n    return {\n      initializing: !user,\n      user,\n    }\n  })\n\n  function onChange(user) {\n    setState({ initializing: false, user })\n\n    // Call server to update session.\n    setSession(user)\n  }\n\n  useEffect(() => {\n    // Listen for auth state changes.\n    const unsubscribe = firebase.auth().onAuthStateChanged(onChange)\n\n    // Unsubscribe to the listener when unmounting.\n    return () => unsubscribe()\n  }, [])\n\n  return state\n}\n"]},"metadata":{},"sourceType":"module"}