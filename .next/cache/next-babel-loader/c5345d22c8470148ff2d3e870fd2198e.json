{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Router, { withRouter } from \"next/router\";\nimport * as actionTypes from \"../redux/action\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport Login from \"../components/Login\";\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"logInUserAndGetInfo\", newUser => {\n      console.log(\"LOG IN\", newUser); // console.log(this.props);\n\n      localStorage.setItem(\"newUser\", JSON.stringify(newUser));\n      this.props.setUser(newUser); // set user in redux state\n\n      console.log(\"test\");\n      Router.push(\"/Home\");\n    });\n\n    this.state = {\n      token: null\n    };\n    this.token = null;\n  }\n\n  componentDidMount() {\n    this.setState({\n      token: localStorage.getItem(\"react-spotify-access-token\")\n    }, () => {\n      // console.log(this.state.token, \"token\");\n      if (this.state.token !== undefined && this.state.token !== \"undefined\" && this.state.token) {\n        Router.push(\"/Home\");\n      }\n    }); // console.log(this.props, \"cdm\");\n\n    let params = this.getHashParams(); // If access token doesn't exist in has params, try to take it from local storage\n\n    if (params.access_token === \"undefined\") {\n      const currentAccessToken = localStorage.getItem(\"react-spotify-access-token\");\n\n      if (currentAccessToken) {\n        params.access_token = currentAccessToken;\n      }\n    } // console.log(\"Params after\", params);\n\n\n    if (params.access_token && params.access_token !== undefined && params.access_token !== \"undefined\") {\n      localStorage.setItem(\"react-spotify-access-token\", params.access_token);\n      axios.get(\"https://api.spotify.com/v1/me\", {\n        headers: {\n          Authorization: `Bearer ${params.access_token}`\n        }\n      }).then(({\n        data\n      }) => {\n        console.log(data, \"data\");\n\n        if (params.refresh_token) {\n          localStorage.setItem(\"react-spotify-refresh-token\", params.refresh_token);\n        }\n\n        console.log(res, data);\n        let newUser = {\n          access_token: res.data.access_token,\n          displayName: data.display_name,\n          email: data.email,\n          display_name: data.display_name,\n          type: data.type,\n          country: data.country,\n          product: data.product,\n          avatar: data.images[0].url\n        };\n        console.log(newUser, \"newUser\");\n        this.logInUserAndGetInfo(newUser);\n      }).catch(err => {\n        console.log(err, \"fgjxfjxf\"); // 401 = Unauthorized - the access token is incorrect (expired)\n\n        if (err || err.response.status === 401) {\n          // Check if refresh token exists\n          const refreshToken = localStorage.getItem(\"react-spotify-refresh-token\");\n\n          if (refreshToken) {\n            // Send refresh token to server to acquire a new access token\n            axios.post(\"http://localhost:3000/refresh\", {\n              data: JSON.stringify({\n                refresh_token: refreshToken\n              })\n            }).then(res => {\n              console.log(\"Refresh token response -\", res.data);\n              axios.get(\"https://api.spotify.com/v1/me\", {\n                headers: {\n                  Authorization: `Bearer ${res.data.access_token}`\n                }\n              }).then(({\n                data\n              }) => {\n                localStorage.setItem(\"react-spotify-access-token\", res.data.access_token);\n                console.log(res, data);\n                let newUser = {\n                  access_token: res.data.access_token,\n                  displayName: data.display_name,\n                  email: data.email,\n                  display_name: data.display_name,\n                  type: data.type,\n                  country: data.country,\n                  product: data.product,\n                  avatar: data.images[0].url\n                };\n                this.logInUserAndGetInfo(newUser);\n              });\n            }).catch(e => {\n              console.log(\"Refresh token error -\", e);\n            }).finally(() => {\n              this.setState({\n                loading: false\n              });\n            });\n          } else {\n            // Refresh token doesn't exist, the user is shown a 'login with Spotify button'\n            this.setState({\n              loading: false\n            });\n          }\n        }\n      });\n    } else {\n      // The user is shown a 'login with Spotify button'\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    console.log(hashParams, \"hashParams\");\n    return hashParams;\n  }\n\n  render() {\n    // console.log(this.props, \"user\");\n    return __jsx(Login, null);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.current_user,\n    backgroundImage: state.backgroundImage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUser: user => dispatch({\n      type: actionTypes.SET_USER,\n      user\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index));","map":{"version":3,"sources":["D:/1-Project/soundify-web/pages/index.js"],"names":["React","Component","Router","withRouter","actionTypes","axios","connect","Login","Index","constructor","props","newUser","console","log","localStorage","setItem","JSON","stringify","setUser","push","state","token","componentDidMount","setState","getItem","undefined","params","getHashParams","access_token","currentAccessToken","get","headers","Authorization","then","data","refresh_token","res","displayName","display_name","email","type","country","product","avatar","images","url","logInUserAndGetInfo","catch","err","response","status","refreshToken","post","e","finally","loading","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","render","mapStateToProps","user","current_user","backgroundImage","mapDispatchToProps","dispatch","SET_USER"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Router, { withRouter } from \"next/router\";\r\nimport * as actionTypes from \"../redux/action\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"../components/Login\";\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { token: null };\r\n    this.token = null;\r\n  }\r\n  componentDidMount() {\r\n    this.setState(\r\n      {\r\n        token: localStorage.getItem(\"react-spotify-access-token\"),\r\n      },\r\n      () => {\r\n        // console.log(this.state.token, \"token\");\r\n        if (\r\n          this.state.token !== undefined &&\r\n          this.state.token !== \"undefined\" &&\r\n          this.state.token\r\n        ) {\r\n          Router.push(\"/Home\");\r\n        }\r\n      }\r\n    );\r\n\r\n    // console.log(this.props, \"cdm\");\r\n    let params = this.getHashParams();\r\n\r\n    // If access token doesn't exist in has params, try to take it from local storage\r\n    if (params.access_token === \"undefined\") {\r\n      const currentAccessToken = localStorage.getItem(\r\n        \"react-spotify-access-token\"\r\n      );\r\n\r\n      if (currentAccessToken) {\r\n        params.access_token = currentAccessToken;\r\n      }\r\n    }\r\n    // console.log(\"Params after\", params);\r\n    if (\r\n      params.access_token &&\r\n      params.access_token !== undefined &&\r\n      params.access_token !== \"undefined\"\r\n    ) {\r\n      localStorage.setItem(\"react-spotify-access-token\", params.access_token);\r\n      axios\r\n        .get(\"https://api.spotify.com/v1/me\", {\r\n          headers: {\r\n            Authorization: `Bearer ${params.access_token}`,\r\n          },\r\n        })\r\n        .then(({ data }) => {\r\n          console.log(data, \"data\");\r\n          if (params.refresh_token) {\r\n            localStorage.setItem(\r\n              \"react-spotify-refresh-token\",\r\n              params.refresh_token\r\n            );\r\n          }\r\n          console.log(res, data);\r\n          let newUser = {\r\n            access_token: res.data.access_token,\r\n            displayName: data.display_name,\r\n            email: data.email,\r\n            display_name: data.display_name,\r\n            type: data.type,\r\n            country: data.country,\r\n            product: data.product,\r\n            avatar: data.images[0].url,\r\n          };\r\n          console.log(newUser, \"newUser\");\r\n          this.logInUserAndGetInfo(newUser);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err, \"fgjxfjxf\");\r\n          // 401 = Unauthorized - the access token is incorrect (expired)\r\n          if (err || err.response.status === 401) {\r\n            // Check if refresh token exists\r\n            const refreshToken = localStorage.getItem(\r\n              \"react-spotify-refresh-token\"\r\n            );\r\n            if (refreshToken) {\r\n              // Send refresh token to server to acquire a new access token\r\n              axios\r\n                .post(\"http://localhost:3000/refresh\", {\r\n                  data: JSON.stringify({\r\n                    refresh_token: refreshToken,\r\n                  }),\r\n                })\r\n                .then((res) => {\r\n                  console.log(\"Refresh token response -\", res.data);\r\n                  axios\r\n                    .get(\"https://api.spotify.com/v1/me\", {\r\n                      headers: {\r\n                        Authorization: `Bearer ${res.data.access_token}`,\r\n                      },\r\n                    })\r\n                    .then(({ data }) => {\r\n                      localStorage.setItem(\r\n                        \"react-spotify-access-token\",\r\n                        res.data.access_token\r\n                      );\r\n                      console.log(res, data);\r\n                      let newUser = {\r\n                        access_token: res.data.access_token,\r\n                        displayName: data.display_name,\r\n                        email: data.email,\r\n                        display_name: data.display_name,\r\n                        type: data.type,\r\n                        country: data.country,\r\n                        product: data.product,\r\n                        avatar: data.images[0].url,\r\n                      };\r\n                      this.logInUserAndGetInfo(newUser);\r\n                    });\r\n                })\r\n                .catch((e) => {\r\n                  console.log(\"Refresh token error -\", e);\r\n                })\r\n                .finally(() => {\r\n                  this.setState({ loading: false });\r\n                });\r\n            } else {\r\n              // Refresh token doesn't exist, the user is shown a 'login with Spotify button'\r\n              this.setState({ loading: false });\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      // The user is shown a 'login with Spotify button'\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n  logInUserAndGetInfo = (newUser) => {\r\n    console.log(\"LOG IN\", newUser);\r\n    // console.log(this.props);\r\n    localStorage.setItem(\"newUser\", JSON.stringify(newUser));\r\n    this.props.setUser(newUser); // set user in redux state\r\n    console.log(\"test\");\r\n    Router.push(\"/Home\");\r\n  };\r\n\r\n  getHashParams() {\r\n    var hashParams = {};\r\n    var e,\r\n      r = /([^&;=]+)=?([^&;]*)/g,\r\n      q = window.location.hash.substring(1);\r\n    while ((e = r.exec(q))) {\r\n      hashParams[e[1]] = decodeURIComponent(e[2]);\r\n    }\r\n    console.log(hashParams, \"hashParams\");\r\n    return hashParams;\r\n  }\r\n  render() {\r\n    // console.log(this.props, \"user\");\r\n\r\n    return <Login />;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.current_user,\r\n    backgroundImage: state.backgroundImage,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (user) => dispatch({ type: actionTypes.SET_USER, user }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index));\r\n"]},"metadata":{},"sourceType":"module"}