{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { withRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport songList from \"../mock/songs\";\nimport styles from \"../styles/player.module.css\";\nimport { connect } from \"react-redux\";\nimport AddDialog from \"./AddDialog\";\n\nclass Player extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deviceId: null,\n      playingInfo: null,\n      playing: false,\n      positionSliderValue: 50,\n      volumeSliderValue: 50,\n      positionStamp: \"00:00\",\n      durationStamp: \"00:00\",\n      player_init_error: false\n    };\n    this.player = null;\n    this.playerCheckInterval = null;\n    this.positionCheckInterval = null;\n  }\n\n  render() {\n    console.log(this.props.recently_played, \"recent\");\n\n    if (!this.props.recently_played) {\n      return null;\n    }\n\n    let recentTrack = this.props.recently_played[0];\n    return __jsx(\"div\", {\n      className: styles.player\n    }, __jsx(\"div\", {\n      className: styles.playerHeader\n    }, __jsx(\"div\", null, __jsx(\"img\", {\n      className: styles.avatar,\n      src: \"/images/avatar.jpeg\",\n      alt: \"\"\n    }), __jsx(\"span\", {\n      className: styles.nickname\n    }, \"Troye Guo\"), __jsx(\"span\", {\n      className: styles.triangle\n    }))), __jsx(\"div\", {\n      className: styles.playerCoverContainer\n    }, __jsx(\"img\", {\n      className: styles.playerCover,\n      src: recentTrack.track.album.images[1].url,\n      alt: \"\"\n    })), __jsx(\"div\", {\n      className: styles.musicInfo\n    }, __jsx(\"div\", {\n      className: styles.songName\n    }, recentTrack.track.name), __jsx(\"div\", {\n      className: styles.artistName\n    }, recentTrack.track.artists[0].name)), __jsx(\"div\", {\n      className: styles.playerPanel\n    }, __jsx(\"img\", {\n      src: \"/icons/favorite.svg\",\n      alt: \"\"\n    }), __jsx(\"img\", {\n      src: \"/icons/prev.svg\",\n      alt: \"\"\n    }), __jsx(\"img\", {\n      src: \"/icons/play.svg\",\n      alt: \"\",\n      style: {\n        width: \"45px\"\n      }\n    }), __jsx(\"img\", {\n      src: \"/icons/next.svg\",\n      alt: \"\"\n    }), __jsx(\"img\", {\n      src: \"/icons/shuffle.svg\",\n      alt: \"\",\n      style: {\n        width: \"25px\"\n      }\n    })), __jsx(\"div\", {\n      className: styles.playerNext\n    }, __jsx(\"div\", {\n      className: styles.nextText\n    }, \"Next\"), __jsx(\"div\", {\n      className: styles.nextListContainer\n    }, __jsx(\"ul\", {\n      className: styles.nextList\n    }, songList().map(item => {\n      return __jsx(\"li\", {\n        key: item.id,\n        className: styles.nextListItem\n      }, __jsx(\"div\", {\n        className: styles.nextSong\n      }, item.song), __jsx(\"p\", {\n        className: styles.nextArtistName,\n        style: {\n          fontSize: \"14px\",\n          lineHeight: \"20px\",\n          color: \"rgba(61, 63, 134, 0.61)\"\n        }\n      }, item.artist), __jsx(\"img\", {\n        src: \"/icons/play.svg\",\n        alt: \"\",\n        className: styles.nextButton\n      }));\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    recently_played: state.recently_played,\n    user: state.current_user,\n    playNow: state.play_now,\n    currentlyPlaying: state.currently_playing,\n    isPlaying: state.isPlaying\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUser: user => dispatch({\n      type: actionTypes.SET_USER,\n      user\n    }),\n    fetchRecentlyPlayed: options => dispatch(actionTypes.fetchRecentlyPlayed(options)),\n    resetPlayNow: () => dispatch({\n      type: actionTypes.RESET_PLAY_NOW\n    }),\n    setCurrentlyPlaying: song => dispatch({\n      type: actionTypes.SET_CURRENTLY_PLAYING,\n      song\n    }),\n    setIsPlaying: isPlaying => dispatch({\n      type: actionTypes.SET_IS_PLAYING,\n      isPlaying\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Player));","map":{"version":3,"sources":["D:/1-Project/soundify-web/components/Player.js"],"names":["React","Component","withRouter","useState","songList","styles","connect","AddDialog","Player","constructor","props","state","deviceId","playingInfo","playing","positionSliderValue","volumeSliderValue","positionStamp","durationStamp","player_init_error","player","playerCheckInterval","positionCheckInterval","render","console","log","recently_played","recentTrack","playerHeader","avatar","nickname","triangle","playerCoverContainer","playerCover","track","album","images","url","musicInfo","songName","name","artistName","artists","playerPanel","width","playerNext","nextText","nextListContainer","nextList","map","item","id","nextListItem","nextSong","song","nextArtistName","fontSize","lineHeight","color","artist","nextButton","mapStateToProps","user","current_user","playNow","play_now","currentlyPlaying","currently_playing","isPlaying","mapDispatchToProps","dispatch","setUser","type","actionTypes","SET_USER","fetchRecentlyPlayed","options","resetPlayNow","RESET_PLAY_NOW","setCurrentlyPlaying","SET_CURRENTLY_PLAYING","setIsPlaying","SET_IS_PLAYING"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AACA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAC7BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IADC;AAEXC,MAAAA,WAAW,EAAE,IAFF;AAGXC,MAAAA,OAAO,EAAE,KAHE;AAIXC,MAAAA,mBAAmB,EAAE,EAJV;AAKXC,MAAAA,iBAAiB,EAAE,EALR;AAMXC,MAAAA,aAAa,EAAE,OANJ;AAOXC,MAAAA,aAAa,EAAE,OAPJ;AAQXC,MAAAA,iBAAiB,EAAE;AARR,KAAb;AAWA,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,mBAAL,GAA2B,IAA3B;AACA,SAAKC,qBAAL,GAA6B,IAA7B;AACD;;AACDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWgB,eAAvB,EAAwC,QAAxC;;AACA,QAAI,CAAC,KAAKhB,KAAL,CAAWgB,eAAhB,EAAiC;AAC/B,aAAO,IAAP;AACD;;AACD,QAAIC,WAAW,GAAG,KAAKjB,KAAL,CAAWgB,eAAX,CAA2B,CAA3B,CAAlB;AACA,WACE;AAAK,MAAA,SAAS,EAAErB,MAAM,CAACe;AAAvB,OACE;AAAK,MAAA,SAAS,EAAEf,MAAM,CAACuB;AAAvB,OACE,mBACE;AAAK,MAAA,SAAS,EAAEvB,MAAM,CAACwB,MAAvB;AAA+B,MAAA,GAAG,EAAC,qBAAnC;AAAyD,MAAA,GAAG,EAAC;AAA7D,MADF,EAEE;AAAM,MAAA,SAAS,EAAExB,MAAM,CAACyB;AAAxB,mBAFF,EAGE;AAAM,MAAA,SAAS,EAAEzB,MAAM,CAAC0B;AAAxB,MAHF,CADF,CADF,EAQE;AAAK,MAAA,SAAS,EAAE1B,MAAM,CAAC2B;AAAvB,OACE;AACE,MAAA,SAAS,EAAE3B,MAAM,CAAC4B,WADpB;AAEE,MAAA,GAAG,EAAEN,WAAW,CAACO,KAAZ,CAAkBC,KAAlB,CAAwBC,MAAxB,CAA+B,CAA/B,EAAkCC,GAFzC;AAGE,MAAA,GAAG,EAAC;AAHN,MADF,CARF,EAeE;AAAK,MAAA,SAAS,EAAEhC,MAAM,CAACiC;AAAvB,OACE;AAAK,MAAA,SAAS,EAAEjC,MAAM,CAACkC;AAAvB,OAAkCZ,WAAW,CAACO,KAAZ,CAAkBM,IAApD,CADF,EAEE;AAAK,MAAA,SAAS,EAAEnC,MAAM,CAACoC;AAAvB,OACGd,WAAW,CAACO,KAAZ,CAAkBQ,OAAlB,CAA0B,CAA1B,EAA6BF,IADhC,CAFF,CAfF,EAqBE;AAAK,MAAA,SAAS,EAAEnC,MAAM,CAACsC;AAAvB,OACE;AAAK,MAAA,GAAG,EAAC,qBAAT;AAA+B,MAAA,GAAG,EAAC;AAAnC,MADF,EAEE;AAAK,MAAA,GAAG,EAAC,iBAAT;AAA2B,MAAA,GAAG,EAAC;AAA/B,MAFF,EAGE;AAAK,MAAA,GAAG,EAAC,iBAAT;AAA2B,MAAA,GAAG,EAAC,EAA/B;AAAkC,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAzC,MAHF,EAIE;AAAK,MAAA,GAAG,EAAC,iBAAT;AAA2B,MAAA,GAAG,EAAC;AAA/B,MAJF,EAKE;AAAK,MAAA,GAAG,EAAC,oBAAT;AAA8B,MAAA,GAAG,EAAC,EAAlC;AAAqC,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT;AAA5C,MALF,CArBF,EA6BE;AAAK,MAAA,SAAS,EAAEvC,MAAM,CAACwC;AAAvB,OACE;AAAK,MAAA,SAAS,EAAExC,MAAM,CAACyC;AAAvB,cADF,EAEE;AAAK,MAAA,SAAS,EAAEzC,MAAM,CAAC0C;AAAvB,OACE;AAAI,MAAA,SAAS,EAAE1C,MAAM,CAAC2C;AAAtB,OACG5C,QAAQ,GAAG6C,GAAX,CAAgBC,IAAD,IAAU;AACxB,aACE;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAkB,QAAA,SAAS,EAAE9C,MAAM,CAAC+C;AAApC,SACE;AAAK,QAAA,SAAS,EAAE/C,MAAM,CAACgD;AAAvB,SAAkCH,IAAI,CAACI,IAAvC,CADF,EAEE;AACE,QAAA,SAAS,EAAEjD,MAAM,CAACkD,cADpB;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,MADL;AAELC,UAAAA,UAAU,EAAE,MAFP;AAGLC,UAAAA,KAAK,EAAE;AAHF;AAFT,SAQGR,IAAI,CAACS,MARR,CAFF,EAYE;AACE,QAAA,GAAG,EAAC,iBADN;AAEE,QAAA,GAAG,EAAC,EAFN;AAGE,QAAA,SAAS,EAAEtD,MAAM,CAACuD;AAHpB,QAZF,CADF;AAoBD,KArBA,CADH,CADF,CAFF,CA7BF,CADF;AA6DD;;AAtF4B;;AAwF/B,MAAMC,eAAe,GAAIlD,KAAD,IAAW;AACjC,SAAO;AACLe,IAAAA,eAAe,EAAEf,KAAK,CAACe,eADlB;AAELoC,IAAAA,IAAI,EAAEnD,KAAK,CAACoD,YAFP;AAGLC,IAAAA,OAAO,EAAErD,KAAK,CAACsD,QAHV;AAILC,IAAAA,gBAAgB,EAAEvD,KAAK,CAACwD,iBAJnB;AAKLC,IAAAA,SAAS,EAAEzD,KAAK,CAACyD;AALZ,GAAP;AAOD,CARD;;AAUA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,OAAO,EAAGT,IAAD,IAAUQ,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEC,WAAW,CAACC,QAApB;AAA8BZ,MAAAA;AAA9B,KAAD,CADtB;AAELa,IAAAA,mBAAmB,EAAGC,OAAD,IACnBN,QAAQ,CAACG,WAAW,CAACE,mBAAZ,CAAgCC,OAAhC,CAAD,CAHL;AAILC,IAAAA,YAAY,EAAE,MAAMP,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEC,WAAW,CAACK;AAApB,KAAD,CAJvB;AAKLC,IAAAA,mBAAmB,EAAGzB,IAAD,IACnBgB,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEC,WAAW,CAACO,qBAApB;AAA2C1B,MAAAA;AAA3C,KAAD,CANL;AAOL2B,IAAAA,YAAY,EAAGb,SAAD,IACZE,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEC,WAAW,CAACS,cAApB;AAAoCd,MAAAA;AAApC,KAAD;AARL,GAAP;AAUD,CAXD;;AAaA,eAAe9D,OAAO,CAACuD,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6CnE,UAAU,CAACM,MAAD,CAAvD,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"next/router\";\r\nimport { useState } from \"react\";\r\nimport songList from \"../mock/songs\";\r\nimport styles from \"../styles/player.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport AddDialog from \"./AddDialog\";\r\nclass Player extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      deviceId: null,\r\n      playingInfo: null,\r\n      playing: false,\r\n      positionSliderValue: 50,\r\n      volumeSliderValue: 50,\r\n      positionStamp: \"00:00\",\r\n      durationStamp: \"00:00\",\r\n      player_init_error: false,\r\n    };\r\n\r\n    this.player = null;\r\n    this.playerCheckInterval = null;\r\n    this.positionCheckInterval = null;\r\n  }\r\n  render() {\r\n    console.log(this.props.recently_played, \"recent\");\r\n    if (!this.props.recently_played) {\r\n      return null;\r\n    }\r\n    let recentTrack = this.props.recently_played[0];\r\n    return (\r\n      <div className={styles.player}>\r\n        <div className={styles.playerHeader}>\r\n          <div>\r\n            <img className={styles.avatar} src=\"/images/avatar.jpeg\" alt=\"\" />\r\n            <span className={styles.nickname}>Troye Guo</span>\r\n            <span className={styles.triangle}></span>\r\n          </div>\r\n        </div>\r\n        <div className={styles.playerCoverContainer}>\r\n          <img\r\n            className={styles.playerCover}\r\n            src={recentTrack.track.album.images[1].url}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className={styles.musicInfo}>\r\n          <div className={styles.songName}>{recentTrack.track.name}</div>\r\n          <div className={styles.artistName}>\r\n            {recentTrack.track.artists[0].name}\r\n          </div>\r\n        </div>\r\n        <div className={styles.playerPanel}>\r\n          <img src=\"/icons/favorite.svg\" alt=\"\" />\r\n          <img src=\"/icons/prev.svg\" alt=\"\" />\r\n          <img src=\"/icons/play.svg\" alt=\"\" style={{ width: \"45px\" }} />\r\n          <img src=\"/icons/next.svg\" alt=\"\" />\r\n          <img src=\"/icons/shuffle.svg\" alt=\"\" style={{ width: \"25px\" }} />\r\n        </div>\r\n\r\n        <div className={styles.playerNext}>\r\n          <div className={styles.nextText}>Next</div>\r\n          <div className={styles.nextListContainer}>\r\n            <ul className={styles.nextList}>\r\n              {songList().map((item) => {\r\n                return (\r\n                  <li key={item.id} className={styles.nextListItem}>\r\n                    <div className={styles.nextSong}>{item.song}</div>\r\n                    <p\r\n                      className={styles.nextArtistName}\r\n                      style={{\r\n                        fontSize: \"14px\",\r\n                        lineHeight: \"20px\",\r\n                        color: \"rgba(61, 63, 134, 0.61)\",\r\n                      }}\r\n                    >\r\n                      {item.artist}\r\n                    </p>\r\n                    <img\r\n                      src=\"/icons/play.svg\"\r\n                      alt=\"\"\r\n                      className={styles.nextButton}\r\n                    />\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    recently_played: state.recently_played,\r\n    user: state.current_user,\r\n    playNow: state.play_now,\r\n    currentlyPlaying: state.currently_playing,\r\n    isPlaying: state.isPlaying,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (user) => dispatch({ type: actionTypes.SET_USER, user }),\r\n    fetchRecentlyPlayed: (options) =>\r\n      dispatch(actionTypes.fetchRecentlyPlayed(options)),\r\n    resetPlayNow: () => dispatch({ type: actionTypes.RESET_PLAY_NOW }),\r\n    setCurrentlyPlaying: (song) =>\r\n      dispatch({ type: actionTypes.SET_CURRENTLY_PLAYING, song }),\r\n    setIsPlaying: (isPlaying) =>\r\n      dispatch({ type: actionTypes.SET_IS_PLAYING, isPlaying }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Player));\r\n"]},"metadata":{},"sourceType":"module"}