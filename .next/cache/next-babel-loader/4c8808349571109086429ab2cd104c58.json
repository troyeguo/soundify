{"ast":null,"code":"var _jsxFileName = \"D:\\\\1-Project\\\\soundify-web\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from \"next/app\";\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\nimport withRedux from \"../lib/withRedux\";\nimport PageLoading from \"../components/LoadingPage\";\nimport Router from \"next/router\";\nimport '../styles/reset.css';\n\nclass Myapp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      context: \"value\",\n      loading: false\n    });\n\n    _defineProperty(this, \"startLoading\", () => {\n      this.setState({\n        loading: true\n      });\n    });\n\n    _defineProperty(this, \"stopLoading\", () => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  // App组件的getInitialProps比较特殊\n  // 能拿到一些额外的参数\n  // Component: 被包裹的组件\n  static async getInitialProps(ctx) {\n    const {\n      Component\n    } = ctx;\n    let pageProps = {}; // 拿到Component上定义的getInitialProps\n\n    if (Component.getInitialProps) {\n      // 执行拿到返回结果\n      pageProps = await Component.getInitialProps(ctx);\n    } // 返回给组件\n\n\n    return {\n      pageProps\n    };\n  }\n\n  componentDidMount() {\n    Router.events.on(\"routeChangeStart\", this.startLoading);\n    Router.events.on(\"routeChangeComplete\", this.stopLoading);\n    Router.events.on(\"routeChangeError\", this.stopLoading);\n  }\n\n  componentWillUnmount() {\n    Router.events.off(\"routeChangeStart\", this.startLoading);\n    Router.events.off(\"routeChangeComplete\", this.stopLoading);\n    Router.events.off(\"routeChangeError\", this.stopLoading);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore\n    } = this.props;\n    return __jsx(Provider, {\n      store: reduxStore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, this.state.loading ? __jsx(PageLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 35\n      }\n    }) : null, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default withRedux(Myapp);","map":{"version":3,"sources":["D:/1-Project/soundify-web/pages/_app.js"],"names":["App","Provider","React","Layout","withRedux","PageLoading","Router","Myapp","context","loading","setState","getInitialProps","ctx","Component","pageProps","componentDidMount","events","on","startLoading","stopLoading","componentWillUnmount","off","render","reduxStore","props","state"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,qBAAP;;AACA,MAAMC,KAAN,SAAoBP,GAApB,CAAwB;AAAA;AAAA;;AAAA,mCAkBd;AACNQ,MAAAA,OAAO,EAAE,OADH;AAENC,MAAAA,OAAO,EAAE;AAFH,KAlBc;;AAAA,0CAuBP,MAAM;AACnB,WAAKC,QAAL,CAAc;AACZD,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KA3BqB;;AAAA,yCA6BR,MAAM;AAClB,WAAKC,QAAL,CAAc;AACZD,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAjCqB;AAAA;;AACtB;AACA;AACA;AAEA,eAAaE,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAM;AAAEC,MAAAA;AAAF,QAAgBD,GAAtB;AACA,QAAIE,SAAS,GAAG,EAAhB,CAFgC,CAIhC;;AACA,QAAID,SAAS,CAACF,eAAd,EAA+B;AAC7B;AACAG,MAAAA,SAAS,GAAG,MAAMD,SAAS,CAACF,eAAV,CAA0BC,GAA1B,CAAlB;AACD,KAR+B,CAShC;;;AACA,WAAO;AAAEE,MAAAA;AAAF,KAAP;AACD;;AAmBDC,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,MAAM,CAACU,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKC,YAA1C;AACAZ,IAAAA,MAAM,CAACU,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,KAAKE,WAA7C;AACAb,IAAAA,MAAM,CAACU,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKE,WAA1C;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBd,IAAAA,MAAM,CAACU,MAAP,CAAcK,GAAd,CAAkB,kBAAlB,EAAsC,KAAKH,YAA3C;AACAZ,IAAAA,MAAM,CAACU,MAAP,CAAcK,GAAd,CAAkB,qBAAlB,EAAyC,KAAKF,WAA9C;AACAb,IAAAA,MAAM,CAACU,MAAP,CAAcK,GAAd,CAAkB,kBAAlB,EAAsC,KAAKF,WAA3C;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBS,MAAAA;AAAxB,QAAuC,KAAKC,KAAlD;AACA,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKE,KAAL,CAAWhB,OAAX,GAAqB,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,GAAuC,IAD1C,EAGE,MAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHF,CADF,CADJ;AASD;;AA1DqB;;AA6DxB,eAAeV,SAAS,CAACG,KAAD,CAAxB","sourcesContent":["import App from \"next/app\";\r\nimport { Provider } from \"react-redux\";\r\nimport React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport withRedux from \"../lib/withRedux\";\r\nimport PageLoading from \"../components/LoadingPage\";\r\nimport Router from \"next/router\";\r\nimport '../styles/reset.css'\r\nclass Myapp extends App {\r\n  // App组件的getInitialProps比较特殊\r\n  // 能拿到一些额外的参数\r\n  // Component: 被包裹的组件\r\n\r\n  static async getInitialProps(ctx) {\r\n    const { Component } = ctx;\r\n    let pageProps = {};\r\n\r\n    // 拿到Component上定义的getInitialProps\r\n    if (Component.getInitialProps) {\r\n      // 执行拿到返回结果\r\n      pageProps = await Component.getInitialProps(ctx);\r\n    }\r\n    // 返回给组件\r\n    return { pageProps };\r\n  }\r\n\r\n  state = {\r\n    context: \"value\",\r\n    loading: false,\r\n  };\r\n  //开始loading\r\n  startLoading = () => {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n  };\r\n  //关闭 loading\r\n  stopLoading = () => {\r\n    this.setState({\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    Router.events.on(\"routeChangeStart\", this.startLoading);\r\n    Router.events.on(\"routeChangeComplete\", this.stopLoading);\r\n    Router.events.on(\"routeChangeError\", this.stopLoading);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Router.events.off(\"routeChangeStart\", this.startLoading);\r\n    Router.events.off(\"routeChangeComplete\", this.stopLoading);\r\n    Router.events.off(\"routeChangeError\", this.stopLoading);\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps, reduxStore } = this.props;\r\n    return (\r\n        <Provider store={reduxStore}>\r\n          <Layout>\r\n            {this.state.loading ? <PageLoading /> : null}\r\n            {/* 把pageProps解构后传递给组件 */}\r\n            <Component {...pageProps} />\r\n          </Layout>\r\n        </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRedux(Myapp);\r\n"]},"metadata":{},"sourceType":"module"}