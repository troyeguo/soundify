{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport useApiRequest from '../ApiRequest/useApiRequest';\n\nfunction useSearch(query, options) {\n  const url = 'https://api.spotify.com/v1/search';\n  const type = [];\n  if (options.album) type.push('album');\n  if (options.artist) type.push('artist');\n  if (options.playlist) type.push('playlist');\n  if (options.track) type.push('track');\n\n  const optionsObj = _objectSpread({\n    q: query,\n    type: type.join(',')\n  }, options);\n\n  const _useApiRequest = useApiRequest(url, optionsObj),\n        data = _useApiRequest.data,\n        loading = _useApiRequest.loading,\n        error = _useApiRequest.error;\n\n  return {\n    data,\n    loading,\n    error\n  };\n}\n\nexport default useSearch;","map":{"version":3,"sources":["D:/1-Project/soundify-web/node_modules/react-spotify-api/dist/Search/useSearch.js"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","useApiRequest","useSearch","query","options","url","type","album","artist","playlist","track","optionsObj","q","join","_useApiRequest","data","loading","error"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport useApiRequest from '../ApiRequest/useApiRequest';\n\nfunction useSearch(query, options) {\n  const url = 'https://api.spotify.com/v1/search';\n  const type = [];\n  if (options.album) type.push('album');\n  if (options.artist) type.push('artist');\n  if (options.playlist) type.push('playlist');\n  if (options.track) type.push('track');\n\n  const optionsObj = _objectSpread({\n    q: query,\n    type: type.join(',')\n  }, options);\n\n  const _useApiRequest = useApiRequest(url, optionsObj),\n        data = _useApiRequest.data,\n        loading = _useApiRequest.loading,\n        error = _useApiRequest.error;\n\n  return {\n    data,\n    loading,\n    error\n  };\n}\n\nexport default useSearch;"]},"metadata":{},"sourceType":"module"}