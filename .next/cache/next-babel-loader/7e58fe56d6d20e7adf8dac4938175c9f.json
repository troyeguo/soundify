{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport styles from \"../styles/discover.module.css\";\nimport { Playlist } from \"react-spotify-api\";\nimport { UserPlaylists } from \"react-spotify-api\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../redux/action\";\n\nvar PlaylistComp = /*#__PURE__*/function (_Component) {\n  _inherits(PlaylistComp, _Component);\n\n  var _super = _createSuper(PlaylistComp);\n\n  function PlaylistComp(props) {\n    var _this;\n\n    _classCallCheck(this, PlaylistComp);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleIndex\", function (index) {\n      _this.setState({\n        currentIndex: index\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSongIndex\", function (index) {\n      _this.setState({\n        hoverIndex: index\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNext\", function () {\n      var coverList = document.querySelector(\".discover_contentCoverList__2BhJd\");\n      var coverItems = document.getElementsByClassName(\"discover_contentCoverContainer__DrO25\");\n      console.log(coverList);\n      var style = window.getComputedStyle(coverList);\n      var right = style.getPropertyValue(\"right\");\n\n      if (parseInt(right.substr(0, right.length - 2)) > (coverItems.length - 1) * 107) {\n        return;\n      }\n\n      var newRight = \"\".concat(parseInt(right.substr(0, right.length - 2)) + 625, \"px\");\n      coverList.setAttribute(\"style\", \"right:\".concat(newRight));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePrev\", function () {\n      var coverList = document.querySelector(\".discover_contentCoverList__2BhJd\");\n      console.log(coverList);\n      var style = window.getComputedStyle(coverList);\n      var right = style.getPropertyValue(\"right\");\n\n      if (right === \"0px\") {\n        return;\n      }\n\n      var newRight = \"\".concat(parseInt(right.substr(0, right.length - 2)) - 625, \"px\");\n      coverList.setAttribute(\"style\", \"right:\".concat(newRight));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"playSongHandler\", function (track, playlist) {\n      console.log(track, \"track\", playlist, \"playlist\");\n\n      if (playlist) {\n        var uris;\n\n        if (track.type === \"playlist\") {\n          uris = JSON.stringify({\n            context_uri: playlist.uri\n          });\n        } else {\n          uris = JSON.stringify({\n            context_uri: playlist.uri,\n            offset: {\n              uri: track.uri\n            }\n          });\n        }\n\n        _this.props.playSong(uris);\n      }\n    });\n\n    _this.state = {\n      currentIndex: 0,\n      hoverIndex: -1\n    };\n    return _this;\n  }\n\n  _createClass(PlaylistComp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", null, __jsx(\"div\", {\n        className: styles.coverParent\n      }, __jsx(\"div\", {\n        className: styles.coverContainer\n      }, __jsx(UserPlaylists, null, function (playlists, loading, error) {\n        return playlists ? __jsx(React.Fragment, null, __jsx(\"div\", {\n          className: styles.contentCoverList\n        }, playlists.items.map(function (playlist, index) {\n          return __jsx(\"div\", {\n            key: index,\n            className: styles.contentCoverContainer,\n            onClick: function onClick() {\n              _this2.handleIndex(index);\n            }\n          }, __jsx(\"img\", {\n            src: playlist.images[0].url,\n            alt: \"\",\n            className: styles.contentCover\n          }), __jsx(\"div\", {\n            className: styles.contentTitle\n          }, playlist.name), _this2.state.currentIndex === index ? __jsx(\"div\", {\n            className: styles.contentSelector\n          }) : null);\n        }))) : null;\n      })), __jsx(\"img\", {\n        src: \"/icons/more.svg\",\n        alt: \"\",\n        className: styles.nextIcon,\n        onClick: function onClick() {\n          _this2.handleNext();\n        }\n      }), __jsx(\"img\", {\n        src: \"/icons/more.svg\",\n        alt: \"\",\n        className: styles.prevIcon,\n        onClick: function onClick() {\n          _this2.handlePrev();\n        }\n      })), __jsx(UserPlaylists, null, function (playlists, loading, error) {\n        return playlists ? __jsx(React.Fragment, null, __jsx(Playlist, {\n          id: playlists.items[_this2.state.currentIndex].id\n        }, function (playlist, loading, error) {\n          return playlist && __jsx(\"div\", null, __jsx(\"div\", {\n            className: styles.contentLine\n          }), __jsx(\"img\", {\n            src: \"/icons/play_with_shadow.svg\",\n            alt: \"\",\n            className: styles.playButtonShadow,\n            onClick: function onClick() {\n              return _this2.playSongHandler(null, playlist);\n            }\n          }), __jsx(\"ul\", {\n            className: styles.contentListContainer\n          }, __jsx(\"div\", {\n            className: styles.songListContainer\n          }, __jsx(\"div\", null, playlist.tracks.items.map(function (track, index) {\n            return __jsx(\"li\", {\n              key: index,\n              className: styles.contentList,\n              onMouseOver: function onMouseOver() {\n                _this2.handleSongIndex(index);\n              },\n              onMouseLeave: function onMouseLeave() {\n                _this2.handleSongIndex(-1);\n              }\n            }, __jsx(\"div\", {\n              className: styles.indexName\n            }, index + 1), _this2.state.hoverIndex === index ? __jsx(\"img\", {\n              src: \"/icons/play.svg\",\n              alt: \"\",\n              className: styles.listPlayIcon,\n              onClick: function onClick() {\n                return _this2.playSongHandler(track.track, playlist);\n              }\n            }) : __jsx(\"img\", {\n              src: \"/icons/favorite.svg\",\n              alt: \"\",\n              className: styles.favoriteIcon\n            }), __jsx(\"div\", {\n              className: styles.trackName\n            }, track.track.name), __jsx(\"div\", {\n              className: styles.trackArtist\n            }, track.track.artists[0].name), __jsx(\"div\", {\n              className: styles.trackAlbum\n            }, track.track.album.name), __jsx(\"img\", {\n              src: \"/icons/more_dot.svg\",\n              alt: \"\",\n              className: styles.moreDot\n            }));\n          })))));\n        })) : null;\n      }));\n    }\n  }]);\n\n  return PlaylistComp;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.current_user,\n    currentlyPlaying: state.currently_playing,\n    isPlaying: state.isPlaying\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    playSong: function playSong(uris) {\n      return dispatch(actionTypes.playSong(uris));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistComp);","map":{"version":3,"sources":["D:/1-Project/soundify-web/components/Playlists.js"],"names":["React","Component","styles","Playlist","UserPlaylists","connect","actionTypes","PlaylistComp","props","index","setState","currentIndex","hoverIndex","coverList","document","querySelector","coverItems","getElementsByClassName","console","log","style","window","getComputedStyle","right","getPropertyValue","parseInt","substr","length","newRight","setAttribute","track","playlist","uris","type","JSON","stringify","context_uri","uri","offset","playSong","state","coverParent","coverContainer","playlists","loading","error","contentCoverList","items","map","contentCoverContainer","handleIndex","images","url","contentCover","contentTitle","name","contentSelector","nextIcon","handleNext","prevIcon","handlePrev","id","contentLine","playButtonShadow","playSongHandler","contentListContainer","songListContainer","tracks","contentList","handleSongIndex","indexName","listPlayIcon","favoriteIcon","trackName","trackArtist","artists","trackAlbum","album","moreDot","mapStateToProps","user","current_user","currentlyPlaying","currently_playing","isPlaying","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport styles from \"../styles/discover.module.css\";\r\nimport { Playlist } from \"react-spotify-api\";\r\nimport { UserPlaylists } from \"react-spotify-api\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../redux/action\";\r\nclass PlaylistComp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentIndex: 0, hoverIndex: -1 };\r\n  }\r\n  handleIndex = (index) => {\r\n    this.setState({ currentIndex: index });\r\n  };\r\n  handleSongIndex = (index) => {\r\n    this.setState({ hoverIndex: index });\r\n  };\r\n  handleNext = () => {\r\n    let coverList = document.querySelector(\".discover_contentCoverList__2BhJd\");\r\n    let coverItems = document.getElementsByClassName(\r\n      \"discover_contentCoverContainer__DrO25\"\r\n    );\r\n    console.log(coverList);\r\n    let style = window.getComputedStyle(coverList);\r\n    let right = style.getPropertyValue(\"right\");\r\n    if (\r\n      parseInt(right.substr(0, right.length - 2)) >\r\n      (coverItems.length - 1) * 107\r\n    ) {\r\n      return;\r\n    }\r\n    let newRight = `${parseInt(right.substr(0, right.length - 2)) + 625}px`;\r\n    coverList.setAttribute(\"style\", `right:${newRight}`);\r\n  };\r\n  handlePrev = () => {\r\n    let coverList = document.querySelector(\".discover_contentCoverList__2BhJd\");\r\n    console.log(coverList);\r\n    let style = window.getComputedStyle(coverList);\r\n    let right = style.getPropertyValue(\"right\");\r\n    if (right === \"0px\") {\r\n      return;\r\n    }\r\n    let newRight = `${parseInt(right.substr(0, right.length - 2)) - 625}px`;\r\n    coverList.setAttribute(\"style\", `right:${newRight}`);\r\n  };\r\n  playSongHandler = (track, playlist) => {\r\n    console.log(track, \"track\", playlist, \"playlist\");\r\n    if (playlist) {\r\n      let uris;\r\n      if (track.type === \"playlist\") {\r\n        uris = JSON.stringify({\r\n          context_uri: playlist.uri,\r\n        });\r\n      } else {\r\n        uris = JSON.stringify({\r\n          context_uri: playlist.uri,\r\n          offset: {\r\n            uri: track.uri,\r\n          },\r\n        });\r\n      }\r\n      this.props.playSong(uris);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={styles.coverParent}>\r\n          <div className={styles.coverContainer}>\r\n            <UserPlaylists>\r\n              {(playlists, loading, error) =>\r\n                playlists ? (\r\n                  <>\r\n                    <div className={styles.contentCoverList}>\r\n                      {playlists.items.map((playlist, index) => (\r\n                        <div\r\n                          key={index}\r\n                          className={styles.contentCoverContainer}\r\n                          onClick={() => {\r\n                            this.handleIndex(index);\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={playlist.images[0].url}\r\n                            alt=\"\"\r\n                            className={styles.contentCover}\r\n                          />\r\n                          <div className={styles.contentTitle}>\r\n                            {playlist.name}\r\n                          </div>\r\n                          {this.state.currentIndex === index ? (\r\n                            <div className={styles.contentSelector}></div>\r\n                          ) : null}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </>\r\n                ) : null\r\n              }\r\n            </UserPlaylists>\r\n          </div>\r\n          <img\r\n            src=\"/icons/more.svg\"\r\n            alt=\"\"\r\n            className={styles.nextIcon}\r\n            onClick={() => {\r\n              this.handleNext();\r\n            }}\r\n          />\r\n          <img\r\n            src=\"/icons/more.svg\"\r\n            alt=\"\"\r\n            className={styles.prevIcon}\r\n            onClick={() => {\r\n              this.handlePrev();\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <UserPlaylists>\r\n          {(playlists, loading, error) =>\r\n            playlists ? (\r\n              <>\r\n                <Playlist id={playlists.items[this.state.currentIndex].id}>\r\n                  {(playlist, loading, error) =>\r\n                    playlist && (\r\n                      <div>\r\n                        <div className={styles.contentLine}></div>\r\n                        <img\r\n                          src=\"/icons/play_with_shadow.svg\"\r\n                          alt=\"\"\r\n                          className={styles.playButtonShadow}\r\n                          onClick={() => this.playSongHandler(null, playlist)}\r\n                        />\r\n                        {\r\n                          <ul className={styles.contentListContainer}>\r\n                            <div className={styles.songListContainer}>\r\n                              <div>\r\n                                {playlist.tracks.items.map((track, index) => (\r\n                                  <li\r\n                                    key={index}\r\n                                    className={styles.contentList}\r\n                                    onMouseOver={() => {\r\n                                      this.handleSongIndex(index);\r\n                                    }}\r\n                                    onMouseLeave={() => {\r\n                                      this.handleSongIndex(-1);\r\n                                    }}\r\n                                  >\r\n                                    <div className={styles.indexName}>\r\n                                      {index + 1}\r\n                                    </div>\r\n                                    {this.state.hoverIndex === index ? (\r\n                                      <img\r\n                                        src=\"/icons/play.svg\"\r\n                                        alt=\"\"\r\n                                        className={styles.listPlayIcon}\r\n                                        onClick={() =>\r\n                                          this.playSongHandler(\r\n                                            track.track,\r\n                                            playlist\r\n                                          )\r\n                                        }\r\n                                      />\r\n                                    ) : (\r\n                                      <img\r\n                                        src=\"/icons/favorite.svg\"\r\n                                        alt=\"\"\r\n                                        className={styles.favoriteIcon}\r\n                                      />\r\n                                    )}\r\n                                    <div className={styles.trackName}>\r\n                                      {track.track.name}\r\n                                    </div>\r\n                                    <div className={styles.trackArtist}>\r\n                                      {track.track.artists[0].name}\r\n                                    </div>\r\n                                    <div className={styles.trackAlbum}>\r\n                                      {track.track.album.name}\r\n                                    </div>\r\n\r\n                                    <img\r\n                                      src=\"/icons/more_dot.svg\"\r\n                                      alt=\"\"\r\n                                      className={styles.moreDot}\r\n                                    />\r\n                                  </li>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                          </ul>\r\n                        }\r\n                      </div>\r\n                    )\r\n                  }\r\n                </Playlist>\r\n              </>\r\n            ) : null\r\n          }\r\n        </UserPlaylists>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.current_user,\r\n    currentlyPlaying: state.currently_playing,\r\n    isPlaying: state.isPlaying,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    playSong: (uris) => dispatch(actionTypes.playSong(uris)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistComp);\r\n"]},"metadata":{},"sourceType":"module"}