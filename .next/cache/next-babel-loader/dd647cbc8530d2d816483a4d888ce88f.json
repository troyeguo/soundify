{"ast":null,"code":"// Responsible for setting environment variables.\n// Note: this isn't strictly required for this example – you can\n// inline your Firebase config or set environment variables howevever\n// else you wish – but it's a convenient way to make sure the private\n// key doesn't end up in source control.\nconst fs = require(\"fs\");\n\nconst {\n  NODE_ENV\n} = process.env;\n\nif (!NODE_ENV) {\n  throw new Error(\"The NODE_ENV environment variable is required but was not specified.\");\n} // Set env vars from appropiate `.env` files. We're following the\n// file structure used in create-react-app and documented in the\n// Ruby dotenv. See:\n// https://github.com/bkeepers/dotenv#what-other-env-files-can-i-use\n\n\nconst dotEnvPath = \"./.env\";\nconst dotEnvFiles = [`${dotEnvPath}.${NODE_ENV}.local`, `${dotEnvPath}.${NODE_ENV}`, // Don't include `.env.local` for the test environment.\nNODE_ENV !== \"test\" && `${dotEnvPath}.local`, dotEnvPath].filter(Boolean);\ndotEnvFiles.forEach(dotenvFile => {\n  if (fs.existsSync(dotenvFile)) {\n    // eslint-disable-next-line global-require\n    require(\"dotenv\").config({\n      path: dotenvFile\n    });\n  }\n});","map":{"version":3,"sources":["D:/1-Project/soundify-web/env.js"],"names":["fs","require","NODE_ENV","process","env","Error","dotEnvPath","dotEnvFiles","filter","Boolean","forEach","dotenvFile","existsSync","config","path"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAeC,OAAO,CAACC,GAA7B;;AACA,IAAI,CAACF,QAAL,EAAe;AACb,QAAM,IAAIG,KAAJ,CACJ,sEADI,CAAN;AAGD,C,CAED;AACA;AACA;AACA;;;AACA,MAAMC,UAAU,GAAG,QAAnB;AACA,MAAMC,WAAW,GAAG,CACjB,GAAED,UAAW,IAAGJ,QAAS,QADR,EAEjB,GAAEI,UAAW,IAAGJ,QAAS,EAFR,EAGlB;AACAA,QAAQ,KAAK,MAAb,IAAwB,GAAEI,UAAW,QAJnB,EAKlBA,UALkB,EAMlBE,MANkB,CAMXC,OANW,CAApB;AAQAF,WAAW,CAACG,OAAZ,CAAqBC,UAAD,IAAgB;AAClC,MAAIX,EAAE,CAACY,UAAH,CAAcD,UAAd,CAAJ,EAA+B;AAC7B;AACAV,IAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBY,MAAlB,CAAyB;AACvBC,MAAAA,IAAI,EAAEH;AADiB,KAAzB;AAGD;AACF,CAPD","sourcesContent":["// Responsible for setting environment variables.\r\n// Note: this isn't strictly required for this example – you can\r\n// inline your Firebase config or set environment variables howevever\r\n// else you wish – but it's a convenient way to make sure the private\r\n// key doesn't end up in source control.\r\n\r\nconst fs = require(\"fs\");\r\n\r\nconst { NODE_ENV } = process.env;\r\nif (!NODE_ENV) {\r\n  throw new Error(\r\n    \"The NODE_ENV environment variable is required but was not specified.\"\r\n  );\r\n}\r\n\r\n// Set env vars from appropiate `.env` files. We're following the\r\n// file structure used in create-react-app and documented in the\r\n// Ruby dotenv. See:\r\n// https://github.com/bkeepers/dotenv#what-other-env-files-can-i-use\r\nconst dotEnvPath = \"./.env\";\r\nconst dotEnvFiles = [\r\n  `${dotEnvPath}.${NODE_ENV}.local`,\r\n  `${dotEnvPath}.${NODE_ENV}`,\r\n  // Don't include `.env.local` for the test environment.\r\n  NODE_ENV !== \"test\" && `${dotEnvPath}.local`,\r\n  dotEnvPath,\r\n].filter(Boolean);\r\n\r\ndotEnvFiles.forEach((dotenvFile) => {\r\n  if (fs.existsSync(dotenvFile)) {\r\n    // eslint-disable-next-line global-require\r\n    require(\"dotenv\").config({\r\n      path: dotenvFile,\r\n    });\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}