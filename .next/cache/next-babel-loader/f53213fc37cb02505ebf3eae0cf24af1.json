{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint react/no-danger: 0 */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { get } from \"lodash/object\";\nimport Document, { Html, Head, Main, NextScript } from \"next/document\";\n\nclass CustomDocument extends Document {\n  render() {\n    // Store initial props from request data that we need to use again on\n    // the client. See:\n    // https://github.com/zeit/next.js/issues/3043#issuecomment-334521241\n    // https://github.com/zeit/next.js/issues/2252#issuecomment-353992669\n    // Alternatively, you could use a store, like Redux.\n    const {\n      AuthUserInfo\n    } = this.props;\n    return __jsx(Html, null, __jsx(Head, null, __jsx(\"script\", {\n      id: \"__MY_AUTH_USER_INFO\",\n      type: \"application/json\",\n      dangerouslySetInnerHTML: {\n        __html: JSON.stringify(AuthUserInfo, null, 2)\n      }\n    }), __jsx(\"script\", {\n      src: \"https://apis.google.com/js/api.js\"\n    })), __jsx(\"body\", null, __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n}\n\nCustomDocument.getInitialProps = async ctx => {\n  // Get the AuthUserInfo object. This is set if the server-rendered page\n  // is wrapped in the `withAuthUser` higher-order component.\n  const AuthUserInfo = get(ctx, \"myCustomData.AuthUserInfo\", null);\n  const initialProps = await Document.getInitialProps(ctx);\n  return _objectSpread({}, initialProps, {\n    AuthUserInfo\n  });\n};\n\nCustomDocument.propTypes = {\n  AuthUserInfo: PropTypes.shape({\n    AuthUser: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      emailVerified: PropTypes.bool.isRequired\n    }),\n    token: PropTypes.string\n  }).isRequired\n};\nexport default CustomDocument;","map":null,"metadata":{},"sourceType":"module"}