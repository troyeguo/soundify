{"ast":null,"code":"var _jsxFileName = \"D:\\\\1-Project\\\\soundify-web\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { get } from \"lodash/object\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport withAuthUser from \"../utils/pageWrappers/withAuthUser\";\nimport withAuthUserInfo from \"../utils/pageWrappers/withAuthUserInfo\";\nimport logout from \"../utils/auth/logout\";\nimport styles from \"../styles/index.module.css\";\n\nconst Index = props => {\n  const {\n    AuthUserInfo,\n    data\n  } = props;\n  const AuthUser = get(AuthUserInfo, \"AuthUser\", null);\n  const {\n    favoriteFood\n  } = data;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/background.png\",\n    alt: \"\",\n    style: {\n      width: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: styles.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    className: styles.logo - img,\n    src: \"/icons/logo.png\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), __jsx(\"span\", {\n    className: styles.logo - text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Soundify\")))), !AuthUser ? __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"You are not signed in.\", \" \", __jsx(Link, {\n    href: \"/auth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Sign in\"))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"You're signed in. Email: \", AuthUser.email), __jsx(\"p\", {\n    style: {\n      display: \"inlinelock\",\n      color: \"blue\",\n      textDecoration: \"underline\",\n      cursor: \"pointer\"\n    },\n    onClick: async () => {\n      try {\n        await logout();\n        Router.push(\"/auth\");\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Log out\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Another example page\"))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Your favorite food is \", favoriteFood, \".\")));\n}; // Just an example.\n\n\nconst mockFetchData = async userId => ({\n  user: _objectSpread({}, userId && {\n    id: userId\n  }),\n  favoriteFood: \"pizza\"\n});\n\nIndex.getInitialProps = async ctx => {\n  // Get the AuthUserInfo object. This is set in `withAuthUser.js`.\n  // The AuthUserInfo object is available on both the server and client.\n  const AuthUserInfo = get(ctx, \"myCustomData.AuthUserInfo\", null);\n  const AuthUser = get(AuthUserInfo, \"AuthUser\", null); // You can also get the token (e.g., to authorize a request when fetching data)\n  // const AuthUserToken = get(AuthUserInfo, 'token', null)\n  // You can fetch data here.\n\n  const data = await mockFetchData(get(AuthUser, \"id\"));\n  return {\n    data\n  };\n};\n\nIndex.displayName = \"Index\";\nIndex.propTypes = {\n  AuthUserInfo: PropTypes.shape({\n    AuthUser: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      emailVerified: PropTypes.bool.isRequired\n    }),\n    token: PropTypes.string\n  }),\n  data: PropTypes.shape({\n    user: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired,\n    favoriteFood: PropTypes.string.isRequired\n  }).isRequired\n};\nIndex.defaultProps = {\n  AuthUserInfo: null\n}; // Use `withAuthUser` to get the authed user server-side, which\n// disables static rendering.\n// Use `withAuthUserInfo` to include the authed user as a prop\n// to your component.\n\nexport default withAuthUser(withAuthUserInfo(Index));","map":{"version":3,"sources":["D:/1-Project/soundify-web/pages/index.js"],"names":["React","PropTypes","get","Link","Router","withAuthUser","withAuthUserInfo","logout","styles","Index","props","AuthUserInfo","data","AuthUser","favoriteFood","width","logo","img","text","email","display","color","textDecoration","cursor","push","e","console","error","mockFetchData","userId","user","id","getInitialProps","ctx","displayName","propTypes","shape","string","isRequired","emailVerified","bool","token","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { get } from \"lodash/object\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport withAuthUser from \"../utils/pageWrappers/withAuthUser\";\nimport withAuthUserInfo from \"../utils/pageWrappers/withAuthUserInfo\";\nimport logout from \"../utils/auth/logout\";\nimport styles from \"../styles/index.module.css\";\nconst Index = (props) => {\n  const { AuthUserInfo, data } = props;\n  const AuthUser = get(AuthUserInfo, \"AuthUser\", null);\n  const { favoriteFood } = data;\n\n  return (\n    <div>\n      <img src=\"/images/background.png\" alt=\"\" style={{ width: \"100px\" }} />\n      <div className={styles.logo}>\n        <Link href=\"/\">\n          <div>\n            <img className={styles.logo - img} src=\"/icons/logo.png\" alt=\"\" />\n            <span className={styles.logo - text}>Soundify</span>\n          </div>\n        </Link>\n      </div>\n      {!AuthUser ? (\n        <p>\n          You are not signed in.{\" \"}\n          <Link href={\"/auth\"}>\n            <a>Sign in</a>\n          </Link>\n        </p>\n      ) : (\n        <div>\n          <p>You're signed in. Email: {AuthUser.email}</p>\n          <p\n            style={{\n              display: \"inlinelock\",\n              color: \"blue\",\n              textDecoration: \"underline\",\n              cursor: \"pointer\",\n            }}\n            onClick={async () => {\n              try {\n                await logout();\n                Router.push(\"/auth\");\n              } catch (e) {\n                console.error(e);\n              }\n            }}\n          >\n            Log out\n          </p>\n        </div>\n      )}\n      <div>\n        <Link href={\"/example\"}>\n          <a>Another example page</a>\n        </Link>\n      </div>\n      <div>\n        <div>Your favorite food is {favoriteFood}.</div>\n      </div>\n    </div>\n  );\n};\n\n// Just an example.\nconst mockFetchData = async (userId) => ({\n  user: {\n    ...(userId && {\n      id: userId,\n    }),\n  },\n  favoriteFood: \"pizza\",\n});\n\nIndex.getInitialProps = async (ctx) => {\n  // Get the AuthUserInfo object. This is set in `withAuthUser.js`.\n  // The AuthUserInfo object is available on both the server and client.\n  const AuthUserInfo = get(ctx, \"myCustomData.AuthUserInfo\", null);\n  const AuthUser = get(AuthUserInfo, \"AuthUser\", null);\n\n  // You can also get the token (e.g., to authorize a request when fetching data)\n  // const AuthUserToken = get(AuthUserInfo, 'token', null)\n\n  // You can fetch data here.\n  const data = await mockFetchData(get(AuthUser, \"id\"));\n\n  return {\n    data,\n  };\n};\n\nIndex.displayName = \"Index\";\n\nIndex.propTypes = {\n  AuthUserInfo: PropTypes.shape({\n    AuthUser: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      emailVerified: PropTypes.bool.isRequired,\n    }),\n    token: PropTypes.string,\n  }),\n  data: PropTypes.shape({\n    user: PropTypes.shape({\n      id: PropTypes.string,\n    }).isRequired,\n    favoriteFood: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nIndex.defaultProps = {\n  AuthUserInfo: null,\n};\n\n// Use `withAuthUser` to get the authed user server-side, which\n// disables static rendering.\n// Use `withAuthUserInfo` to include the authed user as a prop\n// to your component.\nexport default withAuthUser(withAuthUserInfo(Index));\n"]},"metadata":{},"sourceType":"module"}