{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport getConfig from \"next/config\";\nimport Router, { withRouter } from \"next/router\";\nimport { useSelector } from \"react-redux\";\nimport { request } from \"../lib/api\";\nimport initCache from \"../lib/clientCache\";\nimport Content from \"../components/Content\";\nconst {\n  publicRuntimeConfig\n} = getConfig();\nconst {\n  cache,\n  useCache\n} = initCache();\n\nconst Index = ({\n  userRepos,\n  starred,\n  router\n}) => {\n  // const user = useSelector((store) => store.user);\n  // const tabKey = router.query.key || \"1\";\n  // useCache(\"cache\", {\n  //   userRepos,\n  //   starred,\n  // });\n  // if (!user || !user.id) {\n  //   // console.log(\"fase\");\n  //   return (\n  //     <div\n  //       className=\"root\"\n  //       style={{ position: \"absolute\", left: 200, top: 100 }}\n  //     >\n  //       <p>亲，您还没有登录哦</p>\n  //       <a href={publicRuntimeConfig.OAUTH_URL}>点击登录</a>\n  //     </div>\n  //   );\n  // }\n  // const { avatar_url, login, name, bio, email } = user;\n  return __jsx(Content, null);\n};\n\nIndex.getInitialProps = cache(async ({\n  ctx,\n  reduxStore\n}) => {\n  判断用户是否登出;\n  const {\n    user\n  } = reduxStore.getState();\n\n  if (!user || !user.id) {\n    return {};\n  }\n});\nexport default withRouter(Index);","map":{"version":3,"sources":["D:/1-Project/soundify-web/pages/index.js"],"names":["getConfig","Router","withRouter","useSelector","request","initCache","Content","publicRuntimeConfig","cache","useCache","Index","userRepos","starred","router","getInitialProps","ctx","reduxStore","判断用户是否登出","user","getState","id"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,aAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAA0BP,SAAS,EAAzC;AAEA,MAAM;AAAEQ,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAsBJ,SAAS,EAArC;;AAEA,MAAMK,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KAAoC;AAChD;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAAO,MAAC,OAAD,OAAP;AACD,CAzBD;;AA2BAH,KAAK,CAACI,eAAN,GAAwBN,KAAK,CAAC,OAAO;AAAEO,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAA+B;AAC3DC,EAAAA,QAAQ;AACR,QAAM;AAAEC,IAAAA;AAAF,MAAWF,UAAU,CAACG,QAAX,EAAjB;;AACA,MAAI,CAACD,IAAD,IAAS,CAACA,IAAI,CAACE,EAAnB,EAAuB;AACrB,WAAO,EAAP;AACD;AACF,CAN4B,CAA7B;AAQA,eAAelB,UAAU,CAACQ,KAAD,CAAzB","sourcesContent":["import getConfig from \"next/config\";\nimport Router, { withRouter } from \"next/router\";\nimport { useSelector } from \"react-redux\";\nimport { request } from \"../lib/api\";\nimport initCache from \"../lib/clientCache\";\nimport Content from \"../components/Content\";\nconst { publicRuntimeConfig } = getConfig();\n\nconst { cache, useCache } = initCache();\n\nconst Index = ({ userRepos, starred, router }) => {\n  // const user = useSelector((store) => store.user);\n  // const tabKey = router.query.key || \"1\";\n\n  // useCache(\"cache\", {\n  //   userRepos,\n  //   starred,\n  // });\n\n  // if (!user || !user.id) {\n  //   // console.log(\"fase\");\n  //   return (\n  //     <div\n  //       className=\"root\"\n  //       style={{ position: \"absolute\", left: 200, top: 100 }}\n  //     >\n  //       <p>亲，您还没有登录哦</p>\n  //       <a href={publicRuntimeConfig.OAUTH_URL}>点击登录</a>\n  //     </div>\n  //   );\n  // }\n\n  // const { avatar_url, login, name, bio, email } = user;\n\n  return <Content />;\n};\n\nIndex.getInitialProps = cache(async ({ ctx, reduxStore }) => {\n  判断用户是否登出;\n  const { user } = reduxStore.getState();\n  if (!user || !user.id) {\n    return {};\n  }\n});\n\nexport default withRouter(Index);\n"]},"metadata":{},"sourceType":"module"}