{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport initializeStore from \"../redux/store\";\nvar isServer = false;\nvar __NEXT_REDUX_STORE__ = \"__NEXT_REDUX_STORE__\"; //继承 redux\n\nfunction getOrCreateStore(initialState) {\n  if (isServer) {\n    // 服务端每次执行都重新创建一个store\n    return initializeStore(initialState);\n  } // 在客户端执行这个方法的时候 优先返回window上已有的store\n  // 而不能每次执行都重新创建一个store 否则状态就无限重置了\n\n\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\n  }\n\n  return window[__NEXT_REDUX_STORE__];\n}\n\nexport default (function (Comp) {\n  var withReduxApp = /*#__PURE__*/function (_React$Component) {\n    _inherits(withReduxApp, _React$Component);\n\n    var _super = _createSuper(withReduxApp);\n\n    function withReduxApp(props) {\n      var _this;\n\n      _classCallCheck(this, withReduxApp);\n\n      _this = _super.call(this, props); // getInitialProps创建了store 这里为什么又重新创建一次？\n      // 因为服务端执行了getInitialProps之后 返回给客户端的是序列化后的字符串\n      // redux里有很多方法 不适合序列化存储\n      // 所以选择在getInitialProps返回initialReduxState初始的状态\n      // 再在这里通过initialReduxState去创建一个完整的store\n\n      _this.reduxStore = getOrCreateStore(props.initialReduxState);\n      console.log(_this.reduxStore.getState());\n      return _this;\n    }\n\n    _createClass(withReduxApp, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            Component = _this$props.Component,\n            pageProps = _this$props.pageProps,\n            rest = _objectWithoutProperties(_this$props, [\"Component\", \"pageProps\"]);\n\n        return __jsx(Comp, _extends({}, rest, {\n          Component: Component,\n          pageProps: pageProps,\n          reduxStore: this.reduxStore\n        }));\n      }\n    }]);\n\n    return withReduxApp;\n  }(React.Component); // 这个其实是_app.js的getInitialProps\n  // 在服务端渲染和客户端路由跳转时会被执行\n  // 所以非常适合做redux-store的初始化\n\n\n  withReduxApp.getInitialProps = function _callee(ctx) {\n    var reduxStore, req, session, appProps;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (isServer) {\n              //  const {req} = ctx.ctx.req\n              req = ctx.ctx.req;\n              session = req.session;\n\n              if (session && session.userInfo) {\n                reduxStore = getOrCreateStore({\n                  user: session.userInfo // user: {\n                  //   name: 'zmj',\n                  //   age: 18\n                  // }\n\n                });\n              } else {\n                reduxStore = getOrCreateStore();\n              }\n            } else {\n              reduxStore = getOrCreateStore();\n            }\n\n            ctx.reduxStore = reduxStore;\n            appProps = {};\n\n            if (!(typeof Comp.getInitialProps === \"function\")) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(Comp.getInitialProps(ctx));\n\n          case 6:\n            appProps = _context.sent;\n\n          case 7:\n            return _context.abrupt(\"return\", _objectSpread({}, appProps, {\n              initialReduxState: reduxStore.getState()\n            }));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return withReduxApp;\n});","map":{"version":3,"sources":["D:/1-Project/soundify-web/lib/withRedux.js"],"names":["React","initializeStore","isServer","__NEXT_REDUX_STORE__","getOrCreateStore","initialState","window","Comp","withReduxApp","props","reduxStore","initialReduxState","console","log","getState","Component","pageProps","rest","getInitialProps","ctx","req","session","userInfo","user","appProps"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,gBAA5B;AAEA,IAAMC,QAAQ,QAAd;AACA,IAAMC,oBAAoB,GAAG,sBAA7B,C,CAEA;;AACA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AACtC,MAAIH,QAAJ,EAAc;AACZ;AACA,WAAOD,eAAe,CAACI,YAAD,CAAtB;AACD,GAJqC,CAKtC;AACA;;;AACA,MAAI,CAACC,MAAM,CAACH,oBAAD,CAAX,EAAmC;AACjCG,IAAAA,MAAM,CAACH,oBAAD,CAAN,GAA+BF,eAAe,CAACI,YAAD,CAA9C;AACD;;AACD,SAAOC,MAAM,CAACH,oBAAD,CAAb;AACD;;AAED,gBAAe,UAACI,IAAD,EAAU;AAAA,MACjBC,YADiB;AAAA;;AAAA;;AAErB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gCAAMA,KAAN,EADiB,CAEjB;AACA;AACA;AACA;AACA;;AACA,YAAKC,UAAL,GAAkBN,gBAAgB,CAACK,KAAK,CAACE,iBAAP,CAAlC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKH,UAAL,CAAgBI,QAAhB,EAAZ;AARiB;AASlB;;AAXoB;AAAA;AAAA,+BAaZ;AAAA,0BACmC,KAAKL,KADxC;AAAA,YACCM,SADD,eACCA,SADD;AAAA,YACYC,SADZ,eACYA,SADZ;AAAA,YAC0BC,IAD1B;;AAEP,eACE,MAAC,IAAD,eACMA,IADN;AAEE,UAAA,SAAS,EAAEF,SAFb;AAGE,UAAA,SAAS,EAAEC,SAHb;AAIE,UAAA,UAAU,EAAE,KAAKN;AAJnB,WADF;AAQD;AAvBoB;;AAAA;AAAA,IACIV,KAAK,CAACe,SADV,GA0BvB;AACA;AACA;;;AACAP,EAAAA,YAAY,CAACU,eAAb,GAA+B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAG7B,gBAAIjB,QAAJ,EAAc;AACZ;AAESkB,cAAAA,GAHG,GAIRD,GAJQ,CAGVA,GAHU,CAGHC,GAHG;AAKJC,cAAAA,OALI,GAKQD,GALR,CAKJC,OALI;;AAMZ,kBAAIA,OAAO,IAAIA,OAAO,CAACC,QAAvB,EAAiC;AAC/BZ,gBAAAA,UAAU,GAAGN,gBAAgB,CAAC;AAC5BmB,kBAAAA,IAAI,EAAEF,OAAO,CAACC,QADc,CAE5B;AACA;AACA;AACA;;AAL4B,iBAAD,CAA7B;AAOD,eARD,MAQO;AACLZ,gBAAAA,UAAU,GAAGN,gBAAgB,EAA7B;AACD;AACF,aAjBD,MAiBO;AACLM,cAAAA,UAAU,GAAGN,gBAAgB,EAA7B;AACD;;AACDe,YAAAA,GAAG,CAACT,UAAJ,GAAiBA,UAAjB;AAEIc,YAAAA,QAzByB,GAyBd,EAzBc;;AAAA,kBA0BzB,OAAOjB,IAAI,CAACW,eAAZ,KAAgC,UA1BP;AAAA;AAAA;AAAA;;AAAA;AAAA,6CA2BVX,IAAI,CAACW,eAAL,CAAqBC,GAArB,CA3BU;;AAAA;AA2B3BK,YAAAA,QA3B2B;;AAAA;AAAA,+DAgCxBA,QAhCwB;AAiC3Bb,cAAAA,iBAAiB,EAAED,UAAU,CAACI,QAAX;AAjCQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAqCA,SAAON,YAAP;AACD,CAnED","sourcesContent":["import React from \"react\";\r\nimport initializeStore from \"../redux/store\";\r\n\r\nconst isServer = typeof window === \"undefined\";\r\nconst __NEXT_REDUX_STORE__ = \"__NEXT_REDUX_STORE__\";\r\n\r\n//继承 redux\r\nfunction getOrCreateStore(initialState) {\r\n  if (isServer) {\r\n    // 服务端每次执行都重新创建一个store\r\n    return initializeStore(initialState);\r\n  }\r\n  // 在客户端执行这个方法的时候 优先返回window上已有的store\r\n  // 而不能每次执行都重新创建一个store 否则状态就无限重置了\r\n  if (!window[__NEXT_REDUX_STORE__]) {\r\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\r\n  }\r\n  return window[__NEXT_REDUX_STORE__];\r\n}\r\n\r\nexport default (Comp) => {\r\n  class withReduxApp extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      // getInitialProps创建了store 这里为什么又重新创建一次？\r\n      // 因为服务端执行了getInitialProps之后 返回给客户端的是序列化后的字符串\r\n      // redux里有很多方法 不适合序列化存储\r\n      // 所以选择在getInitialProps返回initialReduxState初始的状态\r\n      // 再在这里通过initialReduxState去创建一个完整的store\r\n      this.reduxStore = getOrCreateStore(props.initialReduxState);\r\n      console.log(this.reduxStore.getState());\r\n    }\r\n\r\n    render() {\r\n      const { Component, pageProps, ...rest } = this.props;\r\n      return (\r\n        <Comp\r\n          {...rest}\r\n          Component={Component}\r\n          pageProps={pageProps}\r\n          reduxStore={this.reduxStore}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  // 这个其实是_app.js的getInitialProps\r\n  // 在服务端渲染和客户端路由跳转时会被执行\r\n  // 所以非常适合做redux-store的初始化\r\n  withReduxApp.getInitialProps = async (ctx) => {\r\n    let reduxStore;\r\n\r\n    if (isServer) {\r\n      //  const {req} = ctx.ctx.req\r\n      const {\r\n        ctx: { req },\r\n      } = ctx;\r\n      const { session } = req;\r\n      if (session && session.userInfo) {\r\n        reduxStore = getOrCreateStore({\r\n          user: session.userInfo,\r\n          // user: {\r\n          //   name: 'zmj',\r\n          //   age: 18\r\n          // }\r\n        });\r\n      } else {\r\n        reduxStore = getOrCreateStore();\r\n      }\r\n    } else {\r\n      reduxStore = getOrCreateStore();\r\n    }\r\n    ctx.reduxStore = reduxStore;\r\n\r\n    let appProps = {};\r\n    if (typeof Comp.getInitialProps === \"function\") {\r\n      appProps = await Comp.getInitialProps(ctx);\r\n    }\r\n    // const reduxStore = getOrCreateStore()\r\n    // ctx.reduxStore = reduxStore\r\n    return {\r\n      ...appProps,\r\n      initialReduxState: reduxStore.getState(),\r\n    };\r\n  };\r\n\r\n  return withReduxApp;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}