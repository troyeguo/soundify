{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Router, { withRouter } from \"next/router\";\nimport * as actionTypes from \"../redux/action\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport Login from \"../components/Login\";\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"logInUserAndGetInfo\", function (newUser) {\n      console.log(\"LOG IN\", newUser); // console.log(this.props);\n\n      localStorage.setItem(\"newUser\", JSON.stringify(newUser));\n\n      _this.props.setUser(newUser); // set user in redux state\n\n\n      console.log(\"test\");\n      Router.push(\"/Home\");\n    });\n\n    _this.state = {\n      token: null\n    };\n    _this.token = null;\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        token: localStorage.getItem(\"react-spotify-access-token\")\n      }, function () {\n        // console.log(this.state.token, \"token\");\n        if (_this2.state.token !== undefined && _this2.state.token !== \"undefined\" && _this2.state.token) {\n          Router.push(\"/Home\");\n        }\n      }); // console.log(this.props, \"cdm\");\n\n      var params = this.getHashParams(); // If access token doesn't exist in has params, try to take it from local storage\n\n      if (params.access_token === \"undefined\") {\n        var currentAccessToken = localStorage.getItem(\"react-spotify-access-token\");\n\n        if (currentAccessToken) {\n          params.access_token = currentAccessToken;\n        }\n      } // console.log(\"Params after\", params);\n\n\n      if (params.access_token && params.access_token !== undefined && params.access_token !== \"undefined\") {\n        localStorage.setItem(\"react-spotify-access-token\", params.access_token);\n        axios.get(\"https://api.spotify.com/v1/me\", {\n          headers: {\n            Authorization: \"Bearer \".concat(params.access_token)\n          }\n        }).then(function (_ref) {\n          var data = _ref.data;\n          console.log(data, \"data\");\n\n          if (params.refresh_token) {\n            localStorage.setItem(\"react-spotify-refresh-token\", params.refresh_token);\n          }\n\n          var newUser = {\n            access_token: params.access_token,\n            displayName: data.display_name,\n            email: data.email,\n            id: data.id,\n            type: data.type,\n            country: data.country,\n            product: data.product,\n            avatar: data.images[0].url\n          };\n          console.log(newUser, \"newUser\");\n\n          _this2.logInUserAndGetInfo(newUser);\n        })[\"catch\"](function (err) {\n          console.log(err, \"fgjxfjxf\"); // 401 = Unauthorized - the access token is incorrect (expired)\n\n          if (err || err.response.status === 401) {\n            // Check if refresh token exists\n            var refreshToken = localStorage.getItem(\"react-spotify-refresh-token\");\n\n            if (refreshToken) {\n              // Send refresh token to server to acquire a new access token\n              axios.post(\"http://localhost:3000/refresh\", {\n                data: JSON.stringify({\n                  refresh_token: refreshToken\n                })\n              }).then(function (res) {\n                console.log(\"Refresh token response -\", res.data);\n                axios.get(\"https://api.spotify.com/v1/me\", {\n                  headers: {\n                    Authorization: \"Bearer \".concat(res.data.access_token)\n                  }\n                }).then(function (_ref2) {\n                  var data = _ref2.data;\n                  localStorage.setItem(\"react-spotify-access-token\", res.data.access_token);\n                  var newUser = {\n                    access_token: params.access_token,\n                    displayName: data.display_name,\n                    email: data.email,\n                    type: data.type,\n                    country: data.country,\n                    product: data.product,\n                    avatar: data.images[0].url\n                  };\n\n                  _this2.logInUserAndGetInfo(newUser);\n                });\n              })[\"catch\"](function (e) {\n                console.log(\"Refresh token error -\", e);\n              })[\"finally\"](function () {\n                _this2.setState({\n                  loading: false\n                });\n              });\n            } else {\n              // Refresh token doesn't exist, the user is shown a 'login with Spotify button'\n              _this2.setState({\n                loading: false\n              });\n            }\n          }\n        });\n      } else {\n        // The user is shown a 'login with Spotify button'\n        this.setState({\n          loading: false\n        });\n      }\n    }\n  }, {\n    key: \"getHashParams\",\n    value: function getHashParams() {\n      var hashParams = {};\n      var e,\n          r = /([^&;=]+)=?([^&;]*)/g,\n          q = window.location.hash.substring(1);\n\n      while (e = r.exec(q)) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n      }\n\n      console.log(hashParams, \"hashParams\");\n      return hashParams;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props, \"user\");\n      return __jsx(Login, null);\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.current_user,\n    backgroundImage: state.backgroundImage\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setUser: function setUser(user) {\n      return dispatch({\n        type: actionTypes.SET_USER,\n        user: user\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index));","map":{"version":3,"sources":["D:/1-Project/soundify-web/pages/index.js"],"names":["React","Component","Router","withRouter","actionTypes","axios","connect","Login","Index","props","newUser","console","log","localStorage","setItem","JSON","stringify","setUser","push","state","token","setState","getItem","undefined","params","getHashParams","access_token","currentAccessToken","get","headers","Authorization","then","data","refresh_token","displayName","display_name","email","id","type","country","product","avatar","images","url","logInUserAndGetInfo","err","response","status","refreshToken","post","res","e","loading","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","mapStateToProps","user","current_user","backgroundImage","mapDispatchToProps","dispatch","SET_USER"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Router, { withRouter } from \"next/router\";\r\nimport * as actionTypes from \"../redux/action\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"../components/Login\";\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { token: null };\r\n    this.token = null;\r\n  }\r\n  componentDidMount() {\r\n    this.setState(\r\n      {\r\n        token: localStorage.getItem(\"react-spotify-access-token\"),\r\n      },\r\n      () => {\r\n        // console.log(this.state.token, \"token\");\r\n        if (\r\n          this.state.token !== undefined &&\r\n          this.state.token !== \"undefined\" &&\r\n          this.state.token\r\n        ) {\r\n          Router.push(\"/Home\");\r\n        }\r\n      }\r\n    );\r\n\r\n    // console.log(this.props, \"cdm\");\r\n    let params = this.getHashParams();\r\n\r\n    // If access token doesn't exist in has params, try to take it from local storage\r\n    if (params.access_token === \"undefined\") {\r\n      const currentAccessToken = localStorage.getItem(\r\n        \"react-spotify-access-token\"\r\n      );\r\n\r\n      if (currentAccessToken) {\r\n        params.access_token = currentAccessToken;\r\n      }\r\n    }\r\n    // console.log(\"Params after\", params);\r\n    if (\r\n      params.access_token &&\r\n      params.access_token !== undefined &&\r\n      params.access_token !== \"undefined\"\r\n    ) {\r\n      localStorage.setItem(\"react-spotify-access-token\", params.access_token);\r\n      axios\r\n        .get(\"https://api.spotify.com/v1/me\", {\r\n          headers: {\r\n            Authorization: `Bearer ${params.access_token}`,\r\n          },\r\n        })\r\n        .then(({ data }) => {\r\n          console.log(data, \"data\");\r\n          if (params.refresh_token) {\r\n            localStorage.setItem(\r\n              \"react-spotify-refresh-token\",\r\n              params.refresh_token\r\n            );\r\n          }\r\n          let newUser = {\r\n            access_token: params.access_token,\r\n            displayName: data.display_name,\r\n            email: data.email,\r\n            id: data.id,\r\n            type: data.type,\r\n            country: data.country,\r\n            product: data.product,\r\n            avatar: data.images[0].url,\r\n          };\r\n          console.log(newUser, \"newUser\");\r\n          this.logInUserAndGetInfo(newUser);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err, \"fgjxfjxf\");\r\n          // 401 = Unauthorized - the access token is incorrect (expired)\r\n          if (err || err.response.status === 401) {\r\n            // Check if refresh token exists\r\n            const refreshToken = localStorage.getItem(\r\n              \"react-spotify-refresh-token\"\r\n            );\r\n            if (refreshToken) {\r\n              // Send refresh token to server to acquire a new access token\r\n              axios\r\n                .post(\"http://localhost:3000/refresh\", {\r\n                  data: JSON.stringify({\r\n                    refresh_token: refreshToken,\r\n                  }),\r\n                })\r\n                .then((res) => {\r\n                  console.log(\"Refresh token response -\", res.data);\r\n                  axios\r\n                    .get(\"https://api.spotify.com/v1/me\", {\r\n                      headers: {\r\n                        Authorization: `Bearer ${res.data.access_token}`,\r\n                      },\r\n                    })\r\n                    .then(({ data }) => {\r\n                      localStorage.setItem(\r\n                        \"react-spotify-access-token\",\r\n                        res.data.access_token\r\n                      );\r\n\r\n                      let newUser = {\r\n                        access_token: params.access_token,\r\n                        displayName: data.display_name,\r\n                        email: data.email,\r\n                        type: data.type,\r\n                        country: data.country,\r\n                        product: data.product,\r\n                        avatar: data.images[0].url,\r\n                      };\r\n                      this.logInUserAndGetInfo(newUser);\r\n                    });\r\n                })\r\n                .catch((e) => {\r\n                  console.log(\"Refresh token error -\", e);\r\n                })\r\n                .finally(() => {\r\n                  this.setState({ loading: false });\r\n                });\r\n            } else {\r\n              // Refresh token doesn't exist, the user is shown a 'login with Spotify button'\r\n              this.setState({ loading: false });\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      // The user is shown a 'login with Spotify button'\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n  logInUserAndGetInfo = (newUser) => {\r\n    console.log(\"LOG IN\", newUser);\r\n    // console.log(this.props);\r\n    localStorage.setItem(\"newUser\", JSON.stringify(newUser));\r\n    this.props.setUser(newUser); // set user in redux state\r\n    console.log(\"test\");\r\n    Router.push(\"/Home\");\r\n  };\r\n\r\n  getHashParams() {\r\n    var hashParams = {};\r\n    var e,\r\n      r = /([^&;=]+)=?([^&;]*)/g,\r\n      q = window.location.hash.substring(1);\r\n    while ((e = r.exec(q))) {\r\n      hashParams[e[1]] = decodeURIComponent(e[2]);\r\n    }\r\n    console.log(hashParams, \"hashParams\");\r\n    return hashParams;\r\n  }\r\n  render() {\r\n    // console.log(this.props, \"user\");\r\n\r\n    return <Login />;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.current_user,\r\n    backgroundImage: state.backgroundImage,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (user) => dispatch({ type: actionTypes.SET_USER, user }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index));\r\n"]},"metadata":{},"sourceType":"module"}