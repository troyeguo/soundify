{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport styles from \"../styles/discover.module.css\";\nimport { UserAlbums, AlbumTracks } from \"react-spotify-api\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../redux/action\";\n\nclass Album extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleIndex\", index => {\n      this.setState({\n        currentIndex: index\n      });\n    });\n\n    _defineProperty(this, \"handleSongIndex\", index => {\n      this.setState({\n        hoverIndex: index\n      });\n    });\n\n    _defineProperty(this, \"handleNext\", () => {\n      let coverList = document.querySelector(\".discover_contentCoverList__2BhJd\");\n      let coverItems = document.getElementsByClassName(\"discover_contentCoverContainer__DrO25\");\n      console.log(coverList);\n      let style = window.getComputedStyle(coverList);\n      let right = style.getPropertyValue(\"right\");\n\n      if (parseInt(right.substr(0, right.length - 2)) > (coverItems.length - 1) * 107) {\n        return;\n      }\n\n      let newRight = `${parseInt(right.substr(0, right.length - 2)) + 625}px`;\n      coverList.setAttribute(\"style\", `right:${newRight}`);\n    });\n\n    _defineProperty(this, \"handlePrev\", () => {\n      let coverList = document.querySelector(\".discover_contentCoverList__2BhJd\");\n      console.log(coverList);\n      let style = window.getComputedStyle(coverList);\n      let right = style.getPropertyValue(\"right\");\n\n      if (right === \"0px\") {\n        return;\n      }\n\n      let newRight = `${parseInt(right.substr(0, right.length - 2)) - 625}px`;\n      coverList.setAttribute(\"style\", `right:${newRight}`);\n    });\n\n    _defineProperty(this, \"playSongHandler\", (track, album) => {\n      if (track) {\n        let uris;\n\n        if (track.type === \"album\") {\n          uris = JSON.stringify({\n            context_uri: track.uri\n          });\n        } else {\n          uris = JSON.stringify({\n            context_uri: album.uri,\n            offset: {\n              uri: track.uri\n            }\n          });\n        }\n\n        this.props.playSong(uris);\n      }\n    });\n\n    this.state = {\n      currentIndex: 0,\n      hoverIndex: -1\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      className: styles.coverParent\n    }, __jsx(\"div\", {\n      className: styles.coverContainer\n    }, __jsx(UserAlbums, null, (albums, loading, error) => albums && __jsx(\"div\", {\n      className: styles.contentCoverList\n    }, albums.items.map((album, index) => __jsx(\"div\", {\n      key: album.album.id,\n      className: styles.contentCoverContainer,\n      onClick: () => {\n        this.handleIndex(index);\n      }\n    }, __jsx(\"img\", {\n      src: album.album.images[1].url,\n      alt: \"\",\n      className: styles.contentCover\n    }), __jsx(\"div\", {\n      className: styles.contentTitle\n    }, album.album.name), this.state.currentIndex === index ? __jsx(\"div\", {\n      className: styles.contentSelector\n    }) : null))))), __jsx(\"img\", {\n      src: \"/icons/more.svg\",\n      alt: \"\",\n      className: styles.nextIcon,\n      onClick: () => {\n        this.handleNext();\n      }\n    }), __jsx(\"img\", {\n      src: \"/icons/more.svg\",\n      alt: \"\",\n      className: styles.prevIcon,\n      onClick: () => {\n        this.handlePrev();\n      }\n    })), __jsx(UserAlbums, null, (albums, loading, error) => albums ? __jsx(React.Fragment, null, __jsx(AlbumTracks, {\n      id: albums.items[this.state.currentIndex].album.id\n    }, (tracks, loading, error) => tracks && __jsx(\"div\", null, __jsx(\"div\", {\n      className: styles.contentLine\n    }), __jsx(\"img\", {\n      src: \"/icons/play_with_shadow.svg\",\n      alt: \"\",\n      className: styles.playButtonShadow,\n      onClick: () => this.playSongHandler(albums.items[this.state.currentIndex].album)\n    }), __jsx(\"ul\", {\n      className: styles.contentListContainer\n    }, __jsx(\"div\", {\n      className: styles.songListContainer\n    }, __jsx(\"div\", null, tracks.items.map((track, index) => __jsx(\"li\", {\n      key: track.name,\n      className: styles.contentList,\n      onMouseOver: () => {\n        this.handleSongIndex(index);\n      },\n      onMouseLeave: () => {\n        this.handleSongIndex(-1);\n      }\n    }, __jsx(\"div\", {\n      className: styles.indexName\n    }, index + 1), this.state.hoverIndex === index ? __jsx(\"img\", {\n      src: \"/icons/play.svg\",\n      alt: \"\",\n      className: styles.listPlayIcon,\n      onClick: () => this.playSongHandler(null, playlist)\n    }) : __jsx(\"img\", {\n      src: \"/icons/favorite.svg\",\n      alt: \"\",\n      className: styles.favoriteIcon\n    }), __jsx(\"div\", {\n      className: styles.trackName\n    }, track.name), __jsx(\"div\", {\n      className: styles.trackArtist\n    }, track.artists[0].name), __jsx(\"div\", {\n      className: styles.trackAlbum\n    }, albums.items[this.state.currentIndex].album.name), __jsx(\"img\", {\n      src: \"/icons/more_dot.svg\",\n      alt: \"\",\n      className: styles.moreDot\n    }))))))))) : null));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.current_user,\n    currentlyPlaying: state.currently_playing,\n    isPlaying: state.isPlaying\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    playSong: uris => dispatch(actionTypes.playSong(uris))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Album);","map":{"version":3,"sources":["D:/1-Project/soundify-web/components/Album.js"],"names":["React","Component","styles","UserAlbums","AlbumTracks","connect","actionTypes","Album","constructor","props","index","setState","currentIndex","hoverIndex","coverList","document","querySelector","coverItems","getElementsByClassName","console","log","style","window","getComputedStyle","right","getPropertyValue","parseInt","substr","length","newRight","setAttribute","track","album","uris","type","JSON","stringify","context_uri","uri","offset","playSong","state","render","coverParent","coverContainer","albums","loading","error","contentCoverList","items","map","id","contentCoverContainer","handleIndex","images","url","contentCover","contentTitle","name","contentSelector","nextIcon","handleNext","prevIcon","handlePrev","tracks","contentLine","playButtonShadow","playSongHandler","contentListContainer","songListContainer","contentList","handleSongIndex","indexName","listPlayIcon","playlist","favoriteIcon","trackName","trackArtist","artists","trackAlbum","moreDot","mapStateToProps","user","current_user","currentlyPlaying","currently_playing","isPlaying","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport styles from \"../styles/discover.module.css\";\r\nimport { UserAlbums, AlbumTracks } from \"react-spotify-api\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../redux/action\";\r\nclass Album extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentIndex: 0, hoverIndex: -1 };\r\n  }\r\n  handleIndex = (index) => {\r\n    this.setState({ currentIndex: index });\r\n  };\r\n  handleSongIndex = (index) => {\r\n    this.setState({ hoverIndex: index });\r\n  };\r\n  handleNext = () => {\r\n    let coverList = document.querySelector(\".discover_contentCoverList__2BhJd\");\r\n    let coverItems = document.getElementsByClassName(\r\n      \"discover_contentCoverContainer__DrO25\"\r\n    );\r\n    console.log(coverList);\r\n    let style = window.getComputedStyle(coverList);\r\n    let right = style.getPropertyValue(\"right\");\r\n    if (\r\n      parseInt(right.substr(0, right.length - 2)) >\r\n      (coverItems.length - 1) * 107\r\n    ) {\r\n      return;\r\n    }\r\n    let newRight = `${parseInt(right.substr(0, right.length - 2)) + 625}px`;\r\n    coverList.setAttribute(\"style\", `right:${newRight}`);\r\n  };\r\n  handlePrev = () => {\r\n    let coverList = document.querySelector(\".discover_contentCoverList__2BhJd\");\r\n    console.log(coverList);\r\n    let style = window.getComputedStyle(coverList);\r\n    let right = style.getPropertyValue(\"right\");\r\n    if (right === \"0px\") {\r\n      return;\r\n    }\r\n    let newRight = `${parseInt(right.substr(0, right.length - 2)) - 625}px`;\r\n    coverList.setAttribute(\"style\", `right:${newRight}`);\r\n  };\r\n  playSongHandler = (track, album) => {\r\n    if (track) {\r\n      let uris;\r\n      if (track.type === \"album\") {\r\n        uris = JSON.stringify({\r\n          context_uri: track.uri,\r\n        });\r\n      } else {\r\n        uris = JSON.stringify({\r\n          context_uri: album.uri,\r\n          offset: {\r\n            uri: track.uri,\r\n          },\r\n        });\r\n      }\r\n      this.props.playSong(uris);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={styles.coverParent}>\r\n          <div className={styles.coverContainer}>\r\n            <UserAlbums>\r\n              {(albums, loading, error) =>\r\n                albums && (\r\n                  <div className={styles.contentCoverList}>\r\n                    {albums.items.map((album, index) => (\r\n                      <div\r\n                        key={album.album.id}\r\n                        className={styles.contentCoverContainer}\r\n                        onClick={() => {\r\n                          this.handleIndex(index);\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src={album.album.images[1].url}\r\n                          alt=\"\"\r\n                          className={styles.contentCover}\r\n                        />\r\n\r\n                        <div className={styles.contentTitle}>\r\n                          {album.album.name}\r\n                        </div>\r\n                        {this.state.currentIndex === index ? (\r\n                          <div className={styles.contentSelector}></div>\r\n                        ) : null}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )\r\n              }\r\n            </UserAlbums>\r\n          </div>\r\n          <img\r\n            src=\"/icons/more.svg\"\r\n            alt=\"\"\r\n            className={styles.nextIcon}\r\n            onClick={() => {\r\n              this.handleNext();\r\n            }}\r\n          />\r\n          <img\r\n            src=\"/icons/more.svg\"\r\n            alt=\"\"\r\n            className={styles.prevIcon}\r\n            onClick={() => {\r\n              this.handlePrev();\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <UserAlbums>\r\n          {(albums, loading, error) =>\r\n            albums ? (\r\n              <>\r\n                <AlbumTracks\r\n                  id={albums.items[this.state.currentIndex].album.id}\r\n                >\r\n                  {(tracks, loading, error) =>\r\n                    tracks && (\r\n                      <div>\r\n                        <div className={styles.contentLine}></div>\r\n                        <img\r\n                          src=\"/icons/play_with_shadow.svg\"\r\n                          alt=\"\"\r\n                          className={styles.playButtonShadow}\r\n                          onClick={() =>\r\n                            this.playSongHandler(\r\n                              albums.items[this.state.currentIndex].album\r\n                            )\r\n                          }\r\n                        />\r\n\r\n                        <ul className={styles.contentListContainer}>\r\n                          <div className={styles.songListContainer}>\r\n                            <div>\r\n                              {tracks.items.map((track, index) => (\r\n                                <li\r\n                                  key={track.name}\r\n                                  className={styles.contentList}\r\n                                  onMouseOver={() => {\r\n                                    this.handleSongIndex(index);\r\n                                  }}\r\n                                  onMouseLeave={() => {\r\n                                    this.handleSongIndex(-1);\r\n                                  }}\r\n                                >\r\n                                  <div className={styles.indexName}>\r\n                                    {index + 1}\r\n                                  </div>\r\n                                  {this.state.hoverIndex === index ? (\r\n                                    <img\r\n                                      src=\"/icons/play.svg\"\r\n                                      alt=\"\"\r\n                                      className={styles.listPlayIcon}\r\n                                      onClick={() =>\r\n                                        this.playSongHandler(null, playlist)\r\n                                      }\r\n                                    />\r\n                                  ) : (\r\n                                    <img\r\n                                      src=\"/icons/favorite.svg\"\r\n                                      alt=\"\"\r\n                                      className={styles.favoriteIcon}\r\n                                    />\r\n                                  )}\r\n                                  <div className={styles.trackName}>\r\n                                    {track.name}\r\n                                  </div>\r\n                                  <div className={styles.trackArtist}>\r\n                                    {track.artists[0].name}\r\n                                  </div>\r\n                                  <div className={styles.trackAlbum}>\r\n                                    {\r\n                                      albums.items[this.state.currentIndex]\r\n                                        .album.name\r\n                                    }\r\n                                  </div>\r\n                                  <img\r\n                                    src=\"/icons/more_dot.svg\"\r\n                                    alt=\"\"\r\n                                    className={styles.moreDot}\r\n                                  />\r\n                                </li>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        </ul>\r\n                      </div>\r\n                    )\r\n                  }\r\n                </AlbumTracks>\r\n              </>\r\n            ) : null\r\n          }\r\n        </UserAlbums>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.current_user,\r\n    currentlyPlaying: state.currently_playing,\r\n    isPlaying: state.isPlaying,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    playSong: (uris) => dispatch(actionTypes.playSong(uris)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Album);\r\n"]},"metadata":{},"sourceType":"module"}