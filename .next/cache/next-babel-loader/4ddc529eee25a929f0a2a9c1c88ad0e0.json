{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport styles from \"../styles/discover.module.css\";\nimport { Playlist } from \"react-spotify-api\";\nimport { UserPlaylists } from \"react-spotify-api\";\n\nclass Discover extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleIndex\", index => {\n      this.setState({\n        currentIndex: index\n      });\n    });\n\n    _defineProperty(this, \"handleSongIndex\", index => {\n      this.setState({\n        hoverIndex: index\n      });\n    });\n\n    _defineProperty(this, \"handleNext\", () => {\n      let coverList = document.querySelector(\".discover_contentCoverList__2BhJd\");\n      let coverItems = document.getElementsByClassName(\"discover_contentCoverContainer__DrO25\");\n      console.log(coverList);\n      let style = window.getComputedStyle(coverList);\n      let right = style.getPropertyValue(\"right\");\n\n      if (parseInt(right.substr(0, right.length - 2)) > (coverItems.length - 1) * 107) {\n        return;\n      }\n\n      let newRight = `${parseInt(right.substr(0, right.length - 2)) + 625}px`;\n      coverList.setAttribute(\"style\", `right:${newRight}`);\n    });\n\n    _defineProperty(this, \"handlePrev\", () => {\n      let coverList = document.querySelector(\".discover_contentCoverList__2BhJd\");\n      console.log(coverList);\n      let style = window.getComputedStyle(coverList);\n      let right = style.getPropertyValue(\"right\");\n\n      if (right === \"0px\") {\n        return;\n      }\n\n      let newRight = `${parseInt(right.substr(0, right.length - 2)) - 625}px`;\n      coverList.setAttribute(\"style\", `right:${newRight}`);\n    });\n\n    _defineProperty(this, \"playSongHandler\", (track, playlist) => {\n      if (track) {\n        let uris;\n\n        if (track.type === \"playlist\") {\n          uris = JSON.stringify({\n            context_uri: playlist.uri\n          });\n        } else {\n          uris = JSON.stringify({\n            context_uri: playlist.uri,\n            offset: {\n              uri: track.uri\n            }\n          });\n        }\n\n        this.props.playSong(uris);\n      }\n    });\n\n    this.state = {\n      currentIndex: 0,\n      hoverIndex: -1\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      className: styles.coverParent\n    }, __jsx(\"div\", {\n      className: styles.coverContainer\n    }, __jsx(UserPlaylists, null, (playlists, loading, error) => playlists ? __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: styles.contentCoverList\n    }, playlists.items.map((playlist, index) => __jsx(\"div\", {\n      key: playlist.id,\n      className: styles.contentCoverContainer,\n      onClick: () => {\n        this.handleIndex(index);\n      }\n    }, __jsx(\"img\", {\n      src: playlist.images[0].url,\n      alt: \"\",\n      className: styles.contentCover\n    }), __jsx(\"div\", {\n      className: styles.contentTitle\n    }, playlist.name), this.state.currentIndex === index ? __jsx(\"div\", {\n      className: styles.contentSelector\n    }) : null)))) : null)), __jsx(\"img\", {\n      src: \"/icons/more.svg\",\n      alt: \"\",\n      className: styles.nextIcon,\n      onClick: () => {\n        this.handleNext();\n      }\n    }), __jsx(\"img\", {\n      src: \"/icons/more.svg\",\n      alt: \"\",\n      className: styles.prevIcon,\n      onClick: () => {\n        this.handlePrev();\n      }\n    })), __jsx(UserPlaylists, null, (playlists, loading, error) => playlists ? __jsx(React.Fragment, null, __jsx(Playlist, {\n      id: playlists.items[this.state.currentIndex].id\n    }, (playlist, loading, error) => playlist && __jsx(\"div\", null, __jsx(\"div\", {\n      className: styles.contentLine\n    }), __jsx(\"img\", {\n      src: \"/icons/play_with_shadow.svg\",\n      alt: \"\",\n      className: styles.playButtonShadow,\n      onClick: () => this.playSongHandler(playlist)\n    }), __jsx(\"ul\", {\n      className: styles.contentListContainer\n    }, __jsx(\"div\", {\n      className: styles.songListContainer\n    }, __jsx(\"div\", null, playlist.tracks.items.map((track, index) => __jsx(\"li\", {\n      key: track.name,\n      className: styles.contentList,\n      onMouseOver: () => {\n        this.handleSongIndex(index);\n      },\n      onMouseLeave: () => {\n        this.handleSongIndex(-1);\n      }\n    }, __jsx(\"div\", {\n      className: styles.indexName\n    }, index + 1), this.state.hoverIndex === index ? __jsx(\"img\", {\n      src: \"/icons/play.svg\",\n      alt: \"\",\n      className: styles.listPlayIcon,\n      onClick: () => this.playSongHandler(track.track, playlist)\n    }) : __jsx(\"img\", {\n      src: \"/icons/favorite.svg\",\n      alt: \"\",\n      className: styles.favoriteIcon\n    }), __jsx(\"div\", {\n      className: styles.trackName\n    }, track.track.name), __jsx(\"div\", {\n      className: styles.trackArtist\n    }, track.track.artists[0].name), __jsx(\"div\", {\n      className: styles.trackAlbum\n    }, track.track.album.name), __jsx(\"img\", {\n      src: \"/icons/more_dot.svg\",\n      alt: \"\",\n      className: styles.moreDot\n    }))))))))) : null));\n  }\n\n}\n\nexport default Discover;","map":{"version":3,"sources":["D:/1-Project/soundify-web/components/Playlists.js"],"names":["React","Component","styles","Playlist","UserPlaylists","Discover","constructor","props","index","setState","currentIndex","hoverIndex","coverList","document","querySelector","coverItems","getElementsByClassName","console","log","style","window","getComputedStyle","right","getPropertyValue","parseInt","substr","length","newRight","setAttribute","track","playlist","uris","type","JSON","stringify","context_uri","uri","offset","playSong","state","render","coverParent","coverContainer","playlists","loading","error","contentCoverList","items","map","id","contentCoverContainer","handleIndex","images","url","contentCover","contentTitle","name","contentSelector","nextIcon","handleNext","prevIcon","handlePrev","contentLine","playButtonShadow","playSongHandler","contentListContainer","songListContainer","tracks","contentList","handleSongIndex","indexName","listPlayIcon","favoriteIcon","trackName","trackArtist","artists","trackAlbum","album","moreDot"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport styles from \"../styles/discover.module.css\";\r\nimport { Playlist } from \"react-spotify-api\";\r\nimport { UserPlaylists } from \"react-spotify-api\";\r\nclass Discover extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentIndex: 0, hoverIndex: -1 };\r\n  }\r\n  handleIndex = (index) => {\r\n    this.setState({ currentIndex: index });\r\n  };\r\n  handleSongIndex = (index) => {\r\n    this.setState({ hoverIndex: index });\r\n  };\r\n  handleNext = () => {\r\n    let coverList = document.querySelector(\".discover_contentCoverList__2BhJd\");\r\n    let coverItems = document.getElementsByClassName(\r\n      \"discover_contentCoverContainer__DrO25\"\r\n    );\r\n    console.log(coverList);\r\n    let style = window.getComputedStyle(coverList);\r\n    let right = style.getPropertyValue(\"right\");\r\n    if (\r\n      parseInt(right.substr(0, right.length - 2)) >\r\n      (coverItems.length - 1) * 107\r\n    ) {\r\n      return;\r\n    }\r\n    let newRight = `${parseInt(right.substr(0, right.length - 2)) + 625}px`;\r\n    coverList.setAttribute(\"style\", `right:${newRight}`);\r\n  };\r\n  handlePrev = () => {\r\n    let coverList = document.querySelector(\".discover_contentCoverList__2BhJd\");\r\n    console.log(coverList);\r\n    let style = window.getComputedStyle(coverList);\r\n    let right = style.getPropertyValue(\"right\");\r\n    if (right === \"0px\") {\r\n      return;\r\n    }\r\n    let newRight = `${parseInt(right.substr(0, right.length - 2)) - 625}px`;\r\n    coverList.setAttribute(\"style\", `right:${newRight}`);\r\n  };\r\n  playSongHandler = (track, playlist) => {\r\n    if (track) {\r\n      let uris;\r\n      if (track.type === \"playlist\") {\r\n        uris = JSON.stringify({\r\n          context_uri: playlist.uri,\r\n        });\r\n      } else {\r\n        uris = JSON.stringify({\r\n          context_uri: playlist.uri,\r\n          offset: {\r\n            uri: track.uri,\r\n          },\r\n        });\r\n      }\r\n      this.props.playSong(uris);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={styles.coverParent}>\r\n          <div className={styles.coverContainer}>\r\n            <UserPlaylists>\r\n              {(playlists, loading, error) =>\r\n                playlists ? (\r\n                  <>\r\n                    <div className={styles.contentCoverList}>\r\n                      {playlists.items.map((playlist, index) => (\r\n                        <div\r\n                          key={playlist.id}\r\n                          className={styles.contentCoverContainer}\r\n                          onClick={() => {\r\n                            this.handleIndex(index);\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={playlist.images[0].url}\r\n                            alt=\"\"\r\n                            className={styles.contentCover}\r\n                          />\r\n                          <div className={styles.contentTitle}>\r\n                            {playlist.name}\r\n                          </div>\r\n                          {this.state.currentIndex === index ? (\r\n                            <div className={styles.contentSelector}></div>\r\n                          ) : null}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </>\r\n                ) : null\r\n              }\r\n            </UserPlaylists>\r\n          </div>\r\n          <img\r\n            src=\"/icons/more.svg\"\r\n            alt=\"\"\r\n            className={styles.nextIcon}\r\n            onClick={() => {\r\n              this.handleNext();\r\n            }}\r\n          />\r\n          <img\r\n            src=\"/icons/more.svg\"\r\n            alt=\"\"\r\n            className={styles.prevIcon}\r\n            onClick={() => {\r\n              this.handlePrev();\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <UserPlaylists>\r\n          {(playlists, loading, error) =>\r\n            playlists ? (\r\n              <>\r\n                <Playlist id={playlists.items[this.state.currentIndex].id}>\r\n                  {(playlist, loading, error) =>\r\n                    playlist && (\r\n                      <div>\r\n                        <div className={styles.contentLine}></div>\r\n                        <img\r\n                          src=\"/icons/play_with_shadow.svg\"\r\n                          alt=\"\"\r\n                          className={styles.playButtonShadow}\r\n                          onClick={() => this.playSongHandler(playlist)}\r\n                        />\r\n                        {\r\n                          <ul className={styles.contentListContainer}>\r\n                            <div className={styles.songListContainer}>\r\n                              <div>\r\n                                {playlist.tracks.items.map((track, index) => (\r\n                                  <li\r\n                                    key={track.name}\r\n                                    className={styles.contentList}\r\n                                    onMouseOver={() => {\r\n                                      this.handleSongIndex(index);\r\n                                    }}\r\n                                    onMouseLeave={() => {\r\n                                      this.handleSongIndex(-1);\r\n                                    }}\r\n                                  >\r\n                                    <div className={styles.indexName}>\r\n                                      {index + 1}\r\n                                    </div>\r\n                                    {this.state.hoverIndex === index ? (\r\n                                      <img\r\n                                        src=\"/icons/play.svg\"\r\n                                        alt=\"\"\r\n                                        className={styles.listPlayIcon}\r\n                                        onClick={() =>\r\n                                          this.playSongHandler(\r\n                                            track.track,\r\n                                            playlist\r\n                                          )\r\n                                        }\r\n                                      />\r\n                                    ) : (\r\n                                      <img\r\n                                        src=\"/icons/favorite.svg\"\r\n                                        alt=\"\"\r\n                                        className={styles.favoriteIcon}\r\n                                      />\r\n                                    )}\r\n                                    <div className={styles.trackName}>\r\n                                      {track.track.name}\r\n                                    </div>\r\n                                    <div className={styles.trackArtist}>\r\n                                      {track.track.artists[0].name}\r\n                                    </div>\r\n                                    <div className={styles.trackAlbum}>\r\n                                      {track.track.album.name}\r\n                                    </div>\r\n\r\n                                    <img\r\n                                      src=\"/icons/more_dot.svg\"\r\n                                      alt=\"\"\r\n                                      className={styles.moreDot}\r\n                                    />\r\n                                  </li>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                          </ul>\r\n                        }\r\n                      </div>\r\n                    )\r\n                  }\r\n                </Playlist>\r\n              </>\r\n            ) : null\r\n          }\r\n        </UserPlaylists>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Discover;\r\n"]},"metadata":{},"sourceType":"module"}