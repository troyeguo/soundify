{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { withRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport songList from \"../mock/songs\";\nimport styles from \"../styles/player.module.css\";\nimport { connect } from \"react-redux\";\nimport AddDialog from \"./AddDialog\";\n\nvar Player = /*#__PURE__*/function (_Component) {\n  _inherits(Player, _Component);\n\n  var _super = _createSuper(Player);\n\n  function Player(props) {\n    var _this;\n\n    _classCallCheck(this, Player);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      deviceId: null,\n      playingInfo: null,\n      playing: false,\n      positionSliderValue: 50,\n      volumeSliderValue: 50,\n      positionStamp: \"00:00\",\n      durationStamp: \"00:00\",\n      player_init_error: false\n    };\n    _this.player = null;\n    _this.playerCheckInterval = null;\n    _this.positionCheckInterval = null;\n    return _this;\n  }\n\n  _createClass(Player, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.recently_played, \"recent\");\n\n      if (!this.props.recently_played) {\n        return null;\n      }\n\n      var recentTrack = this.props.recently_played[0];\n      return __jsx(\"div\", {\n        className: styles.player\n      }, __jsx(\"div\", {\n        className: styles.playerHeader\n      }, __jsx(\"div\", null, __jsx(\"img\", {\n        className: styles.avatar,\n        src: \"/images/avatar.jpeg\",\n        alt: \"\"\n      }), __jsx(\"span\", {\n        className: styles.nickname\n      }, \"Troye Guo\"), __jsx(\"span\", {\n        className: styles.triangle\n      }))), __jsx(\"div\", {\n        className: styles.playerCoverContainer\n      }, __jsx(\"img\", {\n        className: styles.playerCover,\n        src: recentTrack.track.album.images[1].url,\n        alt: \"\"\n      })), __jsx(\"div\", {\n        className: styles.musicInfo\n      }, __jsx(\"div\", {\n        className: styles.songName\n      }, recentTrack.track.name), __jsx(\"div\", {\n        className: styles.artistName\n      }, recentTrack.track.artists[0].name)), __jsx(\"div\", {\n        className: styles.playerPanel\n      }, __jsx(\"img\", {\n        src: \"/icons/favorite.svg\",\n        alt: \"\"\n      }), __jsx(\"img\", {\n        src: \"/icons/prev.svg\",\n        alt: \"\"\n      }), __jsx(\"img\", {\n        src: \"/icons/play.svg\",\n        alt: \"\",\n        style: {\n          width: \"45px\"\n        }\n      }), __jsx(\"img\", {\n        src: \"/icons/next.svg\",\n        alt: \"\"\n      }), __jsx(\"img\", {\n        src: \"/icons/shuffle.svg\",\n        alt: \"\",\n        style: {\n          width: \"25px\"\n        }\n      })), __jsx(\"div\", {\n        className: styles.playerNext\n      }, __jsx(\"div\", {\n        className: styles.nextText\n      }, \"Next\"), __jsx(\"div\", {\n        className: styles.nextListContainer\n      }, __jsx(\"ul\", {\n        className: styles.nextList\n      }, songList().map(function (item) {\n        return __jsx(\"li\", {\n          key: item.id,\n          className: styles.nextListItem\n        }, __jsx(\"div\", {\n          className: styles.nextSong\n        }, item.song), __jsx(\"p\", {\n          className: styles.nextArtistName,\n          style: {\n            fontSize: \"14px\",\n            lineHeight: \"20px\",\n            color: \"rgba(61, 63, 134, 0.61)\"\n          }\n        }, item.artist), __jsx(\"img\", {\n          src: \"/icons/play.svg\",\n          alt: \"\",\n          className: styles.nextButton\n        }));\n      })))));\n    }\n  }]);\n\n  return Player;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    recently_played: state.recently_played,\n    user: state.current_user,\n    playNow: state.play_now,\n    currentlyPlaying: state.currently_playing,\n    isPlaying: state.isPlaying\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setUser: function setUser(user) {\n      return dispatch({\n        type: actionTypes.SET_USER,\n        user: user\n      });\n    },\n    fetchRecentlyPlayed: function fetchRecentlyPlayed(options) {\n      return dispatch(actionTypes.fetchRecentlyPlayed(options));\n    },\n    resetPlayNow: function resetPlayNow() {\n      return dispatch({\n        type: actionTypes.RESET_PLAY_NOW\n      });\n    },\n    setCurrentlyPlaying: function setCurrentlyPlaying(song) {\n      return dispatch({\n        type: actionTypes.SET_CURRENTLY_PLAYING,\n        song: song\n      });\n    },\n    setIsPlaying: function setIsPlaying(isPlaying) {\n      return dispatch({\n        type: actionTypes.SET_IS_PLAYING,\n        isPlaying: isPlaying\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Player));","map":{"version":3,"sources":["D:/1-Project/soundify-web/components/Player.js"],"names":["React","Component","withRouter","useState","songList","styles","connect","AddDialog","Player","props","state","deviceId","playingInfo","playing","positionSliderValue","volumeSliderValue","positionStamp","durationStamp","player_init_error","player","playerCheckInterval","positionCheckInterval","console","log","recently_played","recentTrack","playerHeader","avatar","nickname","triangle","playerCoverContainer","playerCover","track","album","images","url","musicInfo","songName","name","artistName","artists","playerPanel","width","playerNext","nextText","nextListContainer","nextList","map","item","id","nextListItem","nextSong","song","nextArtistName","fontSize","lineHeight","color","artist","nextButton","mapStateToProps","user","current_user","playNow","play_now","currentlyPlaying","currently_playing","isPlaying","mapDispatchToProps","dispatch","setUser","type","actionTypes","SET_USER","fetchRecentlyPlayed","options","resetPlayNow","RESET_PLAY_NOW","setCurrentlyPlaying","SET_CURRENTLY_PLAYING","setIsPlaying","SET_IS_PLAYING"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IACMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IADC;AAEXC,MAAAA,WAAW,EAAE,IAFF;AAGXC,MAAAA,OAAO,EAAE,KAHE;AAIXC,MAAAA,mBAAmB,EAAE,EAJV;AAKXC,MAAAA,iBAAiB,EAAE,EALR;AAMXC,MAAAA,aAAa,EAAE,OANJ;AAOXC,MAAAA,aAAa,EAAE,OAPJ;AAQXC,MAAAA,iBAAiB,EAAE;AARR,KAAb;AAWA,UAAKC,MAAL,GAAc,IAAd;AACA,UAAKC,mBAAL,GAA2B,IAA3B;AACA,UAAKC,qBAAL,GAA6B,IAA7B;AAhBiB;AAiBlB;;;;6BACQ;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWe,eAAvB,EAAwC,QAAxC;;AACA,UAAI,CAAC,KAAKf,KAAL,CAAWe,eAAhB,EAAiC;AAC/B,eAAO,IAAP;AACD;;AACD,UAAIC,WAAW,GAAG,KAAKhB,KAAL,CAAWe,eAAX,CAA2B,CAA3B,CAAlB;AACA,aACE;AAAK,QAAA,SAAS,EAAEnB,MAAM,CAACc;AAAvB,SACE;AAAK,QAAA,SAAS,EAAEd,MAAM,CAACqB;AAAvB,SACE,mBACE;AAAK,QAAA,SAAS,EAAErB,MAAM,CAACsB,MAAvB;AAA+B,QAAA,GAAG,EAAC,qBAAnC;AAAyD,QAAA,GAAG,EAAC;AAA7D,QADF,EAEE;AAAM,QAAA,SAAS,EAAEtB,MAAM,CAACuB;AAAxB,qBAFF,EAGE;AAAM,QAAA,SAAS,EAAEvB,MAAM,CAACwB;AAAxB,QAHF,CADF,CADF,EAQE;AAAK,QAAA,SAAS,EAAExB,MAAM,CAACyB;AAAvB,SACE;AACE,QAAA,SAAS,EAAEzB,MAAM,CAAC0B,WADpB;AAEE,QAAA,GAAG,EAAEN,WAAW,CAACO,KAAZ,CAAkBC,KAAlB,CAAwBC,MAAxB,CAA+B,CAA/B,EAAkCC,GAFzC;AAGE,QAAA,GAAG,EAAC;AAHN,QADF,CARF,EAeE;AAAK,QAAA,SAAS,EAAE9B,MAAM,CAAC+B;AAAvB,SACE;AAAK,QAAA,SAAS,EAAE/B,MAAM,CAACgC;AAAvB,SAAkCZ,WAAW,CAACO,KAAZ,CAAkBM,IAApD,CADF,EAEE;AAAK,QAAA,SAAS,EAAEjC,MAAM,CAACkC;AAAvB,SACGd,WAAW,CAACO,KAAZ,CAAkBQ,OAAlB,CAA0B,CAA1B,EAA6BF,IADhC,CAFF,CAfF,EAqBE;AAAK,QAAA,SAAS,EAAEjC,MAAM,CAACoC;AAAvB,SACE;AAAK,QAAA,GAAG,EAAC,qBAAT;AAA+B,QAAA,GAAG,EAAC;AAAnC,QADF,EAEE;AAAK,QAAA,GAAG,EAAC,iBAAT;AAA2B,QAAA,GAAG,EAAC;AAA/B,QAFF,EAGE;AAAK,QAAA,GAAG,EAAC,iBAAT;AAA2B,QAAA,GAAG,EAAC,EAA/B;AAAkC,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAAzC,QAHF,EAIE;AAAK,QAAA,GAAG,EAAC,iBAAT;AAA2B,QAAA,GAAG,EAAC;AAA/B,QAJF,EAKE;AAAK,QAAA,GAAG,EAAC,oBAAT;AAA8B,QAAA,GAAG,EAAC,EAAlC;AAAqC,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE;AAAT;AAA5C,QALF,CArBF,EA6BE;AAAK,QAAA,SAAS,EAAErC,MAAM,CAACsC;AAAvB,SACE;AAAK,QAAA,SAAS,EAAEtC,MAAM,CAACuC;AAAvB,gBADF,EAEE;AAAK,QAAA,SAAS,EAAEvC,MAAM,CAACwC;AAAvB,SACE;AAAI,QAAA,SAAS,EAAExC,MAAM,CAACyC;AAAtB,SACG1C,QAAQ,GAAG2C,GAAX,CAAe,UAACC,IAAD,EAAU;AACxB,eACE;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAkB,UAAA,SAAS,EAAE5C,MAAM,CAAC6C;AAApC,WACE;AAAK,UAAA,SAAS,EAAE7C,MAAM,CAAC8C;AAAvB,WAAkCH,IAAI,CAACI,IAAvC,CADF,EAEE;AACE,UAAA,SAAS,EAAE/C,MAAM,CAACgD,cADpB;AAEE,UAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAE,MADL;AAELC,YAAAA,UAAU,EAAE,MAFP;AAGLC,YAAAA,KAAK,EAAE;AAHF;AAFT,WAQGR,IAAI,CAACS,MARR,CAFF,EAYE;AACE,UAAA,GAAG,EAAC,iBADN;AAEE,UAAA,GAAG,EAAC,EAFN;AAGE,UAAA,SAAS,EAAEpD,MAAM,CAACqD;AAHpB,UAZF,CADF;AAoBD,OArBA,CADH,CADF,CAFF,CA7BF,CADF;AA6DD;;;;EAtFkBzD,S;;AAwFrB,IAAM0D,eAAe,GAAG,SAAlBA,eAAkB,CAACjD,KAAD,EAAW;AACjC,SAAO;AACLc,IAAAA,eAAe,EAAEd,KAAK,CAACc,eADlB;AAELoC,IAAAA,IAAI,EAAElD,KAAK,CAACmD,YAFP;AAGLC,IAAAA,OAAO,EAAEpD,KAAK,CAACqD,QAHV;AAILC,IAAAA,gBAAgB,EAAEtD,KAAK,CAACuD,iBAJnB;AAKLC,IAAAA,SAAS,EAAExD,KAAK,CAACwD;AALZ,GAAP;AAOD,CARD;;AAUA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLC,IAAAA,OAAO,EAAE,iBAACT,IAAD;AAAA,aAAUQ,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEC,WAAW,CAACC,QAApB;AAA8BZ,QAAAA,IAAI,EAAJA;AAA9B,OAAD,CAAlB;AAAA,KADJ;AAELa,IAAAA,mBAAmB,EAAE,6BAACC,OAAD;AAAA,aACnBN,QAAQ,CAACG,WAAW,CAACE,mBAAZ,CAAgCC,OAAhC,CAAD,CADW;AAAA,KAFhB;AAILC,IAAAA,YAAY,EAAE;AAAA,aAAMP,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEC,WAAW,CAACK;AAApB,OAAD,CAAd;AAAA,KAJT;AAKLC,IAAAA,mBAAmB,EAAE,6BAACzB,IAAD;AAAA,aACnBgB,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEC,WAAW,CAACO,qBAApB;AAA2C1B,QAAAA,IAAI,EAAJA;AAA3C,OAAD,CADW;AAAA,KALhB;AAOL2B,IAAAA,YAAY,EAAE,sBAACb,SAAD;AAAA,aACZE,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEC,WAAW,CAACS,cAApB;AAAoCd,QAAAA,SAAS,EAATA;AAApC,OAAD,CADI;AAAA;AAPT,GAAP;AAUD,CAXD;;AAaA,eAAe5D,OAAO,CAACqD,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6CjE,UAAU,CAACM,MAAD,CAAvD,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"next/router\";\r\nimport { useState } from \"react\";\r\nimport songList from \"../mock/songs\";\r\nimport styles from \"../styles/player.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport AddDialog from \"./AddDialog\";\r\nclass Player extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      deviceId: null,\r\n      playingInfo: null,\r\n      playing: false,\r\n      positionSliderValue: 50,\r\n      volumeSliderValue: 50,\r\n      positionStamp: \"00:00\",\r\n      durationStamp: \"00:00\",\r\n      player_init_error: false,\r\n    };\r\n\r\n    this.player = null;\r\n    this.playerCheckInterval = null;\r\n    this.positionCheckInterval = null;\r\n  }\r\n  render() {\r\n    console.log(this.props.recently_played, \"recent\");\r\n    if (!this.props.recently_played) {\r\n      return null;\r\n    }\r\n    let recentTrack = this.props.recently_played[0];\r\n    return (\r\n      <div className={styles.player}>\r\n        <div className={styles.playerHeader}>\r\n          <div>\r\n            <img className={styles.avatar} src=\"/images/avatar.jpeg\" alt=\"\" />\r\n            <span className={styles.nickname}>Troye Guo</span>\r\n            <span className={styles.triangle}></span>\r\n          </div>\r\n        </div>\r\n        <div className={styles.playerCoverContainer}>\r\n          <img\r\n            className={styles.playerCover}\r\n            src={recentTrack.track.album.images[1].url}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className={styles.musicInfo}>\r\n          <div className={styles.songName}>{recentTrack.track.name}</div>\r\n          <div className={styles.artistName}>\r\n            {recentTrack.track.artists[0].name}\r\n          </div>\r\n        </div>\r\n        <div className={styles.playerPanel}>\r\n          <img src=\"/icons/favorite.svg\" alt=\"\" />\r\n          <img src=\"/icons/prev.svg\" alt=\"\" />\r\n          <img src=\"/icons/play.svg\" alt=\"\" style={{ width: \"45px\" }} />\r\n          <img src=\"/icons/next.svg\" alt=\"\" />\r\n          <img src=\"/icons/shuffle.svg\" alt=\"\" style={{ width: \"25px\" }} />\r\n        </div>\r\n\r\n        <div className={styles.playerNext}>\r\n          <div className={styles.nextText}>Next</div>\r\n          <div className={styles.nextListContainer}>\r\n            <ul className={styles.nextList}>\r\n              {songList().map((item) => {\r\n                return (\r\n                  <li key={item.id} className={styles.nextListItem}>\r\n                    <div className={styles.nextSong}>{item.song}</div>\r\n                    <p\r\n                      className={styles.nextArtistName}\r\n                      style={{\r\n                        fontSize: \"14px\",\r\n                        lineHeight: \"20px\",\r\n                        color: \"rgba(61, 63, 134, 0.61)\",\r\n                      }}\r\n                    >\r\n                      {item.artist}\r\n                    </p>\r\n                    <img\r\n                      src=\"/icons/play.svg\"\r\n                      alt=\"\"\r\n                      className={styles.nextButton}\r\n                    />\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    recently_played: state.recently_played,\r\n    user: state.current_user,\r\n    playNow: state.play_now,\r\n    currentlyPlaying: state.currently_playing,\r\n    isPlaying: state.isPlaying,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (user) => dispatch({ type: actionTypes.SET_USER, user }),\r\n    fetchRecentlyPlayed: (options) =>\r\n      dispatch(actionTypes.fetchRecentlyPlayed(options)),\r\n    resetPlayNow: () => dispatch({ type: actionTypes.RESET_PLAY_NOW }),\r\n    setCurrentlyPlaying: (song) =>\r\n      dispatch({ type: actionTypes.SET_CURRENTLY_PLAYING, song }),\r\n    setIsPlaying: (isPlaying) =>\r\n      dispatch({ type: actionTypes.SET_IS_PLAYING, isPlaying }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Player));\r\n"]},"metadata":{},"sourceType":"module"}