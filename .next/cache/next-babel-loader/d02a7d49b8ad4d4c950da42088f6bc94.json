{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport $axios from \"../../$axios\";\nexport var SET_USER = \"SET_USER\";\nexport var GET_RECENTLY_PLAYED = \"GET_RECENTLY_PLAYED\";\nexport var SET_RECENTLY_PLAYED = \"SET_RECENTLY_PLAYED\";\nexport var SET_PLAY_NOW = \"SET_PLAY_NOW\";\nexport var RESET_PLAY_NOW = \"RESET_PLAY_NOW\";\nexport var SET_CURRENTLY_PLAYING = \"SET_CURRENTLY_PLAYING\";\nexport var SET_IS_PLAYING = \"SET_IS_PLAYING\";\nexport var SET_BACKGROUND_IMAGE = \"SET_BACKGROUND_IMAGE\";\nexport var PLAY_SONG_START = \"PLAY_SONG_START\";\nexport var PLAY_SONG_SUCCESS = \"PLAY_SONG_SUCCESS\";\nexport var PLAY_SONG_FAIL = \"PLAY_SONG_FAIL\";\nexport var playSong = function playSong(uris, deviceId) {\n  console.log(uris, \"uris\");\n  return function (dispatch, getState) {\n    if (getState().current_user) {\n      dispatch(playSongStart());\n      $axios({\n        url: \"https://api.spotify.com/v1/me/player/play\",\n        method: \"PUT\",\n        data: uris\n      }).then(function () {\n        dispatch(playSongSuccess());\n      })[\"catch\"](function () {\n        dispatch(playSongFail());\n      });\n    }\n  };\n};\n\nvar playSongStart = function playSongStart() {\n  return {\n    type: PLAY_SONG_START\n  };\n};\n\nvar playSongSuccess = function playSongSuccess() {\n  return {\n    type: PLAY_SONG_SUCCESS\n  };\n};\n\nvar playSongFail = function playSongFail() {\n  return {\n    type: PLAY_SONG_FAIL\n  };\n};\n\nexport var pauseSong = function pauseSong() {\n  return function (dispatch, getState) {\n    if (!getState().isPlaying) {\n      $axios({\n        url: \"https://api.spotify.com/v1/me/player/pause\",\n        method: \"PUT\"\n      }).then(function (res) {\n        dispatch(setPauseSong());\n      })[\"catch\"](function (err) {\n        console.error(\"Playback cannot be paused, Your playback is probably already paused\");\n      });\n    } else {\n      console.error(\"Playback cannot be paused, Your playback is probably already paused\");\n    }\n  };\n};\n\nvar setPauseSong = function setPauseSong() {\n  return {\n    type: SET_IS_PLAYING\n  };\n};\n\nexport var fetchRecentlyPlayed = function fetchRecentlyPlayed(options) {\n  console.log(options);\n  return function (dispatch) {\n    if (true) {\n      dispatch(getRecentlyPlayed());\n      $axios({\n        url: \"https://api.spotify.com/v1/me/player/recently-played\",\n        method: \"GET\",\n        params: _objectSpread({}, options)\n      }).then(function (res) {\n        // console.log(res.data.items);\n        dispatch(setRecentlyPlayed(res.data.items));\n      })[\"catch\"](function (err) {\n        console.error(\"There was an error getting recently played tracks\");\n      });\n    }\n  };\n};\n\nvar getRecentlyPlayed = function getRecentlyPlayed() {\n  return {\n    type: GET_RECENTLY_PLAYED\n  };\n};\n\nvar setRecentlyPlayed = function setRecentlyPlayed(data) {\n  return {\n    type: SET_RECENTLY_PLAYED,\n    recently_played: data\n  };\n};","map":{"version":3,"sources":["D:/1-Project/soundify-web/redux/action/index.js"],"names":["$axios","SET_USER","GET_RECENTLY_PLAYED","SET_RECENTLY_PLAYED","SET_PLAY_NOW","RESET_PLAY_NOW","SET_CURRENTLY_PLAYING","SET_IS_PLAYING","SET_BACKGROUND_IMAGE","PLAY_SONG_START","PLAY_SONG_SUCCESS","PLAY_SONG_FAIL","playSong","uris","deviceId","console","log","dispatch","getState","current_user","playSongStart","url","method","data","then","playSongSuccess","playSongFail","type","pauseSong","isPlaying","res","setPauseSong","err","error","fetchRecentlyPlayed","options","getRecentlyPlayed","params","setRecentlyPlayed","items","recently_played"],"mappings":"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","sourcesContent":["import $axios from \"../../$axios\";\r\nexport const SET_USER = \"SET_USER\";\r\nexport const GET_RECENTLY_PLAYED = \"GET_RECENTLY_PLAYED\";\r\nexport const SET_RECENTLY_PLAYED = \"SET_RECENTLY_PLAYED\";\r\nexport const SET_PLAY_NOW = \"SET_PLAY_NOW\";\r\nexport const RESET_PLAY_NOW = \"RESET_PLAY_NOW\";\r\nexport const SET_CURRENTLY_PLAYING = \"SET_CURRENTLY_PLAYING\";\r\nexport const SET_IS_PLAYING = \"SET_IS_PLAYING\";\r\nexport const SET_BACKGROUND_IMAGE = \"SET_BACKGROUND_IMAGE\";\r\nexport const PLAY_SONG_START = \"PLAY_SONG_START\";\r\nexport const PLAY_SONG_SUCCESS = \"PLAY_SONG_SUCCESS\";\r\nexport const PLAY_SONG_FAIL = \"PLAY_SONG_FAIL\";\r\n\r\nexport const playSong = (uris, deviceId) => {\r\n  console.log(uris, \"uris\");\r\n  return (dispatch, getState) => {\r\n    if (getState().current_user) {\r\n      dispatch(playSongStart());\r\n      $axios({\r\n        url: `https://api.spotify.com/v1/me/player/play`,\r\n        method: \"PUT\",\r\n        data: uris,\r\n      })\r\n        .then(() => {\r\n          dispatch(playSongSuccess());\r\n        })\r\n        .catch(() => {\r\n          dispatch(playSongFail());\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nconst playSongStart = () => {\r\n  return {\r\n    type: PLAY_SONG_START,\r\n  };\r\n};\r\n\r\nconst playSongSuccess = () => {\r\n  return {\r\n    type: PLAY_SONG_SUCCESS,\r\n  };\r\n};\r\n\r\nconst playSongFail = () => {\r\n  return {\r\n    type: PLAY_SONG_FAIL,\r\n  };\r\n};\r\n\r\nexport const pauseSong = () => {\r\n  return (dispatch, getState) => {\r\n    if (!getState().isPlaying) {\r\n      $axios({\r\n        url: \"https://api.spotify.com/v1/me/player/pause\",\r\n        method: \"PUT\",\r\n      })\r\n        .then((res) => {\r\n          dispatch(setPauseSong());\r\n        })\r\n        .catch((err) => {\r\n          console.error(\r\n            \"Playback cannot be paused, Your playback is probably already paused\"\r\n          );\r\n        });\r\n    } else {\r\n      console.error(\r\n        \"Playback cannot be paused, Your playback is probably already paused\"\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nconst setPauseSong = () => {\r\n  return {\r\n    type: SET_IS_PLAYING,\r\n  };\r\n};\r\n\r\nexport const fetchRecentlyPlayed = (options) => {\r\n  console.log(options);\r\n  return (dispatch) => {\r\n    if (true) {\r\n      dispatch(getRecentlyPlayed());\r\n      $axios({\r\n        url: \"https://api.spotify.com/v1/me/player/recently-played\",\r\n        method: \"GET\",\r\n        params: {\r\n          ...options,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          // console.log(res.data.items);\r\n          dispatch(setRecentlyPlayed(res.data.items));\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"There was an error getting recently played tracks\");\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nconst getRecentlyPlayed = () => {\r\n  return {\r\n    type: GET_RECENTLY_PLAYED,\r\n  };\r\n};\r\n\r\nconst setRecentlyPlayed = (data) => {\r\n  return {\r\n    type: SET_RECENTLY_PLAYED,\r\n    recently_played: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}