{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport getConfig from \"next/config\";\nimport Router, { withRouter } from \"next/router\";\nimport { useSelector } from \"react-redux\";\nimport { request } from \"../lib/api\";\nimport initCache from \"../lib/clientCache\";\nimport Content from \"../components/Content\";\nconst {\n  publicRuntimeConfig\n} = getConfig();\nconst {\n  cache,\n  useCache\n} = initCache();\n\nconst Index = ({\n  userRepos,\n  starred,\n  router\n}) => {\n  const user = useSelector(store => store.user);\n  const tabKey = router.query.key || \"1\";\n  useCache(\"cache\", {\n    userRepos,\n    starred\n  });\n\n  if (!user || !user.id) {\n    // console.log(\"fase\");\n    return __jsx(\"div\", {\n      className: \"root\",\n      style: {\n        position: \"absolute\",\n        left: 200,\n        top: 100\n      }\n    }, __jsx(\"p\", null, \"\\u4EB2\\uFF0C\\u60A8\\u8FD8\\u6CA1\\u6709\\u767B\\u5F55\\u54E6\"), __jsx(\"a\", {\n      href: publicRuntimeConfig.OAUTH_URL\n    }, \"\\u70B9\\u51FB\\u767B\\u5F55\"));\n  } // const { avatar_url, login, name, bio, email } = user;\n\n\n  return __jsx(Content, null);\n};\n\nIndex.getInitialProps = cache(async ({\n  ctx,\n  reduxStore\n}) => {\n  // 判断用户是否登出;\n  const {\n    user\n  } = reduxStore.getState();\n\n  if (!user || !user.id) {\n    return {};\n  }\n});\nexport default withRouter(Index);","map":null,"metadata":{},"sourceType":"module"}