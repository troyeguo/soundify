{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\1-Project\\\\soundify-web\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from \"next/app\";\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\nimport withRedux from \"../lib/withRedux\";\nimport PageLoading from \"../components/LoadingPage\";\nimport Router from \"next/router\";\n\nvar Myapp = /*#__PURE__*/function (_App) {\n  _inherits(Myapp, _App);\n\n  var _super = _createSuper(Myapp);\n\n  function Myapp() {\n    var _this;\n\n    _classCallCheck(this, Myapp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      context: \"value\",\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"startLoading\", function () {\n      _this.setState({\n        loading: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopLoading\", function () {\n      _this.setState({\n        loading: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Myapp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Router.events.on(\"routeChangeStart\", this.startLoading);\n      Router.events.on(\"routeChangeComplete\", this.stopLoading);\n      Router.events.on(\"routeChangeError\", this.stopLoading);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Router.events.off(\"routeChangeStart\", this.startLoading);\n      Router.events.off(\"routeChangeComplete\", this.stopLoading);\n      Router.events.off(\"routeChangeError\", this.stopLoading);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          reduxStore = _this$props.reduxStore;\n      return __jsx(Provider, {\n        store: reduxStore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, this.state.loading ? __jsx(PageLoading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 35\n        }\n      }) : null, __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    // App组件的getInitialProps比较特殊\n    // 能拿到一些额外的参数\n    // Component: 被包裹的组件\n    value: function getInitialProps(ctx) {\n      var Component, pageProps;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = ctx.Component;\n              pageProps = {}; // 拿到Component上定义的getInitialProps\n\n              if (!Component.getInitialProps) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n            case 5:\n              pageProps = _context.sent;\n\n            case 6:\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return Myapp;\n}(App);\n\nexport default withRedux(Myapp);","map":{"version":3,"sources":["D:/1-Project/soundify-web/pages/_app.js"],"names":["App","Provider","React","Layout","withRedux","PageLoading","Router","Myapp","context","loading","setState","events","on","startLoading","stopLoading","off","props","Component","pageProps","reduxStore","state","ctx","getInitialProps"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;IACMC,K;;;;;;;;;;;;;;;;4DAkBI;AACNC,MAAAA,OAAO,EAAE,OADH;AAENC,MAAAA,OAAO,EAAE;AAFH,K;;mEAKO,YAAM;AACnB,YAAKC,QAAL,CAAc;AACZD,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,K;;kEAEa,YAAM;AAClB,YAAKC,QAAL,CAAc;AACZD,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,K;;;;;;;wCAEmB;AAClBH,MAAAA,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKC,YAA1C;AACAP,MAAAA,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,KAAKE,WAA7C;AACAR,MAAAA,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKE,WAA1C;AACD;;;2CAEsB;AACrBR,MAAAA,MAAM,CAACK,MAAP,CAAcI,GAAd,CAAkB,kBAAlB,EAAsC,KAAKF,YAA3C;AACAP,MAAAA,MAAM,CAACK,MAAP,CAAcI,GAAd,CAAkB,qBAAlB,EAAyC,KAAKD,WAA9C;AACAR,MAAAA,MAAM,CAACK,MAAP,CAAcI,GAAd,CAAkB,kBAAlB,EAAsC,KAAKD,WAA3C;AACD;;;6BAEQ;AAAA,wBACsC,KAAKE,KAD3C;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBC,UADvB,eACuBA,UADvB;AAEP,aACI,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,KAAL,CAAWX,OAAX,GAAqB,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArB,GAAuC,IAD1C,EAGE,MAAC,SAAD,eAAeS,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,CADF,CADJ;AASD;;;AAzDD;AACA;AACA;oCAE6BG,G;;;;;;AACnBJ,cAAAA,S,GAAcI,G,CAAdJ,S;AACJC,cAAAA,S,GAAY,E,EAEhB;;mBACID,SAAS,CAACK,e;;;;;;+CAEML,SAAS,CAACK,eAAV,CAA0BD,GAA1B,C;;;AAAlBH,cAAAA,S;;;+CAGK;AAAEA,gBAAAA,SAAS,EAATA;AAAF,e;;;;;;;;;;;;EAfSlB,G;;AA6DpB,eAAeI,SAAS,CAACG,KAAD,CAAxB","sourcesContent":["import App from \"next/app\";\r\nimport { Provider } from \"react-redux\";\r\nimport React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport withRedux from \"../lib/withRedux\";\r\nimport PageLoading from \"../components/LoadingPage\";\r\nimport Router from \"next/router\";\r\nclass Myapp extends App {\r\n  // App组件的getInitialProps比较特殊\r\n  // 能拿到一些额外的参数\r\n  // Component: 被包裹的组件\r\n\r\n  static async getInitialProps(ctx) {\r\n    const { Component } = ctx;\r\n    let pageProps = {};\r\n\r\n    // 拿到Component上定义的getInitialProps\r\n    if (Component.getInitialProps) {\r\n      // 执行拿到返回结果\r\n      pageProps = await Component.getInitialProps(ctx);\r\n    }\r\n    // 返回给组件\r\n    return { pageProps };\r\n  }\r\n\r\n  state = {\r\n    context: \"value\",\r\n    loading: false,\r\n  };\r\n  //开始loading\r\n  startLoading = () => {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n  };\r\n  //关闭 loading\r\n  stopLoading = () => {\r\n    this.setState({\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    Router.events.on(\"routeChangeStart\", this.startLoading);\r\n    Router.events.on(\"routeChangeComplete\", this.stopLoading);\r\n    Router.events.on(\"routeChangeError\", this.stopLoading);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Router.events.off(\"routeChangeStart\", this.startLoading);\r\n    Router.events.off(\"routeChangeComplete\", this.stopLoading);\r\n    Router.events.off(\"routeChangeError\", this.stopLoading);\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps, reduxStore } = this.props;\r\n    return (\r\n        <Provider store={reduxStore}>\r\n          <Layout>\r\n            {this.state.loading ? <PageLoading /> : null}\r\n            {/* 把pageProps解构后传递给组件 */}\r\n            <Component {...pageProps} />\r\n          </Layout>\r\n        </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRedux(Myapp);\r\n"]},"metadata":{},"sourceType":"module"}