{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\1-Project\\\\soundify-web\\\\utils\\\\pageWrappers\\\\withAuthUserInfo.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint react/jsx-props-no-spreading: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'lodash/object';\nimport { AuthUserInfoContext } from '../auth/hooks'; // Provides an AuthUserInfo prop to the composed component.\n\nexport default (function (ComposedComponent) {\n  var WithAuthUserInfoComp = function WithAuthUserInfoComp(props) {\n    var AuthUserInfoFromSession = props.AuthUserInfo,\n        otherProps = _objectWithoutProperties(props, [\"AuthUserInfo\"]);\n\n    return __jsx(AuthUserInfoContext.Consumer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, function (AuthUserInfo) {\n      return __jsx(ComposedComponent, _extends({}, otherProps, {\n        AuthUserInfo: AuthUserInfo || AuthUserInfoFromSession,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }\n      }));\n    });\n  };\n\n  WithAuthUserInfoComp.getInitialProps = function _callee(ctx) {\n    var AuthUserInfo, composedInitialProps;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            AuthUserInfo = get(ctx, 'myCustomData.AuthUserInfo', null); // Evaluate the composed component's getInitialProps().\n\n            composedInitialProps = {};\n\n            if (!ComposedComponent.getInitialProps) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(ComposedComponent.getInitialProps(ctx));\n\n          case 5:\n            composedInitialProps = _context.sent;\n\n          case 6:\n            return _context.abrupt(\"return\", _objectSpread({}, composedInitialProps, {\n              AuthUserInfo: AuthUserInfo\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  WithAuthUserInfoComp.displayName = \"WithAuthUserInfo(\".concat(ComposedComponent.displayName, \")\");\n  WithAuthUserInfoComp.propTypes = {\n    AuthUserInfo: PropTypes.shape({\n      AuthUser: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n        emailVerified: PropTypes.bool.isRequired\n      }),\n      token: PropTypes.string\n    })\n  };\n  WithAuthUserInfoComp.defaultProps = {};\n  return WithAuthUserInfoComp;\n});","map":{"version":3,"sources":["D:/1-Project/soundify-web/utils/pageWrappers/withAuthUserInfo.js"],"names":["React","PropTypes","get","AuthUserInfoContext","ComposedComponent","WithAuthUserInfoComp","props","AuthUserInfoFromSession","AuthUserInfo","otherProps","getInitialProps","ctx","composedInitialProps","displayName","propTypes","shape","AuthUser","id","string","isRequired","email","emailVerified","bool","token","defaultProps"],"mappings":";;;;;;;;;;;;;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,SAASC,mBAAT,QAAoC,eAApC,C,CAEA;;AACA,gBAAe,UAAAC,iBAAiB,EAAI;AAClC,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,KAAK,EAAI;AAAA,QACdC,uBADc,GAC6BD,KAD7B,CAC5BE,YAD4B;AAAA,QACcC,UADd,4BAC6BH,KAD7B;;AAEpC,WACE,MAAC,mBAAD,CAAqB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,UAAAE,YAAY;AAAA,aACX,MAAC,iBAAD,eACMC,UADN;AAEE,QAAA,YAAY,EAAED,YAAY,IAAID,uBAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADW;AAAA,KADf,CADF;AAUD,GAZD;;AAcAF,EAAAA,oBAAoB,CAACK,eAArB,GAAuC,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/BH,YAAAA,YAD+B,GAChBN,GAAG,CAACS,GAAD,EAAM,2BAAN,EAAmC,IAAnC,CADa,EAGrC;;AACIC,YAAAA,oBAJiC,GAIV,EAJU;;AAAA,iBAKjCR,iBAAiB,CAACM,eALe;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAMNN,iBAAiB,CAACM,eAAlB,CAAkCC,GAAlC,CANM;;AAAA;AAMnCC,YAAAA,oBANmC;;AAAA;AAAA,+DAUhCA,oBAVgC;AAWnCJ,cAAAA,YAAY,EAAZA;AAXmC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvC;;AAeAH,EAAAA,oBAAoB,CAACQ,WAArB,8BAAuDT,iBAAiB,CAACS,WAAzE;AAEAR,EAAAA,oBAAoB,CAACS,SAArB,GAAiC;AAC/BN,IAAAA,YAAY,EAAEP,SAAS,CAACc,KAAV,CAAgB;AAC5BC,MAAAA,QAAQ,EAAEf,SAAS,CAACc,KAAV,CAAgB;AACxBE,QAAAA,EAAE,EAAEhB,SAAS,CAACiB,MAAV,CAAiBC,UADG;AAExBC,QAAAA,KAAK,EAAEnB,SAAS,CAACiB,MAAV,CAAiBC,UAFA;AAGxBE,QAAAA,aAAa,EAAEpB,SAAS,CAACqB,IAAV,CAAeH;AAHN,OAAhB,CADkB;AAM5BI,MAAAA,KAAK,EAAEtB,SAAS,CAACiB;AANW,KAAhB;AADiB,GAAjC;AAWAb,EAAAA,oBAAoB,CAACmB,YAArB,GAAoC,EAApC;AAEA,SAAOnB,oBAAP;AACD,CA9CD","sourcesContent":["/* eslint react/jsx-props-no-spreading: 0 */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { get } from 'lodash/object'\nimport { AuthUserInfoContext } from '../auth/hooks'\n\n// Provides an AuthUserInfo prop to the composed component.\nexport default ComposedComponent => {\n  const WithAuthUserInfoComp = props => {\n    const { AuthUserInfo: AuthUserInfoFromSession, ...otherProps } = props\n    return (\n      <AuthUserInfoContext.Consumer>\n        {AuthUserInfo => (\n          <ComposedComponent\n            {...otherProps}\n            AuthUserInfo={AuthUserInfo || AuthUserInfoFromSession}\n          />\n        )}\n      </AuthUserInfoContext.Consumer>\n    )\n  }\n\n  WithAuthUserInfoComp.getInitialProps = async ctx => {\n    const AuthUserInfo = get(ctx, 'myCustomData.AuthUserInfo', null)\n\n    // Evaluate the composed component's getInitialProps().\n    let composedInitialProps = {}\n    if (ComposedComponent.getInitialProps) {\n      composedInitialProps = await ComposedComponent.getInitialProps(ctx)\n    }\n\n    return {\n      ...composedInitialProps,\n      AuthUserInfo,\n    }\n  }\n\n  WithAuthUserInfoComp.displayName = `WithAuthUserInfo(${ComposedComponent.displayName})`\n\n  WithAuthUserInfoComp.propTypes = {\n    AuthUserInfo: PropTypes.shape({\n      AuthUser: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n        emailVerified: PropTypes.bool.isRequired,\n      }),\n      token: PropTypes.string,\n    }),\n  }\n\n  WithAuthUserInfoComp.defaultProps = {}\n\n  return WithAuthUserInfoComp\n}\n"]},"metadata":{},"sourceType":"module"}