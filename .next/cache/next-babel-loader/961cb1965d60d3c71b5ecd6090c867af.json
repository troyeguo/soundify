{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from \"next/app\";\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\nimport withRedux from \"../lib/withRedux\";\nimport PageLoading from \"../components/LoadingPage\";\nimport Router from \"next/router\";\nimport \"../styles/reset.css\";\n\nclass Myapp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      context: \"value\",\n      loading: false\n    });\n\n    _defineProperty(this, \"startLoading\", () => {\n      this.setState({\n        loading: true\n      });\n    });\n\n    _defineProperty(this, \"stopLoading\", () => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  // App组件的getInitialProps比较特殊\n  // 能拿到一些额外的参数\n  // Component: 被包裹的组件\n  static async getInitialProps(ctx) {\n    const {\n      Component\n    } = ctx;\n    let pageProps = {}; // 拿到Component上定义的getInitialProps\n\n    if (Component.getInitialProps) {\n      // 执行拿到返回结果\n      pageProps = await Component.getInitialProps(ctx);\n    } // 返回给组件\n\n\n    return {\n      pageProps\n    };\n  }\n\n  componentDidMount() {\n    Router.events.on(\"routeChangeStart\", this.startLoading);\n    Router.events.on(\"routeChangeComplete\", this.stopLoading);\n    Router.events.on(\"routeChangeError\", this.stopLoading);\n  }\n\n  componentWillUnmount() {\n    Router.events.off(\"routeChangeStart\", this.startLoading);\n    Router.events.off(\"routeChangeComplete\", this.stopLoading);\n    Router.events.off(\"routeChangeError\", this.stopLoading);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore\n    } = this.props;\n    return __jsx(Provider, {\n      store: reduxStore\n    }, __jsx(Layout, null, this.state.loading ? __jsx(PageLoading, null) : null, __jsx(Component, pageProps)));\n  }\n\n}\n\nexport default withRedux(Myapp);","map":null,"metadata":{},"sourceType":"module"}