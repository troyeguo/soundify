{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { withRouter } from \"next/router\";\nimport songList from \"../mock/songs\";\nimport styles from \"../styles/content.module.css\";\nimport { UserTracks, UserAlbums, UserPlaylists } from \"react-spotify-api\";\nconst menuList = [\"Home\", \"Playlist\", \"Album\", \"Artist\", \"Search\"];\n\nclass Content extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currentIndex: 0\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      className: styles.content\n    }, __jsx(\"div\", {\n      className: styles.contentHeader\n    }, menuList[this.state.currentIndex]), __jsx(\"ul\", {\n      className: styles.contentCoverList\n    }, songList().map((item, index) => {\n      return __jsx(\"li\", {\n        key: item.id,\n        className: styles.contentCoverContainer\n      }, __jsx(\"img\", {\n        src: item.cover,\n        alt: \"\",\n        className: styles.contentCover\n      }), __jsx(\"div\", {\n        className: styles.contentTitle\n      }, item.album), currentContent === index ? __jsx(\"div\", {\n        className: styles.contentSelector\n      }) : null);\n    })), __jsx(\"img\", {\n      src: \"/icons/more.svg\",\n      alt: \"\",\n      style: {\n        marginTop: \"55px\"\n      }\n    }), __jsx(\"div\", {\n      className: styles.contentLine\n    }), __jsx(\"ul\", {\n      className: styles.contentListContainer\n    }, __jsx(\"img\", {\n      src: \"/icons/play_with_shadow.svg\",\n      alt: \"\",\n      className: styles.playButtonShadow\n    }), __jsx(UserTracks, null, tracks => tracks ? __jsx(React.Fragment, null, tracks.items.map(track => __jsx(\"li\", {\n      key: track.track.id,\n      className: styles.contentList,\n      onMouseOver: () => {\n        setCurrentSong(index);\n      },\n      onMouseLeave: () => {\n        setCurrentSong();\n      }\n    }, __jsx(\"div\", null, index + 1), __jsx(\"img\", {\n      src: \"/icons/favorite.svg\",\n      alt: \"\",\n      style: {\n        width: \"18px\"\n      }\n    }), __jsx(\"div\", null, track.track.name)))) : null))));\n  }\n\n}\n\nexport default withRouter(Content);","map":{"version":3,"sources":["D:/1-Project/soundify-web/components/Content.js"],"names":["React","Component","withRouter","songList","styles","UserTracks","UserAlbums","UserPlaylists","menuList","Content","currentIndex","render","content","contentHeader","state","contentCoverList","map","item","index","id","contentCoverContainer","cover","contentCover","contentTitle","album","currentContent","contentSelector","marginTop","contentLine","contentListContainer","playButtonShadow","tracks","items","track","contentList","setCurrentSong","width","name"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,aAAjC,QAAsD,mBAAtD;AAEA,MAAMC,QAAQ,GAAG,CAAC,MAAD,EAAS,UAAT,EAAqB,OAArB,EAA8B,QAA9B,EAAwC,QAAxC,CAAjB;;AACA,MAAMC,OAAN,SAAsBR,SAAtB,CAAgC;AAAA;AAAA;;AAAA,mCACtB;AAAES,MAAAA,YAAY,EAAE;AAAhB,KADsB;AAAA;;AAE9BC,EAAAA,MAAM,GAAG;AACP,WACE,mBACE;AAAK,MAAA,SAAS,EAAEP,MAAM,CAACQ;AAAvB,OACE;AAAK,MAAA,SAAS,EAAER,MAAM,CAACS;AAAvB,OACGL,QAAQ,CAAC,KAAKM,KAAL,CAAWJ,YAAZ,CADX,CADF,EAKE;AAAI,MAAA,SAAS,EAAEN,MAAM,CAACW;AAAtB,OACGZ,QAAQ,GAAGa,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/B,aACE;AAAI,QAAA,GAAG,EAAED,IAAI,CAACE,EAAd;AAAkB,QAAA,SAAS,EAAEf,MAAM,CAACgB;AAApC,SACE;AACE,QAAA,GAAG,EAAEH,IAAI,CAACI,KADZ;AAEE,QAAA,GAAG,EAAC,EAFN;AAGE,QAAA,SAAS,EAAEjB,MAAM,CAACkB;AAHpB,QADF,EAME;AAAK,QAAA,SAAS,EAAElB,MAAM,CAACmB;AAAvB,SAAsCN,IAAI,CAACO,KAA3C,CANF,EAOGC,cAAc,KAAKP,KAAnB,GACC;AAAK,QAAA,SAAS,EAAEd,MAAM,CAACsB;AAAvB,QADD,GAEG,IATN,CADF;AAaD,KAdA,CADH,CALF,EAsBE;AAAK,MAAA,GAAG,EAAC,iBAAT;AAA2B,MAAA,GAAG,EAAC,EAA/B;AAAkC,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AAAzC,MAtBF,EAuBE;AAAK,MAAA,SAAS,EAAEvB,MAAM,CAACwB;AAAvB,MAvBF,EAyBI;AAAI,MAAA,SAAS,EAAExB,MAAM,CAACyB;AAAtB,OACE;AACE,MAAA,GAAG,EAAC,6BADN;AAEE,MAAA,GAAG,EAAC,EAFN;AAGE,MAAA,SAAS,EAAEzB,MAAM,CAAC0B;AAHpB,MADF,EAME,MAAC,UAAD,QACIC,MAAD,IACCA,MAAM,GACJ,4BACGA,MAAM,CAACC,KAAP,CAAahB,GAAb,CAAkBiB,KAAD,IAChB;AACE,MAAA,GAAG,EAAEA,KAAK,CAACA,KAAN,CAAYd,EADnB;AAEE,MAAA,SAAS,EAAEf,MAAM,CAAC8B,WAFpB;AAGE,MAAA,WAAW,EAAE,MAAM;AACjBC,QAAAA,cAAc,CAACjB,KAAD,CAAd;AACD,OALH;AAME,MAAA,YAAY,EAAE,MAAM;AAClBiB,QAAAA,cAAc;AACf;AARH,OAUE,mBAAMjB,KAAK,GAAG,CAAd,CAVF,EAWE;AACE,MAAA,GAAG,EAAC,qBADN;AAEE,MAAA,GAAG,EAAC,EAFN;AAGE,MAAA,KAAK,EAAE;AAAEkB,QAAAA,KAAK,EAAE;AAAT;AAHT,MAXF,EAgBE,mBAAMH,KAAK,CAACA,KAAN,CAAYI,IAAlB,CAhBF,CADD,CADH,CADI,GAuBF,IAzBR,CANF,CAzBJ,CADF,CADF;AAiHD;;AApH6B;;AAuHhC,eAAenC,UAAU,CAACO,OAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"next/router\";\r\n\r\nimport songList from \"../mock/songs\";\r\nimport styles from \"../styles/content.module.css\";\r\nimport { UserTracks, UserAlbums, UserPlaylists } from \"react-spotify-api\";\r\n\r\nconst menuList = [\"Home\", \"Playlist\", \"Album\", \"Artist\", \"Search\"];\r\nclass Content extends Component {\r\n  state = { currentIndex: 0 };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={styles.content}>\r\n          <div className={styles.contentHeader}>\r\n            {menuList[this.state.currentIndex]}\r\n          </div>\r\n\r\n          <ul className={styles.contentCoverList}>\r\n            {songList().map((item, index) => {\r\n              return (\r\n                <li key={item.id} className={styles.contentCoverContainer}>\r\n                  <img\r\n                    src={item.cover}\r\n                    alt=\"\"\r\n                    className={styles.contentCover}\r\n                  />\r\n                  <div className={styles.contentTitle}>{item.album}</div>\r\n                  {currentContent === index ? (\r\n                    <div className={styles.contentSelector}></div>\r\n                  ) : null}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <img src=\"/icons/more.svg\" alt=\"\" style={{ marginTop: \"55px\" }} />\r\n          <div className={styles.contentLine}></div>\r\n          {\r\n            <ul className={styles.contentListContainer}>\r\n              <img\r\n                src=\"/icons/play_with_shadow.svg\"\r\n                alt=\"\"\r\n                className={styles.playButtonShadow}\r\n              />\r\n              <UserTracks>\r\n                {(tracks) =>\r\n                  tracks ? (\r\n                    <>\r\n                      {tracks.items.map((track) => (\r\n                        <li\r\n                          key={track.track.id}\r\n                          className={styles.contentList}\r\n                          onMouseOver={() => {\r\n                            setCurrentSong(index);\r\n                          }}\r\n                          onMouseLeave={() => {\r\n                            setCurrentSong();\r\n                          }}\r\n                        >\r\n                          <div>{index + 1}</div>\r\n                          <img\r\n                            src=\"/icons/favorite.svg\"\r\n                            alt=\"\"\r\n                            style={{ width: \"18px\" }}\r\n                          />\r\n                          <div>{track.track.name}</div>\r\n                        </li>\r\n                      ))}\r\n                    </>\r\n                  ) : null\r\n                }\r\n              </UserTracks>\r\n            </ul>\r\n          }\r\n          {\r\n            // <ul className={styles.contentListContainer}>\r\n            //   <img\r\n            //     src=\"/icons/play_with_shadow.svg\"\r\n            //     alt=\"\"\r\n            //     className={styles.playButtonShadow}\r\n            //   />\r\n            //   {songList().map((item, index) => {\r\n            //     return (\r\n            //       <li\r\n            //         key={item.id}\r\n            //         className={styles.contentList}\r\n            //         onMouseOver={() => {\r\n            //           setCurrentSong(index);\r\n            //         }}\r\n            //         onMouseLeave={() => {\r\n            //           setCurrentSong();\r\n            //         }}\r\n            //       >\r\n            //         <div>{index + 1}</div>\r\n            //         <img\r\n            //           src=\"/icons/favorite.svg\"\r\n            //           alt=\"\"\r\n            //           style={{ width: \"18px\" }}\r\n            //         />\r\n            //         <div>{item.song}</div>\r\n            //         {currentSong === index ? (\r\n            //           <>\r\n            //             <img\r\n            //               src=\"/icons/play.svg\"\r\n            //               alt=\"\"\r\n            //               style={{ opacity: 0.61, width: 30 }}\r\n            //             />\r\n            //             <img\r\n            //               src=\"/icons/more_dot.svg\"\r\n            //               alt=\"\"\r\n            //               style={{ width: 20 }}\r\n            //             />\r\n            //           </>\r\n            //         ) : null}\r\n            //         <div>{item.artist}</div>\r\n            //         <div>{item.album}</div>\r\n            //       </li>\r\n            //     );\r\n            //   })}\r\n            // </ul>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Content);\r\n"]},"metadata":{},"sourceType":"module"}