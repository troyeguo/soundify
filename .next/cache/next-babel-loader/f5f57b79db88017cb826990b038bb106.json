{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Router, { withRouter } from \"next/router\";\nimport Content from \"../components/Content\";\nimport * as actionTypes from \"../redux/action\";\nimport $axios from \"../$axios\";\nimport { connect } from \"react-redux\";\nimport { SpotifyApiContext, SpotifyApiAxiosContext } from \"react-spotify-api\";\nimport Layout from \"../components/Layout\";\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"logInUserAndGetInfo\", newUser => {\n      console.log(\"LOG IN\", newUser);\n      console.log(this.props);\n      this.props.setUser(newUser); // set user in redux state\n\n      console.log(\"test\");\n      Router.push(\"/Home\");\n    });\n\n    this.state = {\n      token: null\n    };\n    this.token = null;\n  }\n\n  componentDidMount() {\n    this.setState({\n      token: localStorage.getItem(\"react-spotify-access-token\")\n    }, () => {\n      console.log(this.state.token, \"token\");\n\n      if (this.state.token) {\n        Router.push(\"/Home\");\n      }\n    }); // console.log(this.props, \"cdm\");\n\n    let params = this.getHashParams();\n    console.log(\"Params\", params); // If access token doesn't exist in has params, try to take it from local storage\n\n    if (params.access_token === \"undefined\") {\n      const currentAccessToken = localStorage.getItem(\"react-spotify-access-token\");\n\n      if (currentAccessToken) {\n        params.access_token = currentAccessToken;\n      }\n    }\n\n    console.log(\"Params after\", params);\n\n    if (params.access_token !== undefined || params.access_token !== \"undefined\") {\n      console.log(params.access_token === \"undefined\", \"params.access_token\");\n      localStorage.setItem(\"react-spotify-access-token\", params.access_token);\n      $axios.get(\"https://api.spotify.com/v1/me\", {\n        headers: {\n          Authorization: `Bearer ${params.access_token}`\n        }\n      }).then(({\n        data\n      }) => {\n        console.log(data, \"data\");\n\n        if (params.refresh_token) {\n          localStorage.setItem(\"react-spotify-refresh-token\", params.refresh_token);\n        }\n\n        let newUser = {\n          access_token: params.access_token,\n          displayName: data.display_name,\n          email: data.email,\n          id: data.id,\n          type: data.type,\n          country: data.country,\n          product: data.product\n        };\n        console.log(newUser, \"newUser\");\n        this.logInUserAndGetInfo(newUser);\n        this.props.fetchRecentlyPlayed({\n          limit: 12\n        });\n      }).catch(err => {\n        console.log(err, \"fgjxfjxf\"); // 401 = Unauthorized - the access token is incorrect (expired)\n\n        if (err.response.status === 401) {\n          // Check if refresh token exists\n          const refreshToken = localStorage.getItem(\"react-spotify-refresh-token\");\n\n          if (refreshToken) {\n            // Send refresh token to server to acquire a new access token\n            axios.post(\"http://localhost:3000/refresh\", {\n              data: JSON.stringify({\n                refresh_token: refreshToken\n              })\n            }).then(res => {\n              console.log(\"Refresh token response -\", res.data);\n              axios.get(\"https://api.spotify.com/v1/me\", {\n                headers: {\n                  Authorization: `Bearer ${res.data.access_token}`\n                }\n              }).then(({\n                data\n              }) => {\n                localStorage.setItem(\"react-spotify-access-token\", res.data.access_token);\n                let newUser = {\n                  access_token: res.data.access_token,\n                  displayName: data.display_name,\n                  email: data.email,\n                  id: data.id,\n                  type: data.type,\n                  country: data.country,\n                  product: data.product\n                };\n                this.logInUserAndGetInfo(newUser);\n                this.props.fetchRecentlyPlayed({\n                  limit: 12\n                });\n              });\n            }).catch(e => {\n              console.log(\"Refresh token error -\", e);\n            }).finally(() => {\n              this.setState({\n                loading: false\n              });\n            });\n          } else {\n            // Refresh token doesn't exist, the user is shown a 'login with Spotify button'\n            this.setState({\n              loading: false\n            });\n          }\n        }\n      });\n    } else {\n      // The user is shown a 'login with Spotify button'\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    console.log(hashParams, \"hashParams\");\n    return hashParams;\n  }\n\n  render() {\n    // console.log(this.props, \"user\");\n    return __jsx(\"div\", {\n      className: \"layout\"\n    }, __jsx(\"a\", {\n      href: \"http://localhost:3000/login\",\n      style: {\n        position: \"absolute\",\n        left: \"300px\",\n        top: \"200px\"\n      }\n    }, \"\\u70B9\\u6211\\u767B\\u5F55\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.current_user,\n    backgroundImage: state.backgroundImage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUser: user => dispatch({\n      type: actionTypes.SET_USER,\n      user\n    }),\n    fetchRecentlyPlayed: options => dispatch(actionTypes.fetchRecentlyPlayed(options))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index));","map":{"version":3,"sources":["D:/1-Project/soundify-web/pages/index.js"],"names":["React","Component","Router","withRouter","Content","actionTypes","$axios","connect","SpotifyApiContext","SpotifyApiAxiosContext","Layout","Index","constructor","props","newUser","console","log","setUser","push","state","token","componentDidMount","setState","localStorage","getItem","params","getHashParams","access_token","currentAccessToken","undefined","setItem","get","headers","Authorization","then","data","refresh_token","displayName","display_name","email","id","type","country","product","logInUserAndGetInfo","fetchRecentlyPlayed","limit","catch","err","response","status","refreshToken","axios","post","JSON","stringify","res","e","finally","loading","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","render","position","left","top","mapStateToProps","user","current_user","backgroundImage","mapDispatchToProps","dispatch","SET_USER","options"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Router, { withRouter } from \"next/router\";\r\nimport Content from \"../components/Content\";\r\nimport * as actionTypes from \"../redux/action\";\r\nimport $axios from \"../$axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { SpotifyApiContext, SpotifyApiAxiosContext } from \"react-spotify-api\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { token: null };\r\n    this.token = null;\r\n  }\r\n  componentDidMount() {\r\n    this.setState(\r\n      {\r\n        token: localStorage.getItem(\"react-spotify-access-token\"),\r\n      },\r\n      () => {\r\n        console.log(this.state.token, \"token\");\r\n        if (this.state.token) {\r\n          Router.push(\"/Home\");\r\n        }\r\n      }\r\n    );\r\n\r\n    // console.log(this.props, \"cdm\");\r\n    let params = this.getHashParams();\r\n    console.log(\"Params\", params);\r\n    // If access token doesn't exist in has params, try to take it from local storage\r\n    if (params.access_token === \"undefined\") {\r\n      const currentAccessToken = localStorage.getItem(\r\n        \"react-spotify-access-token\"\r\n      );\r\n\r\n      if (currentAccessToken) {\r\n        params.access_token = currentAccessToken;\r\n      }\r\n    }\r\n    console.log(\"Params after\", params);\r\n    if (\r\n      params.access_token !== undefined ||\r\n      params.access_token !== \"undefined\"\r\n    ) {\r\n      console.log(params.access_token === \"undefined\", \"params.access_token\");\r\n      localStorage.setItem(\"react-spotify-access-token\", params.access_token);\r\n      $axios\r\n        .get(\"https://api.spotify.com/v1/me\", {\r\n          headers: {\r\n            Authorization: `Bearer ${params.access_token}`,\r\n          },\r\n        })\r\n        .then(({ data }) => {\r\n          console.log(data, \"data\");\r\n          if (params.refresh_token) {\r\n            localStorage.setItem(\r\n              \"react-spotify-refresh-token\",\r\n              params.refresh_token\r\n            );\r\n          }\r\n          let newUser = {\r\n            access_token: params.access_token,\r\n            displayName: data.display_name,\r\n            email: data.email,\r\n            id: data.id,\r\n            type: data.type,\r\n            country: data.country,\r\n            product: data.product,\r\n          };\r\n          console.log(newUser, \"newUser\");\r\n          this.logInUserAndGetInfo(newUser);\r\n          this.props.fetchRecentlyPlayed({ limit: 12 });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err, \"fgjxfjxf\");\r\n          // 401 = Unauthorized - the access token is incorrect (expired)\r\n          if (err.response.status === 401) {\r\n            // Check if refresh token exists\r\n            const refreshToken = localStorage.getItem(\r\n              \"react-spotify-refresh-token\"\r\n            );\r\n            if (refreshToken) {\r\n              // Send refresh token to server to acquire a new access token\r\n              axios\r\n                .post(\"http://localhost:3000/refresh\", {\r\n                  data: JSON.stringify({\r\n                    refresh_token: refreshToken,\r\n                  }),\r\n                })\r\n                .then((res) => {\r\n                  console.log(\"Refresh token response -\", res.data);\r\n                  axios\r\n                    .get(\"https://api.spotify.com/v1/me\", {\r\n                      headers: {\r\n                        Authorization: `Bearer ${res.data.access_token}`,\r\n                      },\r\n                    })\r\n                    .then(({ data }) => {\r\n                      localStorage.setItem(\r\n                        \"react-spotify-access-token\",\r\n                        res.data.access_token\r\n                      );\r\n\r\n                      let newUser = {\r\n                        access_token: res.data.access_token,\r\n                        displayName: data.display_name,\r\n                        email: data.email,\r\n                        id: data.id,\r\n                        type: data.type,\r\n                        country: data.country,\r\n                        product: data.product,\r\n                      };\r\n                      this.logInUserAndGetInfo(newUser);\r\n                      this.props.fetchRecentlyPlayed({ limit: 12 });\r\n                    });\r\n                })\r\n                .catch((e) => {\r\n                  console.log(\"Refresh token error -\", e);\r\n                })\r\n                .finally(() => {\r\n                  this.setState({ loading: false });\r\n                });\r\n            } else {\r\n              // Refresh token doesn't exist, the user is shown a 'login with Spotify button'\r\n              this.setState({ loading: false });\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      // The user is shown a 'login with Spotify button'\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n  logInUserAndGetInfo = (newUser) => {\r\n    console.log(\"LOG IN\", newUser);\r\n    console.log(this.props);\r\n    this.props.setUser(newUser); // set user in redux state\r\n    console.log(\"test\");\r\n    Router.push(\"/Home\");\r\n  };\r\n\r\n  getHashParams() {\r\n    var hashParams = {};\r\n    var e,\r\n      r = /([^&;=]+)=?([^&;]*)/g,\r\n      q = window.location.hash.substring(1);\r\n    while ((e = r.exec(q))) {\r\n      hashParams[e[1]] = decodeURIComponent(e[2]);\r\n    }\r\n    console.log(hashParams, \"hashParams\");\r\n    return hashParams;\r\n  }\r\n  render() {\r\n    // console.log(this.props, \"user\");\r\n\r\n    return (\r\n      <div className=\"layout\">\r\n        <a\r\n          href=\"http://localhost:3000/login\"\r\n          style={{ position: \"absolute\", left: \"300px\", top: \"200px\" }}\r\n        >\r\n          点我登录\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.current_user,\r\n    backgroundImage: state.backgroundImage,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (user) => dispatch({ type: actionTypes.SET_USER, user }),\r\n    fetchRecentlyPlayed: (options) =>\r\n      dispatch(actionTypes.fetchRecentlyPlayed(options)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index));\r\n"]},"metadata":{},"sourceType":"module"}