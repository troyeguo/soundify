{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport songList from \"../mock/songs\";\nimport styles from \"../styles/content.module.css\";\nimport { UserTracks, UserAlbums, UserPlaylists } from \"react-spotify-api\";\nimport { useSelector, useDispatch } from \"react-redux\";\nvar menuList = [\"Home\", \"Playlist\", \"Album\", \"Artist\", \"Search\"];\n\nvar Content = function Content(_ref) {\n  var children = _ref.children,\n      router = _ref.router;\n\n  var _useState = useState(0),\n      currentIndex = _useState[0],\n      setCurrentIndex = _useState[1];\n\n  var _useState2 = useState(0),\n      currentContent = _useState2[0],\n      setCurrentContent = _useState2[1];\n\n  var _useState3 = useState(),\n      currentSong = _useState3[0],\n      setCurrentSong = _useState3[1]; // console.log(\"true\");\n\n\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: styles.content\n  }, __jsx(\"div\", {\n    className: styles.contentHeader\n  }, menuList[currentIndex]), __jsx(\"ul\", {\n    className: styles.contentCoverList\n  }, songList().map(function (item, index) {\n    return __jsx(\"li\", {\n      key: item.id,\n      className: styles.contentCoverContainer\n    }, __jsx(\"img\", {\n      src: item.cover,\n      alt: \"\",\n      className: styles.contentCover\n    }), __jsx(\"div\", {\n      className: styles.contentTitle\n    }, item.album), currentContent === index ? __jsx(\"div\", {\n      className: styles.contentSelector\n    }) : null);\n  })), __jsx(\"img\", {\n    src: \"/icons/more.svg\",\n    alt: \"\",\n    style: {\n      marginTop: \"55px\"\n    }\n  }), __jsx(\"div\", {\n    className: styles.contentLine\n  }), __jsx(\"ul\", {\n    className: styles.contentListContainer\n  }, __jsx(\"img\", {\n    src: \"/icons/play_with_shadow.svg\",\n    alt: \"\",\n    className: styles.playButtonShadow\n  }), __jsx(UserTracks, null, function (tracks) {\n    return tracks ? __jsx(React.Fragment, null, tracks.items.map(function (track) {\n      return __jsx(\"li\", {\n        key: track.track.id,\n        className: styles.contentList,\n        onMouseOver: function onMouseOver() {\n          setCurrentSong(index);\n        },\n        onMouseLeave: function onMouseLeave() {\n          setCurrentSong();\n        }\n      }, __jsx(\"div\", null, index + 1), __jsx(\"img\", {\n        src: \"/icons/favorite.svg\",\n        alt: \"\",\n        style: {\n          width: \"18px\"\n        }\n      }), __jsx(\"div\", null, track.track.name));\n    })) : null;\n  })), __jsx(\"ul\", {\n    className: styles.contentListContainer\n  }, __jsx(\"img\", {\n    src: \"/icons/play_with_shadow.svg\",\n    alt: \"\",\n    className: styles.playButtonShadow\n  }), songList().map(function (item, index) {\n    return __jsx(\"li\", {\n      key: item.id,\n      className: styles.contentList,\n      onMouseOver: function onMouseOver() {\n        setCurrentSong(index);\n      },\n      onMouseLeave: function onMouseLeave() {\n        setCurrentSong();\n      }\n    }, __jsx(\"div\", null, index + 1), __jsx(\"img\", {\n      src: \"/icons/favorite.svg\",\n      alt: \"\",\n      style: {\n        width: \"18px\"\n      }\n    }), __jsx(\"div\", null, item.song), currentSong === index ? __jsx(React.Fragment, null, __jsx(\"img\", {\n      src: \"/icons/play.svg\",\n      alt: \"\",\n      style: {\n        opacity: 0.61,\n        width: 30\n      }\n    }), __jsx(\"img\", {\n      src: \"/icons/more_dot.svg\",\n      alt: \"\",\n      style: {\n        width: 20\n      }\n    })) : null, __jsx(\"div\", null, item.artist), __jsx(\"div\", null, item.album));\n  }))));\n};\n\nexport default withRouter(Content);","map":{"version":3,"sources":["D:/1-Project/soundify-web/components/Content.js"],"names":["withRouter","useState","songList","styles","UserTracks","UserAlbums","UserPlaylists","useSelector","useDispatch","menuList","Content","children","router","currentIndex","setCurrentIndex","currentContent","setCurrentContent","currentSong","setCurrentSong","content","contentHeader","contentCoverList","map","item","index","id","contentCoverContainer","cover","contentCover","contentTitle","album","contentSelector","marginTop","contentLine","contentListContainer","playButtonShadow","tracks","items","track","contentList","width","name","song","opacity","artist"],"mappings":"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","sourcesContent":["import { withRouter } from \"next/router\";\r\nimport { useState } from \"react\";\r\nimport songList from \"../mock/songs\";\r\nimport styles from \"../styles/content.module.css\";\r\nimport { UserTracks, UserAlbums, UserPlaylists } from \"react-spotify-api\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst menuList = [\"Home\", \"Playlist\", \"Album\", \"Artist\", \"Search\"];\r\nconst Content = ({ children, router }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [currentContent, setCurrentContent] = useState(0);\r\n  const [currentSong, setCurrentSong] = useState();\r\n  // console.log(\"true\");\r\n  return (\r\n    <div>\r\n      <div className={styles.content}>\r\n        <div className={styles.contentHeader}>{menuList[currentIndex]}</div>\r\n\r\n        <ul className={styles.contentCoverList}>\r\n          {songList().map((item, index) => {\r\n            return (\r\n              <li key={item.id} className={styles.contentCoverContainer}>\r\n                <img src={item.cover} alt=\"\" className={styles.contentCover} />\r\n                <div className={styles.contentTitle}>{item.album}</div>\r\n                {currentContent === index ? (\r\n                  <div className={styles.contentSelector}></div>\r\n                ) : null}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <img src=\"/icons/more.svg\" alt=\"\" style={{ marginTop: \"55px\" }} />\r\n        <div className={styles.contentLine}></div>\r\n        <ul className={styles.contentListContainer}>\r\n          <img\r\n            src=\"/icons/play_with_shadow.svg\"\r\n            alt=\"\"\r\n            className={styles.playButtonShadow}\r\n          />\r\n          <UserTracks>\r\n            {(tracks) =>\r\n              tracks ? (\r\n                <>\r\n                  {tracks.items.map((track) => (\r\n                    <li\r\n                      key={track.track.id}\r\n                      className={styles.contentList}\r\n                      onMouseOver={() => {\r\n                        setCurrentSong(index);\r\n                      }}\r\n                      onMouseLeave={() => {\r\n                        setCurrentSong();\r\n                      }}\r\n                    >\r\n                      <div>{index + 1}</div>\r\n                      <img\r\n                        src=\"/icons/favorite.svg\"\r\n                        alt=\"\"\r\n                        style={{ width: \"18px\" }}\r\n                      />\r\n\r\n                      <div>{track.track.name}</div>\r\n                    </li>\r\n                  ))}\r\n                </>\r\n              ) : null\r\n            }\r\n          </UserTracks>\r\n        </ul>\r\n        <ul className={styles.contentListContainer}>\r\n          <img\r\n            src=\"/icons/play_with_shadow.svg\"\r\n            alt=\"\"\r\n            className={styles.playButtonShadow}\r\n          />\r\n          {songList().map((item, index) => {\r\n            return (\r\n              <li\r\n                key={item.id}\r\n                className={styles.contentList}\r\n                onMouseOver={() => {\r\n                  setCurrentSong(index);\r\n                }}\r\n                onMouseLeave={() => {\r\n                  setCurrentSong();\r\n                }}\r\n              >\r\n                <div>{index + 1}</div>\r\n                <img\r\n                  src=\"/icons/favorite.svg\"\r\n                  alt=\"\"\r\n                  style={{ width: \"18px\" }}\r\n                />\r\n                <div>{item.song}</div>\r\n                {currentSong === index ? (\r\n                  <>\r\n                    <img\r\n                      src=\"/icons/play.svg\"\r\n                      alt=\"\"\r\n                      style={{ opacity: 0.61, width: 30 }}\r\n                    />\r\n                    <img\r\n                      src=\"/icons/more_dot.svg\"\r\n                      alt=\"\"\r\n                      style={{ width: 20 }}\r\n                    />\r\n                  </>\r\n                ) : null}\r\n\r\n                <div>{item.artist}</div>\r\n                <div>{item.album}</div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Content);\r\n"]},"metadata":{},"sourceType":"module"}